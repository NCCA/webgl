
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    }
    var PACKAGE_NAME = 'WebNGL.data';
    var REMOTE_PACKAGE_NAME = (Module['filePackagePrefixURL'] || '') + 'WebNGL.data.compress';
    var REMOTE_PACKAGE_SIZE = 1095070;
    var PACKAGE_UUID = '68bbab5f-1ae1-4a70-a3a1-d3fa4fba23cd';
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createPath']('/', 'shaders', true, true);
Module['FS_createPath']('/', 'models', true, true);
Module['FS_createPath']('/', 'font', true, true);

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 1612, 0, 0).open('GET', '/shaders/PerFragASDFrag.glsl');
    new DataRequest(1612, 2666, 0, 0).open('GET', '/shaders/PerFragASDVert.glsl');
    new DataRequest(2666, 1159481, 0, 0).open('GET', '/models/BrucePose1.obj');
    new DataRequest(1159481, 2317174, 0, 0).open('GET', '/models/BrucePose2.obj');
    new DataRequest(2317174, 3474611, 0, 0).open('GET', '/models/BrucePose3.obj');
    new DataRequest(3474611, 13099289, 0, 0).open('GET', '/models/bruceWannabee_poses.ma');
    new DataRequest(13099289, 13871481, 0, 0).open('GET', '/font/arial.ttf');

    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
      Module["decompress"](byteArray, function(decompressed) {
        byteArray = new Uint8Array(decompressed);
        
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/shaders/PerFragASDFrag.glsl"].onload();
          DataRequest.prototype.requests["/shaders/PerFragASDVert.glsl"].onload();
          DataRequest.prototype.requests["/models/BrucePose1.obj"].onload();
          DataRequest.prototype.requests["/models/BrucePose2.obj"].onload();
          DataRequest.prototype.requests["/models/BrucePose3.obj"].onload();
          DataRequest.prototype.requests["/models/bruceWannabee_poses.ma"].onload();
          DataRequest.prototype.requests["/font/arial.ttf"].onload();
          Module['removeRunDependency']('datafile_WebNGL.data');

      });
    
    };
    Module['addRunDependency']('datafile_WebNGL.data');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

})();

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.

  while (TOTAL_MEMORY <= DYNAMICTOP) { // Simple heuristic.
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  assert(TOTAL_MEMORY <= Math.pow(2, 30)); // 2^30==1GB is a practical maximum - 2^31 is already close to possible negative numbers etc.
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
  HEAP8.set(oldHEAP8);
  _emscripten_replace_memory(HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===
var __ZTVN10__cxxabiv117__class_type_infoE = 29456;
var __ZTIi = 29592;
var __ZTVN10__cxxabiv120__si_class_type_infoE = 29600;




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + Runtime.alignMemory(30427);
/* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } }, { func: function() { __GLOBAL__I_a295() } });


/* memory initializer */ allocate([0,0,0,0,56,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,78,51,110,103,108,49,50,65,98,115,116,114,97,99,116,77,101,115,104,69,0,0,0,0,24,115,0,0,32,0,0,0,119,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,114,43,0,0,0,0,0,0,119,43,0,0,0,0,0,0,97,43,0,0,0,0,0,0,119,98,0,0,0,0,0,0,97,98,0,0,0,0,0,0,114,98,0,0,0,0,0,0,114,43,98,0,0,0,0,0,119,43,98,0,0,0,0,0,97,43,98,0,0,0,0,0,0,0,0,0,16,1,0,0,3,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,168,115,0,0,224,0,0,0,104,75,0,0,0,0,0,0,86,65,79,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,32,115,111,32,100,101,108,101,116,101,32,97,110,100,32,114,101,45,99,114,101,97,116,101,10,0,0,0,0,0,0,1,5,0,4,5,3,2,6,7,6,3,0,1,2,3,2,0,4,5,6,7,6,4,0,3,4,4,7,3,1,5,2,2,6,5,0,0,0,0,0,3,7,4,0,0,1,5,4,0,1,2,6,5,1,0,1,2,3,0,4,5,6,7,4,0,0,0,0,0,0,0,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,32,58,0,0,0,0,0,0,95,102,97,114,62,95,110,101,97,114,0,0,0,0,0,0,10,70,97,105,108,117,114,101,32,111,99,99,117,114,101,100,32,111,110,32,108,105,110,101,32,0,0,0,0,0,0,0,32,111,102,32,115,111,117,114,99,101,32,102,105,108,101,32,58,0,0,0,0,0,0,0,10,32,34,0,0,0,0,0,115,114,99,47,67,97,109,101,114,97,46,99,112,112,0,0,34,0,0,0,0,0,0,0,95,110,101,97,114,62,67,65,77,69,82,65,78,69,65,82,76,73,77,73,84,0,0,0,0,0,0,0,0,0,0,0,110,103,108,32,48,32,100,101,116,101,114,109,105,110,97,110,116,32,10,0,0,0,0,0,105,116,101,109,46,112,97,100,95,115,99,104,101,109,101,95,32,38,32,102,111,114,109,97,116,95,105,116,101,109,95,116,58,58,116,97,98,117,108,97,116,105,111,110,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,102,111,114,109,97,116,95,105,109,112,108,101,109,101,110,116,97,116,105,111,110,46,104,112,112,0,0,0,0,0,0,0,115,116,114,0,0,0,0,0,0,0,0,0,48,3,0,0,5,0,0,0,6,0,0,0,5,0,0,0,0,0,0,0,78,53,98,111,111,115,116,50,105,111,49,50,116,111,111,95,102,101,119,95,97,114,103,115,69,0,0,0,0,0,0,0,78,53,98,111,111,115,116,50,105,111,49,50,102,111,114,109,97,116,95,101,114,114,111,114,69,0,0,0,0,0,0,0,168,115,0,0,0,3,0,0,0,0,0,0,0,0,0,0,168,115,0,0,224,2,0,0,32,3,0,0,0,0,0,0,98,111,111,115,116,58,58,116,111,111,95,102,101,119,95,97,114,103,115,58,32,102,111,114,109,97,116,45,115,116,114,105,110,103,32,114,101,102,101,114,114,101,100,32,116,111,32,109,111,114,101,32,97,114,103,117,109,101,110,116,115,32,116,104,97,110,32,119,101,114,101,32,112,97,115,115,101,100,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,105,109,112,108,73,78,83,48,95,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,50,116,111,111,95,102,101,119,95,97,114,103,115,69,69,69,69,69,0,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,50,116,111,111,95,102,101,119,95,97,114,103,115,69,69,69,0,0,78,53,98,111,111,115,116,57,101,120,99,101,112,116,105,111,110,69,0,0,0,0,0,0,24,115,0,0,56,4,0,0,8,116,0,0,240,3,0,0,0,0,0,0,2,0,0,0,48,3,0,0,2,0,0,0,80,4,0,0,2,12,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,98,97,115,101,69,0,0,24,115,0,0,120,4,0,0,8,116,0,0,144,3,0,0,0,0,0,0,2,0,0,0,88,4,0,0,2,0,0,0,160,4,0,0,3,244,255,255,0,0,0,0,80,4,0,0,1,0,0,0,1,0,0,0,32,0,0,0,0,0,0,0,168,4,0,0,7,0,0,0,8,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,244,255,255,255,168,4,0,0,10,0,0,0,11,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,168,4,0,0,7,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,88,4,0,0,15,0,0,0,16,0,0,0,5,0,0,0,244,255,255,255,88,4,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,160,4,0,0,1,0,0,0,1,0,0,0,19,0,0,0,20,0,0,0,12,0,0,0,0,0,0,0,120,6,0,0,21,0,0,0,22,0,0,0,244,255,255,255,244,255,255,255,120,6,0,0,23,0,0,0,24,0,0,0,78,53,98,111,111,115,116,50,105,111,50,50,98,97,115,105,99,95,111,97,108,116,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,116,51,95,95,49,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,98,97,115,101,95,102,114,111,109,95,109,101,109,98,101,114,73,78,83,95,49,48,115,104,97,114,101,100,95,112,116,114,73,78,83,95,50,105,111,49,56,98,97,115,105,99,95,97,108,116,115,116,114,105,110,103,98,117,102,73,99,78,83,116,51,95,95,49,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,52,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,69,76,105,48,69,69,69,0,0,0,0,0,0,24,115,0,0,240,5,0,0,8,116,0,0,152,5,0,0,0,0,0,0,2,0,0,0,112,6,0,0,0,4,0,0,112,76,0,0,2,0,0,0,12,0,0,0,0,0,0,0,112,76,0,0,25,0,0,0,26,0,0,0,244,255,255,255,244,255,255,255,112,76,0,0,27,0,0,0,28,0,0,0,116,104,105,115,45,62,105,115,95,105,110,105,116,105,97,108,105,122,101,100,40,41,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,111,112,116,105,111,110,97,108,47,111,112,116,105,111,110,97,108,46,104,112,112,0,0,103,101,116,0,0,0,0,0,0,0,0,0,0,8,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,3,0,0,0,8,0,0,0,78,53,98,111,111,115,116,54,100,101,116,97,105,108,49,56,115,112,95,99,111,117,110,116,101,100,95,105,109,112,108,95,112,100,73,80,78,83,95,50,105,111,49,56,98,97,115,105,99,95,97,108,116,115,116,114,105,110,103,98,117,102,73,99,78,83,116,51,95,95,49,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,52,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,78,83,50,95,50,50,98,97,115,105,99,95,111,97,108,116,115,116,114,105,110,103,115,116,114,101,97,109,73,99,83,54,95,83,56,95,69,53,78,111,95,79,112,69,69,69,0,0,0,0,0,0,78,53,98,111,111,115,116,54,100,101,116,97,105,108,49,53,115,112,95,99,111,117,110,116,101,100,95,98,97,115,101,69,0,0,0,0,0,0,0,0,24,115,0,0,208,7,0,0,168,115,0,0,48,7,0,0,248,7,0,0,0,0,0,0,78,53,98,111,111,115,116,50,105,111,50,50,98,97,115,105,99,95,111,97,108,116,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,116,51,95,95,49,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,53,78,111,95,79,112,69,0,0,0,0,0,0,160,8,0,0,33,0,0,0,34,0,0,0,9,0,0,0,0,0,0,0,78,53,98,111,111,115,116,50,105,111,49,51,116,111,111,95,109,97,110,121,95,97,114,103,115,69,0,0,0,0,0,0,168,115,0,0,128,8,0,0,32,3,0,0,0,0,0,0,98,111,111,115,116,58,58,116,111,111,95,109,97,110,121,95,97,114,103,115,58,32,102,111,114,109,97,116,45,115,116,114,105,110,103,32,114,101,102,101,114,114,101,100,32,116,111,32,108,101,115,115,32,97,114,103,117,109,101,110,116,115,32,116,104,97,110,32,119,101,114,101,32,112,97,115,115,101,100,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,105,109,112,108,73,78,83,48,95,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,51,116,111,111,95,109,97,110,121,95,97,114,103,115,69,69,69,69,69,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,51,116,111,111,95,109,97,110,121,95,97,114,103,115,69,69,69,0,8,116,0,0,96,9,0,0,0,0,0,0,2,0,0,0,160,8,0,0,2,0,0,0,80,4,0,0,2,12,0,0,8,116,0,0,0,9,0,0,0,0,0,0,2,0,0,0,168,9,0,0,2,0,0,0,160,4,0,0,3,244,255,255,32,0,0,0,0,0,0,0,200,9,0,0,35,0,0,0,36,0,0,0,9,0,0,0,10,0,0,0,37,0,0,0,244,255,255,255,200,9,0,0,38,0,0,0,39,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,200,9,0,0,11,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,168,9,0,0,43,0,0,0,44,0,0,0,9,0,0,0,244,255,255,255,168,9,0,0,45,0,0,0,46,0,0,0,0,0,0,0,98,111,117,110,100,95,46,115,105,122,101,40,41,61,61,48,32,124,124,32,110,117,109,95,97,114,103,115,95,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,105,110,116,62,40,98,111,117,110,100,95,46,115,105,122,101,40,41,41,0,0,0,0,0,0,0,0,99,108,101,97,114,0,0,0,0,0,0,0,72,11,0,0,47,0,0,0,48,0,0,0,2,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,12,0,0,0,2,0,0,0,2,0,0,0,13,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,78,53,98,111,111,115,116,50,105,111,49,56,98,97,115,105,99,95,97,108,116,115,116,114,105,110,103,98,117,102,73,99,78,83,116,51,95,95,49,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,50,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,168,115,0,0,248,10,0,0,104,75,0,0,0,0,0,0,48,0,0,0,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,97,108,116,95,115,115,116,114,101,97,109,95,105,109,112,108,46,104,112,112,0,0,0,0,115,101,101,107,112,111,115,0,115,116,97,116,105,99,95,99,97,115,116,60,117,110,115,105,103,110,101,100,32,105,110,116,62,40,99,117,114,95,105,116,101,109,41,32,60,32,105,116,101,109,115,95,46,115,105,122,101,40,41,32,124,124,32,99,117,114,95,105,116,101,109,61,61,48,0,0,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,112,97,114,115,105,110,103,46,104,112,112,0,0,0,0,0,112,97,114,115,101,0,0,0,0,0,0,0,88,12,0,0,49,0,0,0,50,0,0,0,14,0,0,0,0,0,0,0,78,53,98,111,111,115,116,50,105,111,49,55,98,97,100,95,102,111,114,109,97,116,95,115,116,114,105,110,103,69,0,0,168,115,0,0,56,12,0,0,32,3,0,0,0,0,0,0,98,111,111,115,116,58,58,98,97,100,95,102,111,114,109,97,116,95,115,116,114,105,110,103,58,32,102,111,114,109,97,116,45,115,116,114,105,110,103,32,105,115,32,105,108,108,45,102,111,114,109,101,100,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,105,109,112,108,73,78,83,48,95,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,55,98,97,100,95,102,111,114,109,97,116,95,115,116,114,105,110,103,69,69,69,69,69,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,50,105,111,49,55,98,97,100,95,102,111,114,109,97,116,95,115,116,114,105,110,103,69,69,69,0,0,0,0,0,8,116,0,0,0,13,0,0,0,0,0,0,2,0,0,0,88,12,0,0,2,0,0,0,80,4,0,0,2,12,0,0,8,116,0,0,160,12,0,0,0,0,0,0,2,0,0,0,80,13,0,0,2,0,0,0,160,4,0,0,3,244,255,255,32,0,0,0,0,0,0,0,112,13,0,0,51,0,0,0,52,0,0,0,14,0,0,0,15,0,0,0,53,0,0,0,244,255,255,255,112,13,0,0,54,0,0,0,55,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,112,13,0,0,16,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,80,13,0,0,59,0,0,0,60,0,0,0,14,0,0,0,244,255,255,255,80,13,0,0,61,0,0,0,62,0,0,0,0,0,0,0,33,40,102,109,116,115,116,97,116,101,95,46,102,108,97,103,115,95,32,38,40,115,116,100,58,58,105,111,115,95,98,97,115,101,58,58,97,100,106,117,115,116,102,105,101,108,100,32,94,115,116,100,58,58,105,111,115,95,98,97,115,101,58,58,108,101,102,116,41,41,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,105,110,116,101,114,110,97,108,115,46,104,112,112,0,0,0,99,111,109,112,117,116,101,95,115,116,97,116,101,115,0,0,108,0,0,0,0,0,0,0,0,15,0,0,63,0,0,0,64,0,0,0,148,255,255,255,148,255,255,255,0,15,0,0,65,0,0,0,66,0,0,0,164,14,0,0,28,15,0,0,48,15,0,0,184,14,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,168,115,0,0,208,14,0,0,224,75,0,0,0,0,0,0,108,0,0,0,0,0,0,0,224,75,0,0,67,0,0,0,68,0,0,0,148,255,255,255,148,255,255,255,224,75,0,0,69,0,0,0,70,0,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,0,0,24,115,0,0,120,15,0,0,8,116,0,0,56,15,0,0,0,0,0,0,1,0,0,0,160,15,0,0,0,0,0,0,0,0,0,0,248,15,0,0,71,0,0,0,72,0,0,0,17,0,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,98,97,100,95,108,101,120,105,99,97,108,95,99,97,115,116,69,0,0,0,0,0,0,168,115,0,0,216,15,0,0,144,114,0,0,0,0,0,0,98,97,100,32,108,101,120,105,99,97,108,32,99,97,115,116,58,32,115,111,117,114,99,101,32,116,121,112,101,32,118,97,108,117,101,32,99,111,117,108,100,32,110,111,116,32,98,101,32,105,110,116,101,114,112,114,101,116,101,100,32,97,115,32,116,97,114,103,101,116,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,105,109,112,108,73,78,83,48,95,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,49,54,98,97,100,95,108,101,120,105,99,97,108,95,99,97,115,116,69,69,69,69,69,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,49,54,98,97,100,95,108,101,120,105,99,97,108,95,99,97,115,116,69,69,69,0,8,116,0,0,176,16,0,0,0,0,0,0,2,0,0,0,248,15,0,0,2,0,0,0,80,4,0,0,2,12,0,0,8,116,0,0,80,16,0,0,0,0,0,0,2,0,0,0,248,16,0,0,2,0,0,0,160,4,0,0,3,244,255,255,32,0,0,0,0,0,0,0,24,17,0,0,73,0,0,0,74,0,0,0,17,0,0,0,18,0,0,0,75,0,0,0,244,255,255,255,24,17,0,0,76,0,0,0,77,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,24,17,0,0,19,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,248,16,0,0,81,0,0,0,82,0,0,0,17,0,0,0,244,255,255,255,248,16,0,0,83,0,0,0,84,0,0,0,0,0,0,0,118,97,108,105,100,95,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,116,111,107,101,110,95,105,116,101,114,97,116,111,114,46,104,112,112,0,0,0,0,0,100,101,114,101,102,101,114,101,110,99,101,0,0,0,0,0,105,110,99,114,101,109,101,110,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,118,116,0,0,0,0,0,0,118,110,0,0,0,0,0,0,47,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,83,111,109,101,116,104,105,110,103,32,119,114,111,110,103,32,119,105,116,104,32,116,104,101,32,102,97,99,101,32,100,97,116,97,32,119,105,108,108,32,99,111,110,116,105,110,117,101,32,98,117,116,32,109,97,121,32,110,111,116,32,98,101,32,99,111,114,114,101,99,116,10,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,70,73,76,69,32,78,79,84,32,70,79,85,78,68,32,33,33,33,33,32,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,240,19,0,0,5,0,0,0,85,0,0,0,86,0,0,0,0,0,0,0,78,51,110,103,108,51,79,98,106,69,0,0,0,0,0,0,168,115,0,0,224,19,0,0,56,0,0,0,0,0,0,0,0,0,0,0,88,22,0,0,87,0,0,0,88,0,0,0,1,0,0,0,20,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,48,95,53,99,104,108,105,116,73,99,69,69,78,83,48,95,49,49,107,108,101,101,110,101,95,115,116,97,114,73,78,83,48,95,49,52,97,110,121,99,104,97,114,95,112,97,114,115,101,114,69,69,69,69,69,78,83,95,51,95,98,105,54,98,105,110,100,95,116,73,118,78,83,95,52,95,109,102,105,51,109,102,49,73,118,78,51,110,103,108,51,79,98,106,69,80,75,99,69,69,78,83,66,95,53,108,105,115,116,50,73,78,83,95,49,55,114,101,102,101,114,101,110,99,101,95,119,114,97,112,112,101,114,73,83,71,95,69,69,78,83,95,51,97,114,103,73,76,105,49,69,69,69,69,69,69,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,73,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,97,98,115,116,114,97,99,116,95,112,97,114,115,101,114,73,78,83,48,95,55,115,99,97,110,110,101,114,73,80,75,99,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,0,0,24,115,0,0,144,21,0,0,168,115,0,0,24,20,0,0,80,22,0,0,0,0,0,0,42,116,104,105,115,32,38,38,32,111,116,104,101,114,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,115,112,105,114,105,116,47,104,111,109,101,47,99,108,97,115,115,105,99,47,99,111,114,101,47,109,97,116,99,104,46,104,112,112,0,0,0,0,0,99,111,110,99,97,116,0,0,0,0,0,0,208,23,0,0,89,0,0,0,90,0,0,0,2,0,0,0,21,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,49,49,97,108,116,101,114,110,97,116,105,118,101,73,78,83,51,95,73,78,83,48,95,52,114,117,108,101,73,78,83,48,95,55,115,99,97,110,110,101,114,73,80,75,99,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,83,71,95,69,69,83,72,95,69,69,83,72,95,69,69,83,70,95,83,71,95,69,69,0,0,0,0,0,0,168,115,0,0,216,22,0,0,80,22,0,0,0,0,0,0,0,0,0,0,136,25,0,0,91,0,0,0,92,0,0,0,3,0,0,0,22,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,52,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,49,49,114,101,97,108,95,112,97,114,115,101,114,73,100,78,83,48,95,50,48,114,101,97,108,95,112,97,114,115,101,114,95,112,111,108,105,99,105,101,115,73,100,69,69,69,69,69,69,83,67,95,69,69,78,83,95,51,95,98,105,54,98,105,110,100,95,116,73,118,78,83,95,52,95,109,102,105,51,109,102,49,73,118,78,51,110,103,108,51,79,98,106,69,83,55,95,69,69,78,83,70,95,53,108,105,115,116,50,73,78,83,95,49,55,114,101,102,101,114,101,110,99,101,95,119,114,97,112,112,101,114,73,83,75,95,69,69,78,83,95,51,97,114,103,73,76,105,49,69,69,69,69,69,69,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,55,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,168,115,0,0,248,23,0,0,80,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,97,108,46,105,115,95,105,110,105,116,105,97,108,105,122,101,100,40,41,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,115,112,105,114,105,116,47,104,111,109,101,47,99,108,97,115,115,105,99,47,99,111,114,101,47,105,109,112,108,47,109,97,116,99,104,46,105,112,112,0,0,0,0,0,0,0,0,118,97,108,117,101,0,0,0,116,104,105,115,45,62,105,115,95,105,110,105,116,105,97,108,105,122,101,100,40,41,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,111,112,116,105,111,110,97,108,47,111,112,116,105,111,110,97,108,46,104,112,112,0,0,103,101,116,0,0,0,0,0,0,0,0,0,80,28,0,0,93,0,0,0,94,0,0,0,4,0,0,0,23,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,52,95,73,78,83,52,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,49,49,114,101,97,108,95,112,97,114,115,101,114,73,100,78,83,48,95,50,48,114,101,97,108,95,112,97,114,115,101,114,95,112,111,108,105,99,105,101,115,73,100,69,69,69,69,69,69,83,67,95,69,69,83,67,95,69,69,78,83,95,51,95,98,105,54,98,105,110,100,95,116,73,118,78,83,95,52,95,109,102,105,51,109,102,49,73,118,78,51,110,103,108,51,79,98,106,69,83,55,95,69,69,78,83,71,95,53,108,105,115,116,50,73,78,83,95,49,55,114,101,102,101,114,101,110,99,101,95,119,114,97,112,112,101,114,73,83,76,95,69,69,78,83,95,51,97,114,103,73,76,105,49,69,69,69,69,69,69,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,55,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,0,0,0,0,0,0,168,115,0,0,176,26,0,0,80,22,0,0,0,0,0,0,0,0,0,0,248,29,0,0,95,0,0,0,96,0,0,0,5,0,0,0,24,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,49,51,99,111,110,102,105,120,95,112,97,114,115,101,114,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,49,49,107,108,101,101,110,101,95,115,116,97,114,73,78,83,48,95,49,52,97,110,121,99,104,97,114,95,112,97,114,115,101,114,69,69,69,78,83,48,95,49,49,97,108,116,101,114,110,97,116,105,118,101,73,78,83,48,95,49,48,101,111,108,95,112,97,114,115,101,114,69,78,83,48,95,49,48,101,110,100,95,112,97,114,115,101,114,69,69,69,78,83,48,95,50,49,117,110,97,114,121,95,112,97,114,115,101,114,95,99,97,116,101,103,111,114,121,69,78,83,48,95,49,48,110,111,110,95,110,101,115,116,101,100,69,78,83,48,95,57,105,115,95,108,101,120,101,109,101,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,54,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,168,115,0,0,120,28,0,0,80,22,0,0,0,0,0,0,0,0,0,0,72,31,0,0,97,0,0,0,98,0,0,0,6,0,0,0,25,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,51,95,73,78,83,51,95,73,78,83,51,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,52,114,117,108,101,73,78,83,48,95,55,115,99,97,110,110,101,114,73,83,54,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,83,73,95,69,69,69,69,83,74,95,69,69,83,74,95,69,69,78,83,48,95,49,49,107,108,101,101,110,101,95,115,116,97,114,73,83,74,95,69,69,69,69,83,72,95,83,73,95,69,69,0,0,0,0,168,115,0,0,32,30,0,0,80,22,0,0,0,0,0,0,0,0,0,0,40,33,0,0,99,0,0,0,100,0,0,0,7,0,0,0,26,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,49,48,105,110,116,95,112,97,114,115,101,114,73,105,76,105,49,48,69,76,106,49,69,76,105,110,49,69,69,69,78,83,48,95,49,53,114,101,102,95,118,97,108,117,101,95,97,99,116,111,114,73,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,105,78,83,56,95,57,97,108,108,111,99,97,116,111,114,73,105,69,69,69,69,78,83,48,95,49,54,112,117,115,104,95,98,97,99,107,95,97,99,116,105,111,110,69,69,69,69,69,78,83,48,95,49,49,97,108,116,101,114,110,97,116,105,118,101,73,78,83,51,95,73,78,83,51,95,73,78,83,51,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,71,95,73,83,70,95,78,83,48,95,49,52,101,112,115,105,108,111,110,95,112,97,114,115,101,114,69,69,69,69,69,83,75,95,69,69,83,77,95,69,69,83,76,95,69,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,74,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,0,0,0,0,0,168,115,0,0,112,31,0,0,80,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,35,0,0,101,0,0,0,102,0,0,0,8,0,0,0,27,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,51,95,73,78,83,51,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,49,49,114,101,97,108,95,112,97,114,115,101,114,73,100,78,83,48,95,50,48,114,101,97,108,95,112,97,114,115,101,114,95,112,111,108,105,99,105,101,115,73,100,69,69,69,69,78,83,48,95,49,53,114,101,102,95,118,97,108,117,101,95,97,99,116,111,114,73,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,102,78,83,69,95,57,97,108,108,111,99,97,116,111,114,73,102,69,69,69,69,78,83,48,95,49,54,112,117,115,104,95,98,97,99,107,95,97,99,116,105,111,110,69,69,69,69,69,69,69,83,76,95,69,69,78,83,48,95,49,49,107,108,101,101,110,101,95,115,116,97,114,73,83,76,95,69,69,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,54,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,0,0,0,0,0,168,115,0,0,144,33,0,0,80,22,0,0,0,0,0,0,0,0,0,0,224,36,0,0,103,0,0,0,104,0,0,0,9,0,0,0,28,0,0,0,78,53,98,111,111,115,116,54,115,112,105,114,105,116,52,105,109,112,108,49,53,99,111,110,99,114,101,116,101,95,112,97,114,115,101,114,73,78,83,48,95,56,115,101,113,117,101,110,99,101,73,78,83,51,95,73,78,83,51,95,73,78,83,48,95,54,115,116,114,108,105,116,73,80,75,99,69,69,78,83,48,95,54,97,99,116,105,111,110,73,78,83,48,95,49,49,114,101,97,108,95,112,97,114,115,101,114,73,100,78,83,48,95,50,48,114,101,97,108,95,112,97,114,115,101,114,95,112,111,108,105,99,105,101,115,73,100,69,69,69,69,78,83,48,95,49,53,114,101,102,95,118,97,108,117,101,95,97,99,116,111,114,73,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,102,78,83,69,95,57,97,108,108,111,99,97,116,111,114,73,102,69,69,69,69,78,83,48,95,49,54,112,117,115,104,95,98,97,99,107,95,97,99,116,105,111,110,69,69,69,69,69,69,69,83,76,95,69,69,83,76,95,69,69,78,83,48,95,55,115,99,97,110,110,101,114,73,83,54,95,78,83,48,95,49,54,115,99,97,110,110,101,114,95,112,111,108,105,99,105,101,115,73,78,83,48,95,50,52,115,107,105,112,112,101,114,95,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,73,78,83,48,95,49,54,105,116,101,114,97,116,105,111,110,95,112,111,108,105,99,121,69,69,69,78,83,48,95,49,50,109,97,116,99,104,95,112,111,108,105,99,121,69,78,83,48,95,49,51,97,99,116,105,111,110,95,112,111,108,105,99,121,69,69,69,69,69,78,83,48,95,53,110,105,108,95,116,69,69,69,0,0,0,168,115,0,0,88,35,0,0,80,22,0,0,0,0,0,0,78,53,98,111,111,115,116,49,50,110,111,110,99,111,112,121,97,98,108,101,95,49,49,110,111,110,99,111,112,121,97,98,108,101,69,0,0,0,0,0,24,115,0,0,240,36,0,0,99,97,108,108,32,116,111,32,101,109,112,116,121,32,98,111,111,115,116,58,58,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,120,37,0,0,105,0,0,0,106,0,0,0,29,0,0,0,0,0,0,0,78,53,98,111,111,115,116,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,0,0,0,0,0,168,115,0,0,88,37,0,0,176,71,0,0,0,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,48,99,108,111,110,101,95,105,109,112,108,73,78,83,48,95,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,69,69,69,69,0,0,0,0,0,78,53,98,111,111,115,116,49,54,101,120,99,101,112,116,105,111,110,95,100,101,116,97,105,108,49,57,101,114,114,111,114,95,105,110,102,111,95,105,110,106,101,99,116,111,114,73,78,83,95,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,69,69,0,0,0,0,0,0,0,0,8,116,0,0,232,37,0,0,0,0,0,0,2,0,0,0,120,37,0,0,2,0,0,0,80,4,0,0,2,8,0,0,8,116,0,0,136,37,0,0,0,0,0,0,2,0,0,0,56,38,0,0,2,0,0,0,160,4,0,0,3,244,255,255,28,0,0,0,0,0,0,0,88,38,0,0,107,0,0,0,108,0,0,0,29,0,0,0,30,0,0,0,109,0,0,0,248,255,255,255,88,38,0,0,110,0,0,0,111,0,0,0,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,88,38,0,0,31,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,56,38,0,0,115,0,0,0,116,0,0,0,29,0,0,0,248,255,255,255,56,38,0,0,117,0,0,0,118,0,0,0,0,0,0,0,100,62,48,0,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,102,101,101,100,95,97,114,103,115,46,104,112,112,0,0,0,112,117,116,0,0,0,0,0,105,43,40,116,109,112,95,115,105,122,101,45,105,41,43,40,115,116,100,58,58,109,97,120,41,40,100,44,40,115,116,100,58,58,115,116,114,101,97,109,115,105,122,101,41,48,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,0,0,0,114,101,115,46,115,105,122,101,40,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,10,0,0,0,0,0,0,0,87,97,114,110,105,110,103,32,110,111,32,115,104,97,100,101,114,32,115,111,117,114,99,101,32,108,111,97,100,101,100,10,0,0,0,0,0,0,0,0,67,111,109,112,105,108,105,110,103,32,83,104,97,100,101,114,32,0,0,0,0,0,0,0,83,104,97,100,101,114,32,99,111,109,112,105,108,101,32,102], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([97,105,108,101,100,32,111,114,32,104,97,100,32,119,97,114,110,105,110,103,115,32,10,0,100,101,108,101,116,105,110,103,32,101,120,105,115,116,105,110,103,32,115,111,117,114,99,101,32,99,111,100,101,10,0,0,70,105,108,101,32,110,111,116,32,102,111,117,110,100,32,0,0,0,0,0,0,0,0,0,0,0,0,0,240,43,0,0,119,0,0,0,120,0,0,0,78,85,76,76,0,0,0,0,106,117,115,116,32,97,116,116,97,99,104,101,100,32,0,0,32,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,87,97,114,110,105,110,103,32,115,104,97,100,101,114,32,110,111,116,32,107,110,111,119,32,105,110,32,99,111,109,112,105,108,101,32,0,0,0,0,0,99,114,101,97,116,105,110,103,32,101,109,112,116,121,32,83,104,97,100,101,114,80,114,111,103,114,97,109,32,0,0,0,32,97,116,116,97,99,104,101,100,32,116,111,32,112,114,111,103,114,97,109,32,0,0,0,87,97,114,110,105,110,103,32,99,97,110,116,32,97,116,116,97,99,104,32,0,0,0,0,32,116,111,32,0,0,0,0,87,97,114,110,105,110,103,32,115,104,97,100,101,114,32,110,111,116,32,107,110,111,119,32,105,110,32,108,111,97,100,83,104,97,100,101,114,83,111,117,114,99,101,32,0,0,0,0,76,105,110,107,105,110,103,32,0,0,0,0,0,0,0,0,87,97,114,110,105,110,103,32,80,114,111,103,114,97,109,32,110,111,116,32,107,110,111,119,110,32,105,110,32,108,105,110,107,32,0,0,0,0,0,0,87,97,114,110,105,110,103,32,80,114,111,103,114,97,109,32,110,111,116,32,107,110,111,119,32,105,110,32,117,115,101,32,0,0,0,0,0,0,0,0,87,97,114,110,105,110,103,32,80,114,111,103,114,97,109,32,110,111,116,32,107,110,111,119,32,105,110,32,114,101,103,105,115,116,101,114,85,110,105,102,111,114,109,32,0,0,0,0,87,97,114,110,105,110,103,32,80,114,111,103,114,97,109,32,110,111,116,32,107,110,111,119,32,105,110,32,98,105,110,100,65,116,116,114,105,98,117,116,101,32,0,0,0,0,0,0,87,97,114,110,105,110,103,32,80,114,111,103,114,97,109,32,110,111,116,32,107,110,111,119,32,105,110,32,91,93,32,0,114,101,116,117,114,110,105,110,103,32,97,32,110,117,108,108,32,112,114,111,103,114,97,109,32,97,110,100,32,104,111,112,105,110,103,32,102,111,114,32,116,104,101,32,98,101,115,116,10,0,0,0,0,0,0,0,110,103,108,84,101,120,116,83,104,97,100,101,114,0,0,0,110,103,108,84,101,120,116,86,101,114,116,101,120,0,0,0,110,103,108,84,101,120,116,70,114,97,103,109,101,110,116,0,152,54,0,0,0,0,0,0,192,53,0,0,0,0,0,0,105,110,86,101,114,116,0,0,105,110,85,86,0,0,0,0,110,103,108,67,111,108,111,117,114,83,104,97,100,101,114,0,110,103,108,67,111,108,111,117,114,86,101,114,116,101,120,0,110,103,108,67,111,108,111,117,114,70,114,97,103,109,101,110,116,0,0,0,0,0,0,0,32,53,0,0,0,0,0,0,184,52,0,0,0,0,0,0,110,103,108,68,105,102,102,117,115,101,83,104,97,100,101,114,0,0,0,0,0,0,0,0,110,103,108,68,105,102,102,117,115,101,86,101,114,116,101,120,0,0,0,0,0,0,0,0,110,103,108,68,105,102,102,117,115,101,70,114,97,103,109,101,110,116,0,0,0,0,0,0,160,51,0,0,0,0,0,0,120,50,0,0,0,0,0,0,105,110,78,111,114,109,97,108,0,0,0,0,0,0,0,0,110,103,108,84,111,111,110,83,104,97,100,101,114,0,0,0,110,103,108,84,111,111,110,86,101,114,116,101,120,0,0,0,110,103,108,84,111,111,110,70,114,97,103,109,101,110,116,0,96,49,0,0,0,0,0,0,16,44,0,0,0,0,0,0,78,51,110,103,108,57,83,104,97,100,101,114,76,105,98,69,0,0,0,0,0,0,0,0,78,51,110,103,108,57,83,105,110,103,108,101,116,111,110,73,78,83,95,57,83,104,97,100,101,114,76,105,98,69,69,69,0,0,0,0,0,0,0,0,8,116,0,0,176,43,0,0,0,0,0,0,1,0,0,0,24,37,0,0,0,0,0,0,168,115,0,0,152,43,0,0,216,43,0,0,0,0,0,0,0,0,0,0,216,43,0,0,121,0,0,0,122,0,0,0,35,101,120,116,101,110,115,105,111,110,32,71,76,95,79,69,83,95,115,116,97,110,100,97,114,100,95,100,101,114,105,118,97,116,105,118,101,115,32,58,32,101,110,97,98,108,101,32,10,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,118,97,114,121,105,110,103,32,118,101,99,51,32,110,111,114,109,97,108,69,121,101,83,112,97,99,101,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,97,109,98,105,101,110,116,59,47,47,61,118,101,99,52,40,48,46,49,44,48,46,49,44,48,46,49,44,49,46,48,41,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,67,111,108,111,117,114,59,47,47,61,118,101,99,52,40,49,46,48,44,49,46,48,44,49,46,48,44,49,46,48,41,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,115,112,101,99,117,108,97,114,59,47,47,61,118,101,99,52,40,49,46,48,44,49,46,48,44,49,46,48,44,49,46,48,41,59,32,10,117,110,105,102,111,114,109,32,102,108,111,97,116,32,115,104,105,110,105,110,101,115,115,59,47,47,61,50,48,59,32,10,117,110,105,102,111,114,109,32,118,101,99,51,32,108,105,103,104,116,80,111,115,59,47,47,61,118,101,99,51,40,49,44,49,44,49,41,59,32,10,102,108,111,97,116,32,115,116,101,112,109,105,120,40,102,108,111,97,116,32,101,100,103,101,48,44,32,102,108,111,97,116,32,101,100,103,101,49,44,32,102,108,111,97,116,32,69,44,32,102,108,111,97,116,32,120,41,32,10,123,32,10,9,9,102,108,111,97,116,32,84,32,61,32,99,108,97,109,112,40,48,46,53,32,42,32,40,120,32,45,32,101,100,103,101,48,32,43,32,69,41,32,47,32,69,44,32,48,46,48,44,32,49,46,48,41,59,32,10,9,9,114,101,116,117,114,110,32,109,105,120,40,101,100,103,101,48,44,32,101,100,103,101,49,44,32,84,41,59,32,10,125,32,10,118,111,105,100,32,109,97,105,110,40,41,32,10,123,32,10,9,9,118,101,99,51,32,78,32,61,32,110,111,114,109,97,108,105,122,101,40,110,111,114,109,97,108,69,121,101,83,112,97,99,101,41,59,32,10,9,9,118,101,99,51,32,76,32,61,32,110,111,114,109,97,108,105,122,101,40,108,105,103,104,116,80,111,115,41,59,32,10,9,9,118,101,99,51,32,69,121,101,32,61,32,118,101,99,51,40,48,44,32,48,44,32,49,41,59,32,10,9,9,118,101,99,51,32,72,32,61,32,110,111,114,109,97,108,105,122,101,40,76,32,43,32,69,121,101,41,59,32,10,9,9,102,108,111,97,116,32,100,102,32,61,32,109,97,120,40,48,46,48,44,32,100,111,116,40,78,44,32,76,41,41,59,32,10,9,9,102,108,111,97,116,32,115,102,32,61,32,109,97,120,40,48,46,48,44,32,100,111,116,40,78,44,32,72,41,41,59,32,10,9,9,115,102,32,61,32,112,111,119,40,115,102,44,32,115,104,105,110,105,110,101,115,115,41,59,32,10,9,9,99,111,110,115,116,32,102,108,111,97,116,32,65,32,61,32,48,46,49,59,32,10,9,9,99,111,110,115,116,32,102,108,111,97,116,32,66,32,61,32,48,46,51,59,32,10,9,9,99,111,110,115,116,32,102,108,111,97,116,32,67,32,61,32,48,46,54,59,32,10,9,9,99,111,110,115,116,32,102,108,111,97,116,32,68,32,61,32,49,46,48,59,32,10,9,9,102,108,111,97,116,32,69,32,61,32,102,119,105,100,116,104,40,100,102,41,59,32,10,9,9,105,102,32,32,32,32,32,32,40,100,102,32,62,32,65,32,45,32,69,32,38,38,32,100,102,32,60,32,65,32,43,32,69,41,32,100,102,32,61,32,115,116,101,112,109,105,120,40,65,44,32,66,44,32,69,44,32,100,102,41,59,32,10,9,9,101,108,115,101,32,105,102,32,40,100,102,32,62,32,66,32,45,32,69,32,38,38,32,100,102,32,60,32,66,32,43,32,69,41,32,100,102,32,61,32,115,116,101,112,109,105,120,40,66,44,32,67,44,32,69,44,32,100,102,41,59,32,10,9,9,101,108,115,101,32,105,102,32,40,100,102,32,62,32,67,32,45,32,69,32,38,38,32,100,102,32,60,32,67,32,43,32,69,41,32,100,102,32,61,32,115,116,101,112,109,105,120,40,67,44,32,68,44,32,69,44,32,100,102,41,59,32,10,9,9,101,108,115,101,32,105,102,32,40,100,102,32,60,32,65,41,32,100,102,32,61,32,48,46,48,59,32,10,9,9,101,108,115,101,32,105,102,32,40,100,102,32,60,32,66,41,32,100,102,32,61,32,66,59,32,10,9,9,101,108,115,101,32,105,102,32,40,100,102,32,60,32,67,41,32,100,102,32,61,32,67,59,32,10,9,9,101,108,115,101,32,100,102,32,61,32,68,59,32,10,9,9,69,32,61,32,102,119,105,100,116,104,40,115,102,41,59,32,10,9,9,105,102,32,40,115,102,32,62,32,48,46,53,32,45,32,69,32,38,38,32,115,102,32,60,32,48,46,53,32,43,32,69,41,32,10,9,9,123,32,10,9,9,9,9,115,102,32,61,32,115,109,111,111,116,104,115,116,101,112,40,48,46,53,32,45,32,69,44,32,48,46,53,32,43,32,69,44,32,115,102,41,59,32,10,9,9,125,32,10,9,9,101,108,115,101,32,10,9,9,123,32,10,9,9,9,9,115,102,32,61,32,115,116,101,112,40,48,46,53,44,32,115,102,41,59,32,10,9,9,125,32,10,9,9,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,97,109,98,105,101,110,116,32,43,32,100,102,32,42,32,67,111,108,111,117,114,32,43,32,115,102,32,42,32,115,112,101,99,117,108,97,114,59,32,10,125,32,10,0,0,0,0,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,105,110,86,101,114,116,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,105,110,78,111,114,109,97,108,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,105,110,85,86,59,32,10,117,110,105,102,111,114,109,32,109,97,116,52,32,77,86,80,59,32,10,117,110,105,102,111,114,109,32,109,97,116,51,32,110,111,114,109,97,108,77,97,116,114,105,120,59,32,10,118,97,114,121,105,110,103,32,118,101,99,51,32,110,111,114,109,97,108,69,121,101,83,112,97,99,101,59,32,10,118,111,105,100,32,109,97,105,110,40,41,32,10,123,32,10,9,9,110,111,114,109,97,108,69,121,101,83,112,97,99,101,32,61,32,110,111,114,109,97,108,77,97,116,114,105,120,32,42,32,105,110,78,111,114,109,97,108,59,32,10,9,9,103,108,95,80,111,115,105,116,105,111,110,32,61,32,77,86,80,42,118,101,99,52,40,105,110,86,101,114,116,44,49,46,48,41,59,32,10,125,32,10,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,118,97,114,121,105,110,103,32,118,101,99,51,32,102,114,97,103,109,101,110,116,78,111,114,109,97,108,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,67,111,108,111,117,114,59,32,10,117,110,105,102,111,114,109,32,118,101,99,51,32,108,105,103,104,116,80,111,115,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,108,105,103,104,116,68,105,102,102,117,115,101,59,32,10,118,111,105,100,32,109,97,105,110,32,40,41,32,10,123,32,10,103,108,95,70,114,97,103,67,111,108,111,114,61,32,118,101,99,52,40,48,46,41,59,32,10,118,101,99,51,32,78,32,61,32,110,111,114,109,97,108,105,122,101,40,102,114,97,103,109,101,110,116,78,111,114,109,97,108,41,59,32,10,118,101,99,51,32,76,32,61,32,110,111,114,109,97,108,105,122,101,40,108,105,103,104,116,80,111,115,41,59,32,10,103,108,95,70,114,97,103,67,111,108,111,114,32,43,61,32,67,111,108,111,117,114,42,108,105,103,104,116,68,105,102,102,117,115,101,32,42,100,111,116,40,76,44,32,78,41,59,32,10,125,32,32,10,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,118,97,114,121,105,110,103,32,118,101,99,51,32,102,114,97,103,109,101,110,116,78,111,114,109,97,108,59,32,32,10,118,97,114,121,105,110,103,32,118,101,99,51,32,98,97,99,107,78,111,114,109,97,108,59,32,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,105,110,86,101,114,116,59,32,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,105,110,78,111,114,109,97,108,59,32,32,10,117,110,105,102,111,114,109,32,109,97,116,52,32,77,86,80,59,32,32,10,117,110,105,102,111,114,109,32,109,97,116,51,32,110,111,114,109,97,108,77,97,116,114,105,120,59,32,10,118,111,105,100,32,109,97,105,110,40,118,111,105,100,41,32,10,123,32,32,10,102,114,97,103,109,101,110,116,78,111,114,109,97,108,32,61,32,40,105,110,78,111,114,109,97,108,41,59,32,10,103,108,95,80,111,115,105,116,105,111,110,32,61,32,77,86,80,42,118,101,99,52,40,105,110,86,101,114,116,44,49,46,48,41,59,32,10,125,32,32,10,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,67,111,108,111,117,114,59,32,10,118,111,105,100,32,109,97,105,110,32,40,41,32,10,123,32,10,32,32,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,67,111,108,111,117,114,59,32,10,125,32,32,10,0,0,0,0,0,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,117,110,105,102,111,114,109,32,109,97,116,52,32,77,86,80,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,51,32,105,110,86,101,114,116,59,32,10,117,110,105,102,111,114,109,32,118,101,99,52,32,67,111,108,111,117,114,59,32,10,118,111,105,100,32,109,97,105,110,40,118,111,105,100,41,32,10,123,32,10,32,103,108,95,80,111,115,105,116,105,111,110,32,61,32,77,86,80,42,118,101,99,52,40,105,110,86,101,114,116,44,32,49,46,48,41,59,32,10,125,32,32,10,0,0,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,10,117,110,105,102,111,114,109,32,115,97,109,112,108,101,114,50,68,32,116,101,120,59,32,10,118,97,114,121,105,110,103,32,118,101,99,50,32,118,101,114,116,85,86,59,32,10,117,110,105,102,111,114,109,32,118,101,99,51,32,116,101,120,116,67,111,108,111,117,114,59,32,10,118,111,105,100,32,109,97,105,110,40,41,32,10,123,32,10,118,101,99,52,32,116,101,120,116,61,116,101,120,116,117,114,101,50,68,40,116,101,120,44,118,101,114,116,85,86,46,115,116,41,59,32,10,103,108,95,70,114,97,103,67,111,108,111,114,46,114,103,98,61,116,101,120,116,67,111,108,111,117,114,46,114,103,98,59,32,10,103,108,95,70,114,97,103,67,111,108,111,114,46,97,61,116,101,120,116,46,97,59,32,10,125,10,0,0,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,105,110,86,101,114,116,59,32,10,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,105,110,85,86,59,32,10,118,97,114,121,105,110,103,32,118,101,99,50,32,118,101,114,116,85,86,59,32,10,117,110,105,102,111,114,109,32,118,101,99,51,32,116,101,120,116,67,111,108,111,117,114,59,32,10,117,110,105,102,111,114,109,32,102,108,111,97,116,32,115,99,97,108,101,88,59,32,10,117,110,105,102,111,114,109,32,102,108,111,97,116,32,115,99,97,108,101,89,59,32,10,117,110,105,102,111,114,109,32,102,108,111,97,116,32,120,112,111,115,59,32,32,10,117,110,105,102,111,114,109,32,102,108,111,97,116,32,121,112,111,115,59,32,10,118,111,105,100,32,109,97,105,110,40,41,32,10,123,32,10,118,101,114,116,85,86,61,105,110,85,86,59,32,10,103,108,95,80,111,115,105,116,105,111,110,61,118,101,99,52,40,32,40,40,120,112,111,115,43,105,110,86,101,114,116,46,120,41,42,115,99,97,108,101,88,41,45,49,46,48,44,40,40,121,112,111,115,43,105,110,86,101,114,116,46,121,41,42,115,99,97,108,101,89,41,43,49,46,48,44,48,46,48,44,49,46,48,41,59,32,10,125,10,0,0,0,0,0,0,0,0,78,85,76,76,0,0,0,0,10,0,0,0,0,0,0,0,87,97,114,110,105,110,103,32,98,105,110,100,105,110,103,32,97,116,116,114,105,98,117,116,101,32,97,102,116,101,114,32,108,105,110,107,10,0,0,0,115,114,99,47,83,104,97,100,101,114,80,114,111,103,114,97,109,46,99,112,112,0,0,0,108,105,110,107,105,110,103,32,83,104,97,100,101,114,32,0,80,114,111,103,114,97,109,32,108,105,110,107,32,102,97,105,108,101,100,32,101,120,105,116,105,110,103,32,10,0,0,0,85,110,105,102,111,114,109,32,34,0,0,0,0,0,0,0,34,32,110,111,116,32,102,111,117,110,100,32,105,110,32,80,114,111,103,114,97,109,32,34,0,0,0,0,0,0,0,0,34,10,0,0,0,0,0,0,32,9,13,10,0,0,0,0,91,0,0,0,0,0,0,0,32,9,13,10,59,0,0,0,32,91,93,9,13,10,59,0,37,115,91,37,100,93,0,0,10,13,0,0,0,0,0,0,35,100,101,102,105,110,101,0,117,110,105,102,111,114,109,0,10,0,0,0,3,0,0,0,78,53,98,111,111,115,116,57,97,108,103,111,114,105,116,104,109,54,100,101,116,97,105,108,49,51,116,111,107,101,110,95,102,105,110,100,101,114,70,73,78,83,49,95,49,48,105,115,95,97,110,121,95,111,102,70,73,99,69,69,69,69,0,0,24,115,0,0,232,56,0,0,100,62,48,0,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,102,101,101,100,95,97,114,103,115,46,104,112,112,0,0,0,112,117,116,0,0,0,0,0,105,43,40,116,109,112,95,115,105,122,101,45,105,41,43,40,115,116,100,58,58,109,97,120,41,40,100,44,40,115,116,100,58,58,115,116,114,101,97,109,115,105,122,101,41,48,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,0,0,0,114,101,115,46,115,105,122,101,40,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,70,111,110,116,32,104,101,105,103,104,116,32,105,115,32,0,10,0,0,0,0,0,0,0,99,114,101,97,116,101,100,32,0,0,0,0,0,0,0,0,32,117,110,105,113,117,101,32,98,105,108,108,98,111,97,114,100,115,10,0,0,0,0,0,110,103,108,84,101,120,116,83,104,97,100,101,114,0,0,0,121,112,111,115,0,0,0,0,120,112,111,115,0,0,0,0,115,99,97,108,101,88,0,0,115,99,97,108,101,89,0,0,116,101,120,116,67,111,108,111,117,114,0,0,0,0,0,0,71,76,95,73,78,86,65,76,73,68,95,69,78,85,77,32,101,114,114,111,114,0,0,0,71,76,95,73,78,86,65,76,73,68,95,86,65,76,85,69,32,101,114,114,111,114,0,0,71,76,95,73,78,86,65,76,73,68,95,79,80,69,82,65,84,73,79,78,32,101,114,114,111,114,0,0,0,0,0,0,71,76,95,79,85,84,95,79,70,95,77,69,77,79,82,89,32,101,114,114,111,114,0,0,71,76,32,101,114,114,111,114,0,0,0,0,0,0,0,0,32,108,105,110,101,32,58,32,0,0,0,0,0,0,0,0,32,102,105,108,101,32,58,32,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,32,58,0,0,0,0,0,0,10,70,97,105,108,117,114,101,32,111,99,99,117,114,101,100,32,111,110,32,108,105,110,101,32,0,0,0,0,0,0,0,32,111,102,32,115,111,117,114,99,101,32,102,105,108,101,32,58,0,0,0,0,0,0,0,10,32,34,0,0,0,0,0,115,114,99,47,86,101,99,51,46,99,112,112,0,0,0,0,34,0,0,0,0,0,0,0,95,118,32,33,61,48,0,0,108,101,110,33,61,48,0,0,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,32,58,0,0,0,0,0,0,10,70,97,105,108,117,114,101,32,111,99,99,117,114,101,100,32,111,110,32,108,105,110,101,32,0,0,0,0,0,0,0,32,111,102,32,115,111,117,114,99,101,32,102,105,108,101,32,58,0,0,0,0,0,0,0,10,32,34,0,0,0,0,0,115,114,99,47,86,101,99,52,46,99,112,112,0,0,0,0,34,0,0,0,0,0,0,0,108,101,110,33,61,48,46,48,102,0,0,0,0,0,0,0,116,114,121,105,110,103,32,116,111,32,115,101,116,32,86,79,65,32,100,97,116,97,32,119,104,101,110,32,117,110,98,111,117,110,100,10,0,0,0,0,119,114,111,110,103,32,100,97,116,97,32,116,121,112,101,32,115,101,110,100,32,102,111,114,32,105,110,100,101,120,32,118,97,108,117,101,10,0,0,0,87,97,114,110,105,110,103,32,116,114,121,105,110,103,32,116,111,32,115,101,116,32,97,116,116,114,105,98,117,116,101,32,111,110,32,85,110,98,111,117,110,100,32,86,79,65,10,0,87,97,114,110,105,110,103,32,116,114,121,105,110,103,32,116,111,32,100,114,97,119,32,97,110,32,117,110,97,108,108,111,99,97,116,101,100,32,86,79,65,10,0,0,0,0,0,0,87,97,114,110,105,110,103,32,116,114,121,105,110,103,32,116,111,32,100,114,97,119,32,97,110,32,117,110,98,111,117,110,100,32,86,79,65,10,0,0,100,62,48,0,0,0,0,0,47,117,115,114,47,108,111,99,97,108,47,105,110,99,108,117,100,101,47,98,111,111,115,116,47,102,111,114,109,97,116,47,102,101,101,100,95,97,114,103,115,46,104,112,112,0,0,0,112,117,116,0,0,0,0,0,105,43,40,116,109,112,95,115,105,122,101,45,105,41,43,40,115,116,100,58,58,109,97,120,41,40,100,44,40,115,116,100,58,58,115,116,114,101,97,109,115,105,122,101,41,48,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,0,0,0,114,101,115,46,115,105,122,101,40,41,32,61,61,32,115,116,97,116,105,99,95,99,97,115,116,60,115,105,122,101,95,116,121,112,101,62,40,119,41,0,47,109,111,100,101,108,115,47,66,114,117,99,101,80,111,115,101,49,46,111,98,106,0,0,47,109,111,100,101,108,115,47,66,114,117,99,101,80,111,115,101,50,46,111,98,106,0,0,47,109,111,100,101,108,115,47,66,114,117,99,101,80,111,115,101,51,46,111,98,106,0,0,80,101,114,70,114,97,103,65,68,83,0,0,0,0,0,0,80,101,114,70,114,97,103,65,68,83,86,101,114,116,101,120,0,0,0,0,0,0,0,0,80,101,114,70,114,97,103,65,68,83,70,114,97,103,109,101,110,116,0,0,0,0,0,0,47,115,104,97,100,101,114,115,47,80,101,114,70,114,97,103,65,83,68,86,101,114,116,46,103,108,115,108,0,0,0,0,47,115,104,97,100,101,114,115,47,80,101,114,70,114,97,103,65,83,68,70,114,97,103,46,103,108,115,108,0,0,0,0,98,97,115,101,86,101,114,116,0,0,0,0,0,0,0,0,98,97,115,101,78,111,114,109,97,108,0,0,0,0,0,0,112,111,115,101,86,101,114,116,49,0,0,0,0,0,0,0,112,111,115,101,78,111,114,109,97,108,49,0,0,0,0,0,112,111,115,101,86,101,114,116,50,0,0,0,0,0,0,0,112,111,115,101,78,111,114,109,97,108,50,0,0,0,0,0,109,97,116,101,114,105,97,108,46,75,97,0,0,0,0,0,109,97,116,101,114,105,97,108,46,75,100,0,0,0,0,0,109,97,116,101,114,105,97,108,46,75,115,0,0,0,0,0,109,97,116,101,114,105,97,108,46,115,104,105,110,105,110,101,115,115,0,0,0,0,0,0,108,105,103,104,116,46,112,111,115,105,116,105,111,110,0,0,108,105,103,104,116,46,76,97,0,0,0,0,0,0,0,0,108,105,103,104,116,46,76,100,0,0,0,0,0,0,0,0,108,105,103,104,116,46,76,115,0,0,0,0,0,0,0,0,47,102,111,110,116,47,97,114,105,97,108,46,116,116,102,0,81,45,87,32,99,104,97,110,103,101,32,80,111,115,101,32,111,110,101,32,119,101,105,103,104,116,32,37,48,46,49,102,0,0,0,0,0,0,0,0,65,45,83,32,99,104,97,110,103,101,32,80,111,115,101,32,111,110,101,32,119,101,105,103,104,116,32,37,48,46,49,102,0,0,0,0,0,0,0,0,90,32,116,114,105,103,103,101,114,32,76,101,102,116,32,80,117,110,99,104,32,88,32,116,114,105,103,103,101,114,32,82,105,103,104,116,0,0,0,0,77,86,80,0,0,0,0,0,77,86,0,0,0,0,0,0,110,111,114,109,97,108,77,97,116,114,105,120,0,0,0,0,119,101,105,103,104,116,49,0,119,101,105,103,104,116,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,114,101,116,117,114,110,32,100,111,99,117,109,101,110,116,46,98,111,100,121,46,99,108,105,101,110,116,87,105,100,116,104,45,49,48,32,125,0,0,123,114,101,116,117,114,110,32,119,105,110,100,111,119,46,105,110,110,101,114,72,101,105,103,104,116,32,125,0,0,0,0,85,110,97,98,108,101,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,83,68,76,58,32,0,0,0,0,0,0,85,110,97,98,108,101,32,116,111,32,115,101,116,32,118,105,100,101,111,32,109,111,100,101,58,32], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([40,69,0,0,123,0,0,0,124,0,0,0,3,0,0,0,6,0,0,0,3,0,0,0,4,0,0,0,32,0,0,0,33,0,0,0,7,0,0,0,34,0,0,0,35,0,0,0,6,0,0,0,8,0,0,0,7,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,168,115,0,0,8,69,0,0,168,75,0,0,0,0,0,0,0,0,0,0,144,69,0,0,125,0,0,0,126,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,4,0,0,0,36,0,0,0,33,0,0,0,7,0,0,0,37,0,0,0,38,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,168,115,0,0,120,69,0,0,168,75,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,40,70,0,0,127,0,0,0,128,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,39,0,0,0,2,0,0,0,2,0,0,0,40,0,0,0,4,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,168,115,0,0,8,70,0,0,104,75,0,0,0,0,0,0,0,0,0,0,144,70,0,0,129,0,0,0,130,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,12,0,0,0,2,0,0,0,2,0,0,0,41,0,0,0,42,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,168,115,0,0,120,70,0,0,104,75,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,24,115,0,0,160,70,0,0,0,0,0,0,8,71,0,0,131,0,0,0,132,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,176,71,0,0,133,0,0,0,134,0,0,0,29,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,168,115,0,0,248,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,71,0,0,131,0,0,0,135,0,0,0,43,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,168,115,0,0,48,71,0,0,8,71,0,0,0,0,0,0,0,0,0,0,136,71,0,0,131,0,0,0,136,0,0,0,43,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,168,115,0,0,112,71,0,0,8,71,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,168,115,0,0,152,71,0,0,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,0,0,0,0,248,71,0,0,137,0,0,0,138,0,0,0,29,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,168,115,0,0,224,71,0,0,176,71,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,24,115,0,0,8,72,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,168,115,0,0,48,72,0,0,40,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,224,74,0,0,139,0,0,0,140,0,0,0,0,0,0,0,104,75,0,0,141,0,0,0,142,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,12,0,0,0,2,0,0,0,2,0,0,0,40,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,13,0,0,0,0,0,0,0,168,75,0,0,143,0,0,0,144,0,0,0,7,0,0,0,6,0,0,0,3,0,0,0,4,0,0,0,36,0,0,0,33,0,0,0,7,0,0,0,34,0,0,0,35,0,0,0,6,0,0,0,9,0,0,0,9,0,0,0,8,0,0,0,0,0,0,0,224,75,0,0,67,0,0,0,68,0,0,0,248,255,255,255,248,255,255,255,224,75,0,0,69,0,0,0,70,0,0,0,8,0,0,0,0,0,0,0,40,76,0,0,145,0,0,0,146,0,0,0,248,255,255,255,248,255,255,255,40,76,0,0,147,0,0,0,148,0,0,0,4,0,0,0,0,0,0,0,112,76,0,0,25,0,0,0,26,0,0,0,252,255,255,255,252,255,255,255,112,76,0,0,27,0,0,0,28,0,0,0,4,0,0,0,0,0,0,0,184,76,0,0,149,0,0,0,150,0,0,0,252,255,255,255,252,255,255,255,184,76,0,0,151,0,0,0,152,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,74,0,0,153,0,0,0,154,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,168,74,0,0,155,0,0,0,156,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,168,115,0,0,96,74,0,0,248,71,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,24,115,0,0,144,74,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,168,115,0,0,176,74,0,0,168,74,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,168,115,0,0,240,74,0,0,168,74,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,24,115,0,0,48,75,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,24,115,0,0,112,75,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,8,116,0,0,176,75,0,0,0,0,0,0,1,0,0,0,224,74,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,8,116,0,0,248,75,0,0,0,0,0,0,1,0,0,0,32,75,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,8,116,0,0,64,76,0,0,0,0,0,0,1,0,0,0,224,74,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,8,116,0,0,136,76,0,0,0,0,0,0,1,0,0,0,32,75,0,0,3,244,255,255,0,0,0,0,24,77,0,0,157,0,0,0,158,0,0,0,44,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,168,115,0,0,248,76,0,0,72,72,0,0,0,0,0,0,0,0,0,0,72,91,0,0,159,0,0,0,160,0,0,0,161,0,0,0,1,0,0,0,6,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,91,0,0,162,0,0,0,163,0,0,0,161,0,0,0,2,0,0,0,7,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,96,0,0,164,0,0,0,165,0,0,0,161,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,184,96,0,0,166,0,0,0,167,0,0,0,161,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,97,0,0,168,0,0,0,169,0,0,0,161,0,0,0,5,0,0,0,6,0,0,0,23,0,0,0,7,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,98,0,0,170,0,0,0,171,0,0,0,161,0,0,0,9,0,0,0,10,0,0,0,25,0,0,0,11,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,56,93,0,0,172,0,0,0,173,0,0,0,161,0,0,0,45,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,56,93,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,216,93,0,0,174,0,0,0,175,0,0,0,161,0,0,0,53,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,216,93,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,104,94,0,0,176,0,0,0,177,0,0,0,161,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,94,0,0,178,0,0,0,179,0,0,0,161,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,91,0,0,180,0,0,0,181,0,0,0,161,0,0,0,61,0,0,0,62,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,63,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,182,0,0,0,183,0,0,0,161,0,0,0,64,0,0,0,65,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,66,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,92,0,0,184,0,0,0,185,0,0,0,161,0,0,0,67,0,0,0,68,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,69,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,92,0,0,186,0,0,0,187,0,0,0,161,0,0,0,70,0,0,0,71,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,72,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,98,0,0,188,0,0,0,189,0,0,0,161,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,48,99,0,0,190,0,0,0,191,0,0,0,161,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,192,99,0,0,192,0,0,0,193,0,0,0,161,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,80,100,0,0,194,0,0,0,195,0,0,0,161,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,95,0,0,196,0,0,0,197,0,0,0,161,0,0,0,15,0,0,0,13,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,95,0,0,198,0,0,0,199,0,0,0,161,0,0,0,16,0,0,0,14,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,32,91,0,0,200,0,0,0,201,0,0,0,161,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,87,0,0,202,0,0,0,203,0,0,0,161,0,0,0,14,0,0,0,17,0,0,0,15,0,0,0,18,0,0,0,16,0,0,0,1,0,0,0,19,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,88,0,0,204,0,0,0,205,0,0,0,161,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,73,0,0,0,74,0,0,0,5,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,90,0,0,206,0,0,0,207,0,0,0,161,0,0,0,76,0,0,0,77,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,248,90,0,0,208,0,0,0,209,0,0,0,161,0,0,0,78,0,0,0,79,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,48,87,0,0,210,0,0,0,211,0,0,0,161,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,168,115,0,0,24,87,0,0,192,70,0,0,0,0,0,0,0,0,0,0,192,87,0,0,210,0,0,0,212,0,0,0,161,0,0,0,20,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,17,0,0,0,21,0,0,0,18,0,0,0,22,0,0,0,19,0,0,0,5,0,0,0,23,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,24,115,0,0,160,87,0,0,8,116,0,0,136,87,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,87,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,8,116,0,0,224,87,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,87,0,0,2,0,0,0,0,0,0,0,144,88,0,0,210,0,0,0,213,0,0,0,161,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,80,0,0,0,81,0,0,0,8,0,0,0,82,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,24,115,0,0,112,88,0,0,8,116,0,0,72,88,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,136,88,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,8,116,0,0,176,88,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,136,88,0,0,2,0,0,0,0,0,0,0,80,89,0,0,210,0,0,0,214,0,0,0,161,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,83,0,0,0,84,0,0,0,10,0,0,0,85,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,8,116,0,0,40,89,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,136,88,0,0,2,0,0,0,0,0,0,0,200,89,0,0,210,0,0,0,215,0,0,0,161,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,86,0,0,0,87,0,0,0,12,0,0,0,88,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,8,116,0,0,160,89,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,136,88,0,0,2,0,0,0,0,0,0,0,64,90,0,0,210,0,0,0,216,0,0,0,161,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,86,0,0,0,87,0,0,0,12,0,0,0,88,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,168,115,0,0,24,90,0,0,200,89,0,0,0,0,0,0,0,0,0,0,168,90,0,0,210,0,0,0,217,0,0,0,161,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,86,0,0,0,87,0,0,0,12,0,0,0,88,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,168,115,0,0,128,90,0,0,200,89,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,168,115,0,0,184,90,0,0,48,87,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,168,115,0,0,224,90,0,0,48,87,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,168,115,0,0,8,91,0,0,48,87,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,168,115,0,0,48,91,0,0,48,87,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,168,115,0,0,88,91,0,0,48,87,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,24,115,0,0,160,91,0,0,8,116,0,0,128,91,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,91,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,8,116,0,0,224,91,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,91,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,8,116,0,0,32,92,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,91,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,8,116,0,0,96,92,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,91,0,0,2,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,24,115,0,0,232,92,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,24,115,0,0,8,93,0,0,8,116,0,0,160,92,0,0,0,0,0,0,3,0,0,0,48,87,0,0,2,0,0,0,0,93,0,0,2,0,0,0,48,93,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,24,115,0,0,168,93,0,0,8,116,0,0,96,93,0,0,0,0,0,0,3,0,0,0,48,87,0,0,2,0,0,0,0,93,0,0,2,0,0,0,208,93,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,24,115,0,0,72,94,0,0,8,116,0,0,0,94,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,96,94,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,8,116,0,0,136,94,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,96,94,0,0,0,8,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,24,115,0,0,8,95,0,0,8,116,0,0,240,94,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,32,95,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,8,116,0,0,72,95,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,32,95,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,24,115,0,0,224,95,0,0,8,116,0,0,200,95,0,0,0,0,0,0,1,0,0,0,0,96,0,0,0,0,0,0,8,116,0,0,128,95,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,8,96,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,8,116,0,0,136,96,0,0,0,0,0,0,1,0,0,0,0,96,0,0,0,0,0,0,8,116,0,0,64,96,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,160,96,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,24,115,0,0,56,97,0,0,8,116,0,0,32,97,0,0,0,0,0,0,1,0,0,0,88,97,0,0,0,0,0,0,8,116,0,0,216,96,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,96,97,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,8,116,0,0,224,97,0,0,0,0,0,0,1,0,0,0,88,97,0,0,0,0,0,0,8,116,0,0,152,97,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,248,97,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,24,115,0,0,120,98,0,0,8,116,0,0,48,98,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,152,98,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,24,115,0,0,8,99,0,0,8,116,0,0,192,98,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,40,99,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,24,115,0,0,152,99,0,0,8,116,0,0,80,99,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,184,99,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,24,115,0,0,40,100,0,0,8,116,0,0,224,99,0,0,0,0,0,0,2,0,0,0,48,87,0,0,2,0,0,0,72,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+17604);
/* memory initializer */ allocate([74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,114,0,0,218,0,0,0,219,0,0,0,89,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,24,115,0,0,104,114,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,168,115,0,0,128,114,0,0,0,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,168,115,0,0,160,114,0,0,120,114,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,168,115,0,0,216,114,0,0,200,114,0,0,0,0,0,0,0,0,0,0,0,115,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,24,0,0,0,15,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,128,115,0,0,220,0,0,0,224,0,0,0,222,0,0,0,223,0,0,0,25,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,168,115,0,0,88,115,0,0,200,114,0,0,0,0,0,0,105,0,0,0,0,0,0,0,64,115,0,0,144,115,0,0,0,0,0,0,240,115,0,0,220,0,0,0,225,0,0,0,222,0,0,0,223,0,0,0,24,0,0,0,16,0,0,0,2,0,0,0,9,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,168,115,0,0,200,115,0,0,0,115,0,0,0,0,0,0,0,0,0,0,80,116,0,0,220,0,0,0,226,0,0,0,222,0,0,0,223,0,0,0,24,0,0,0,17,0,0,0,3,0,0,0,10,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,168,115,0,0,40,116,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,118,0,0,227,0,0,0,228,0,0,0,90,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,168,115,0,0,128,118,0,0,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,110,97,110,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+27952);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  function _llvm_lifetime_end() {}

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }

  
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],clientBuffers:[],currArrayBuffer:0,currElementArrayBuffer:0,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.createLog2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempVertexBuffers1:[],tempVertexBufferCounters1:[],tempVertexBuffers2:[],tempVertexBufferCounters2:[],numTempVertexBuffersPerSize:64,tempIndexBuffers:[],tempQuadIndexBuffer:null,log2ceilLookup:null,createLog2ceilLookup:function (maxValue) {
        GL.log2ceilLookup = new Uint8Array(maxValue+1);
        var log2 = 0;
        var pow2 = 1;
        GL.log2ceilLookup[0] = 0;
        for(var i = 1; i <= maxValue; ++i) {
          if (i > pow2) {
            pow2 <<= 1;
            ++log2;
          }
          GL.log2ceilLookup[i] = log2;
        }
      },generateTempBuffers:function (quads) {
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        GL.tempVertexBufferCounters1.length = GL.tempVertexBufferCounters2.length = largestIndex+1;
        GL.tempVertexBuffers1.length = GL.tempVertexBuffers2.length = largestIndex+1;
        GL.tempIndexBuffers.length = largestIndex+1;
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempIndexBuffers[i] = null; // Created on-demand
          GL.tempVertexBufferCounters1[i] = GL.tempVertexBufferCounters2[i] = 0;
          var ringbufferLength = GL.numTempVertexBuffersPerSize;
          GL.tempVertexBuffers1[i] = [];
          GL.tempVertexBuffers2[i] = [];
          var ringbuffer1 = GL.tempVertexBuffers1[i];
          var ringbuffer2 = GL.tempVertexBuffers2[i];
          ringbuffer1.length = ringbuffer2.length = ringbufferLength;
          for(var j = 0; j < ringbufferLength; ++j) {
            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand
          }
        }
  
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = GLctx.createBuffer();
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, quadIndexes, GLctx.STATIC_DRAW);
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ringbuffer = GL.tempVertexBuffers1[idx];
        var nextFreeBufferIndex = GL.tempVertexBufferCounters1[idx];
        GL.tempVertexBufferCounters1[idx] = (GL.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);
        var vbo = ringbuffer[nextFreeBufferIndex];
        if (vbo) {
          return vbo;
        }
        var prevVBO = GLctx.getParameter(GLctx.ARRAY_BUFFER_BINDING);
        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, ringbuffer[nextFreeBufferIndex]);
        GLctx.bufferData(GLctx.ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, prevVBO);
        return ringbuffer[nextFreeBufferIndex];
      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ibo = GL.tempIndexBuffers[idx];
        if (ibo) {
          return ibo;
        }
        var prevIBO = GLctx.getParameter(GLctx.ELEMENT_ARRAY_BUFFER_BINDING);
        GL.tempIndexBuffers[idx] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[idx]);
        GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, prevIBO);
        return GL.tempIndexBuffers[idx];
      },newRenderingFrameStarted:function newRenderingFrameStarted() {
        var vb = GL.tempVertexBuffers1;
        GL.tempVertexBuffers1 = GL.tempVertexBuffers2;
        GL.tempVertexBuffers2 = vb;
        vb = GL.tempVertexBufferCounters1;
        GL.tempVertexBufferCounters1 = GL.tempVertexBufferCounters2;
        GL.tempVertexBufferCounters2 = vb;
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempVertexBufferCounters1[i] = 0;
        }
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
  
        if (ret === undefined) {
          var result = GLctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))|0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
  
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[(p)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = GLctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },calcBufLength:function calcBufLength(size, type, stride, count) {
        if (stride > 0) {
          return count * stride;  // XXXvlad this is not exactly correct I don't think
        }
        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];
        return size * typeSize * count;
      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {
        GL.resetBufferBinding = false;
  
        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib
        for (var i = 0; i < GL.maxVertexAttribs; ++i) {
          var cb = GL.clientBuffers[i];
          if (!cb.clientside || !cb.enabled) continue;
  
          GL.resetBufferBinding = true;
  
          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);
          var buf = GL.getTempVertexBuffer(size);
          GLctx.bindBuffer(GLctx.ARRAY_BUFFER, buf);
          GLctx.bufferSubData(GLctx.ARRAY_BUFFER,
                                   0,
                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));
          GLctx.vertexAttribPointer(i, cb.size, cb.type, cb.normalized, cb.stride, 0);
        }
      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {
        if (GL.resetBufferBinding) {
          GLctx.bindBuffer(GLctx.ARRAY_BUFFER, GL.buffers[GL.currArrayBuffer]);
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
  
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
  
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
  
        GL.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
        for (var i = 0; i < GL.maxVertexAttribs; i++) {
          GL.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0 };
        }
  
        GL.generateTempBuffers();
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
  
        GL.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
  
        GL.floatExt = GLctx.getExtension('OES_texture_float');
        
        // Extension available from Firefox 26 and Google Chrome 30
        GL.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
        
        // Extension available from Firefox 25 and WebKit
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources" ];
  
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
  
        var extensions = GLctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

  
  
  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        
        // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
        // Module['forcedAspectRatio'] = 4 / 3;
        
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'] ||
                                    canvas['msRequestPointerLock'] ||
                                    function(){};
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 document['msExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        var canvasContainer = canvas.parentNode;
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            var canvasContainer = canvas.parentNode;
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},keyCodes:{16:1249,17:1248,18:1250,33:1099,34:1102,37:1104,38:1106,39:1103,40:1105,46:127,96:1112,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,173:45,188:44,190:46,191:47,192:96},scanCodes:{8:42,9:43,13:40,27:41,32:44,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,305:224,308:226},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=0 /* XXX missing C define SDL_PIXELFORMAT_RGBA8888 */;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))|0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))|0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
  
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
  
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
      },touchX:0,touchY:0,savedKeydown:null,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            var event = {
              type: 'mousedown',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 1;
            SDL.events.push(event);
            break;
          case 'touchmove':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            event = {
              type: 'mousemove',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.events.push(event);
            break;
          case 'touchend':
            event.preventDefault();
            event = {
              type: 'mouseup',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(event);
            break;
          case 'mousemove':
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = Browser.getMouseWheelDelta(event) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            event.preventDefault();
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        return;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = event.keyCode;
            if (code >= 65 && code <= 90) {
              code += 32; // make lowercase for SDL
            } else {
              code = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
  
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
  
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28); // XXX
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))|0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))|0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(9))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=SDL.buttonState;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.button;
            HEAP8[(((ptr)+(6))|0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))|0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};
  
  function _TTF_RenderText_Solid(font, text, color) {
      // XXX the font and color are ignored
      text = Pointer_stringify(text) || ' '; // if given an empty string, still return a valid surface
      var fontData = SDL.fonts[font];
      var w = SDL.estimateTextWidth(fontData, text);
      var h = fontData.size;
      var color = SDL.loadColorToCSSRGB(color); // XXX alpha breaks fonts?
      var fontString = h + 'px ' + fontData.name;
      var surf = SDL.makeSurface(w, h, 0, false, 'text:' + text); // bogus numbers..
      var surfData = SDL.surfaces[surf];
      surfData.ctx.save();
      surfData.ctx.fillStyle = color;
      surfData.ctx.font = fontString;
      surfData.ctx.textBaseline = 'top';
      surfData.ctx.fillText(text, 0, 0);
      surfData.ctx.restore();
      return surf;
    }var _TTF_RenderText_Blended=_TTF_RenderText_Solid;

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  var _emscripten_resume=true;

  function _pthread_mutex_lock() {}

  
  
  var ___cxa_exception_header_size=8;
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }
  
  var ___cxa_last_thrown_exception=0;
  
  var ___cxa_caught_exceptions=[];function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }

  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }


  function _TTF_SizeText(font, text, w, h) {
      var fontData = SDL.fonts[font];
      if (w) {
        HEAP32[((w)>>2)]=SDL.estimateTextWidth(fontData, Pointer_stringify(text));
      }
      if (h) {
        HEAP32[((h)>>2)]=fontData.size;
      }
      return 0;
    }

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }

  
  function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      if (surf == SDL.screen) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))|0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
        HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      var srcData = SDL.surfaces[src];
      var dstData = SDL.surfaces[dst];
      var sr, dr;
      if (srcrect) {
        sr = SDL.loadRect(srcrect);
      } else {
        sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
      }
      if (dstrect) {
        dr = SDL.loadRect(dstrect);
      } else {
        dr = { x: 0, y: 0, w: -1, h: -1 };
      }
      var oldAlpha = dstData.ctx.globalAlpha;
      dstData.ctx.globalAlpha = srcData.alpha/255;
      dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, sr.w, sr.h);
      dstData.ctx.globalAlpha = oldAlpha;
      if (dst != SDL.screen) {
        // XXX As in IMG_Load, for compatibility we write out |pixels|
        Runtime.warnOnce('WARNING: copying canvas data to memory for compatibility');
        _SDL_LockSurface(dst);
        dstData.locked--; // The surface is not actually locked in this hack
      }
      return 0;
    }


  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  function _TTF_FontHeight(font) {
      var fontData = SDL.fonts[font];
      return fontData.size;
    }

  function _TTF_OpenFont(filename, size) {
      filename = FS.standardizePath(Pointer_stringify(filename));
      var id = SDL.fonts.length;
      SDL.fonts.push({
        name: filename, // but we don't actually do anything with it..
        size: size
      });
      return id;
    }

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  function _SDL_PumpEvents(){
      SDL.events.forEach(function(event) {
        SDL.handleEvent(event);
      });
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _llvm_pow_f64=Math_pow;

   
  Module["_memmove"] = _memmove;

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = GLctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  var _emscripten_preinvoke=true;

  function _glColorMask(x0, x1, x2, x3) { GLctx.colorMask(x0, x1, x2, x3) }

  function _pthread_cond_wait() {
      return 0;
    }

  function _glUniform1f(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1f(location, v0);
    }

  function _glGenVertexArraysOES(n, arrays) {
  
      for(var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.vaos);
        var vao = GL.vaoExt.createVertexArrayOES();
        vao.name = id;
        GL.vaos[id] = vao;
        HEAP32[(((arrays)+(i*4))>>2)]=id;
      }
    }

  function _fmod(x, y) {
      return x % y;
    }

  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }

  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }

  function _memchr(ptr, chr, num) {
      chr = unSign(chr);
      for (var i = 0; i < num; i++) {
        if (HEAP8[(ptr)] == chr) return ptr;
        ptr++;
      }
      return 0;
    }

  
  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }

  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }

  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }

   
  Module["_memset"] = _memset;

  function _glGetProgramiv(program, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=GLctx.getProgramInfoLog(GL.programs[program]).length + 1;
      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          HEAP32[((p)>>2)]=ptable.maxUniformLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          if (ptable.maxAttributeLength == -1) {
            var program = GL.programs[program];
            var numAttribs = GLctx.getProgramParameter(program, GLctx.ACTIVE_ATTRIBUTES);
            ptable.maxAttributeLength = 0; // Spec says if there are no active attribs, 0 must be returned.
            for(var i = 0; i < numAttribs; ++i) {
              var activeAttrib = GLctx.getActiveAttrib(program, i);
              ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length+1);
            }
          }
          HEAP32[((p)>>2)]=ptable.maxAttributeLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else {
        HEAP32[((p)>>2)]=GLctx.getProgramParameter(GL.programs[program], pname);
      }
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }


  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
  
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
  
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  function _glBindVertexArrayOES(vao) {
  
      GL.vaoExt.bindVertexArrayOES(GL.vaos[vao]);
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr;
    }

  function ___cxa_guard_abort() {}

  var _sqrtf=Math_sqrt;

  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }

  function _llvm_invariant_start() {}

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }

  function _glUniform3f(location, v0, v1, v2) {
      location = GL.uniforms[location];
      GLctx.uniform3f(location, v0, v1, v2);
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function _glBindAttribLocation(program, index, name) {
      name = Pointer_stringify(name);
      GLctx.bindAttribLocation(GL.programs[program], index, name);
    }

  function _glDrawElements(mode, count, type, indices) {
      var buf;
      if (!GL.currElementArrayBuffer) {
        var size = GL.calcBufLength(1, type, 0, count);
        buf = GL.getTempIndexBuffer(size);
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, buf);
        GLctx.bufferSubData(GLctx.ELEMENT_ARRAY_BUFFER,
                                 0,
                                 HEAPU8.subarray(indices, indices + size));
        // the index is now 0
        indices = 0;
      }
  
      // bind any client-side buffers
      GL.preDrawHandleClientVertexAttribBindings(count);
  
      GLctx.drawElements(mode, count, type, indices);
  
      GL.postDrawHandleClientVertexAttribBindings(count);
  
      if (!GL.currElementArrayBuffer) {
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, null);
      }
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }


  var _cos=Math_cos;

  var _fseeko=_fseek;

  function _SDL_PollEvent(ptr) {
      if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
        // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
        // to automatically query for events, query for joystick events.
        SDL.queryJoysticks();
      }
      if (SDL.events.length === 0) return 0;
      if (ptr) {
        SDL.makeCEvent(SDL.events.shift(), ptr);
      }
      return 1;
    }

  function __ZNSt9exceptionD2Ev() {}

  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {
      var log = GLctx.getProgramInfoLog(GL.programs[program]);
      // Work around a bug in Chromium which causes getProgramInfoLog to return null
      if (!log) {
        log = "";
      }
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }

  function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
  
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        document.addEventListener("keydown", SDL.receiveEvent);
        document.addEventListener("keyup", SDL.receiveEvent);
        document.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
  
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
  
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown'] = 0x300 /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup'] = 0x301 /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress'] = 0x303 /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown'] = 0x401 /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup'] = 0x402 /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove'] = 0x400 /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['unload'] = 0x100 /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize'] = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }

  function _windowResizeHandler(userData, resizeHandler)
      {
        var handlerFunc = function(event)
        {
          // windows.innerWidth/Height gives the size of the browser window area that shows HTML content, including the area under the scrollbars if they exist.
          // document.body.clientWidth/Height gives the size that the content takes up on the browser client area, excluding the scrollbars.
          // Therefore pass a slightly peculiar combo of these two to guarantee that a left-right scrollbar never appears if there is more than one screenful
          // of content in the page.
          Runtime.dynCall('viii', resizeHandler, [document.body.clientWidth-10, window.innerHeight, userData]);
        }
        window.addEventListener("resize", handlerFunc, true);
      }

  function ___cxa_get_exception_ptr(ptr) {
      return ptr;
    }

  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
        // Work around a bug in Chromium which causes getShaderInfoLog to return null
        if (!log) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else {
        HEAP32[((p)>>2)]=GLctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  var _llvm_memset_p0i8_i32=_memset;

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_landingpad=true;


  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }

  function _SDL_SetVideoMode(width, height, depth, flags) {
      ['mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
  
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        var canvas = Module['canvas'];
        width = canvas.width;
        height = canvas.height;
      }
  
      Browser.setCanvasSize(width, height, true);
      // Free the old surface first.
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        SDL.screen = null;
      }
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          SDL.receiveEvent({
            type: 'resize',
            w: w,
            h: h
          });
        });
      }
      return SDL.screen;
    }

  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  function _glDrawArrays(mode, first, count) {
      // bind any client-side buffers
      GL.preDrawHandleClientVertexAttribBindings(first + count);
  
      GLctx.drawArrays(mode, first, count);
  
      GL.postDrawHandleClientVertexAttribBindings();
    }

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  function _SDL_GL_SetAttribute(attr, value) {
      if (!(attr in SDL.glAttributes)) {
        abort('Unknown SDL GL attribute (' + attr + '). Please check if your SDL version is supported.');
      }
  
      SDL.glAttributes[attr] = value;
    }

  function _glDisable(x0) { GLctx.disable(x0) }

  var _emscripten_postinvoke=true;

  var _copysignl=_copysign;

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _glClear(x0) { GLctx.clear(x0) }

  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }

  function _glEnableVertexAttribArray(index) {
      var cb = GL.clientBuffers[index];
      cb.enabled = true;
      GLctx.enableVertexAttribArray(index);
    }

  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
      if (target == GLctx.ARRAY_BUFFER) {
        GL.currArrayBuffer = buffer;
      } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
        GL.currElementArrayBuffer = buffer;
      }
  
      GLctx.bindBuffer(target, bufferObj);
    }

  function _SDL_GetError() {
      if (!SDL.errorMessage) {
        SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), 'i8', ALLOC_NORMAL);
      }
      return SDL.errorMessage;
    }

  function _TTF_Init() {
      var canvas = document.createElement('canvas');
      SDL.ttfContext = canvas.getContext('2d');
      return 0;
    }

  function _glUniformMatrix3fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[8];
        for (var i = 0; i < 9; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*36)>>2);
      }
      GLctx.uniformMatrix3fv(location, transpose, view);
    }

  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      if (!data) {
        GLctx.bufferData(target, size, usage);
      } else {
        GLctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
      }
    }

  function _SDL_GL_SwapBuffers() {}

  function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _pthread_mutex_unlock() {}

  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      var cb = GL.clientBuffers[index];
      if (!GL.currArrayBuffer) {
        cb.size = size;
        cb.type = type;
        cb.normalized = normalized;
        cb.stride = stride;
        cb.ptr = ptr;
        cb.clientside = true;
        return;
      }
      cb.clientside = false;
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }


  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _llvm_lifetime_start() {}

  function _SDL_Quit() {
      for (var i = 0; i < SDL.numChannels; ++i) {
        if (SDL.channels[i].audio) {
          SDL.channels[i].audio.pause();
        }
      }
      if (SDL.music.audio) {
        SDL.music.audio.pause();
      }
      Module.print('SDL_Quit called (and ignored)');
    }

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  function _uselocale(locale) {
      return 0;
    }

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }


  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  var _ftello=_ftell;

  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) log = '(unknown error)';
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  var _tan=Math_tan;

  function _ispunct(chr) {
      return (chr >= 33 && chr <= 47) ||
             (chr >= 58 && chr <= 64) ||
             (chr >= 91 && chr <= 96) ||
             (chr >= 123 && chr <= 126);
    }


  function _glEnable(x0) { GLctx.enable(x0) }

  var _fabs=Math_abs;

  var _getc=_fgetc;

  function _emscripten_asm_const_int(code) {
      var args = Array.prototype.slice.call(arguments, 1);
      return Runtime.getAsmConst(code, args.length).apply(null, args) | 0;
    }

  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = GLctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }

  function _SDL_CreateRGBSurface(flags, width, height, depth, rmask, gmask, bmask, amask) {
      return SDL.makeSurface(width, height, flags, false, 'CreateRGBSurface', rmask, gmask, bmask, amask);
    }

  var _sin=Math_sin;

  var _fmodl=_fmod;

  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = GLctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

   
  Module["_tolower"] = _tolower;

  
  
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }

  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
        GL.newRenderingFrameStarted();
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
  
        try {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
  
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
  
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  function _canvasWheelEvent(userData, wheelHandler)
      {
        var handlerFunc = function(event)
        {
            var e = window.event || e; // old IE support
            var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));
            Runtime.dynCall('vii', wheelHandler, [delta, userData]);
        }
          var canvas = document.getElementById("canvas");
  
          canvas.addEventListener("mousewheel", handlerFunc, false);
          // Firefox
          canvas.addEventListener("DOMMouseScroll", handlerFunc, false);}

  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      GLctx.uniformMatrix4fv(location, transpose, view);
    }


  function _glGetError() {
      // First return any GL error generated by the emscripten library_gl.js interop layer.
      if (GL.lastError) {
        var error = GL.lastError;
        GL.lastError = 0/*GL_NO_ERROR*/;
        return error;
      } else { // If there were none, return the GL error from the browser GL context.
        return GLctx.getError();
      }
    }

  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }

  function _glDeleteBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((buffers)+(i*4))>>2)];
        var buffer = GL.buffers[id];
  
        // From spec: "glDeleteBuffers silently ignores 0's and names that do not
        // correspond to existing buffer objects."
        if (!buffer) continue;
  
        GLctx.deleteBuffer(buffer);
        buffer.name = 0;
        GL.buffers[id] = null;
  
        if (id == GL.currArrayBuffer) GL.currArrayBuffer = 0;
        if (id == GL.currElementArrayBuffer) GL.currElementArrayBuffer = 0;
      }
    }

  function _emscripten_set_canvas_size(width, height) {
      Browser.setCanvasSize(width, height);
    }

  function _SDL_FreeSurface(surf) {
      if (surf) SDL.freeSurface(surf);
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var __ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);




   
  Module["_emscripten_replace_memory"] = _emscripten_replace_memory;
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
var GLctx; GL.init()
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viddd(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viddd"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viddi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viddi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidddd(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_vidddd"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiddd(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiddd"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vdddd(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vdddd"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"almost asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.__ZTISt9exception|0;var p=env.___dso_handle|0;var q=env._stderr|0;var r=env._stdin|0;var s=env._stdout|0;var t=0;var u=0;var v=0;var w=0;var x=+env.NaN,y=+env.Infinity;var z=0,A=0,B=0,C=0,D=0.0,E=0,F=0,G=0,H=0.0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=global.Math.floor;var T=global.Math.abs;var U=global.Math.sqrt;var V=global.Math.pow;var W=global.Math.cos;var X=global.Math.sin;var Y=global.Math.tan;var Z=global.Math.acos;var _=global.Math.asin;var $=global.Math.atan;var aa=global.Math.atan2;var ba=global.Math.exp;var ca=global.Math.log;var da=global.Math.ceil;var ea=global.Math.imul;var fa=env.abort;var ga=env.assert;var ha=env.asmPrintInt;var ia=env.asmPrintFloat;var ja=env.min;var ka=env.invoke_iiiiiiii;var la=env.invoke_viiiii;var ma=env.invoke_vi;var na=env.invoke_vii;var oa=env.invoke_ii;var pa=env.invoke_viddd;var qa=env.invoke_iiiiiiiiiiii;var ra=env.invoke_viddi;var sa=env.invoke_iiii;var ta=env.invoke_viiiiiiiiiiiiiii;var ua=env.invoke_viiiiid;var va=env.invoke_viiiiiiii;var wa=env.invoke_viiiiii;var xa=env.invoke_vidddd;var ya=env.invoke_iid;var za=env.invoke_viiddd;var Aa=env.invoke_viiiiiii;var Ba=env.invoke_viiiiiid;var Ca=env.invoke_viiiiiiiii;var Da=env.invoke_viiiiiiiiii;var Ea=env.invoke_iii;var Fa=env.invoke_iiiiii;var Ga=env.invoke_diii;var Ha=env.invoke_iiiiiiiii;var Ia=env.invoke_i;var Ja=env.invoke_iiiii;var Ka=env.invoke_vdddd;var La=env.invoke_viii;var Ma=env.invoke_v;var Na=env.invoke_viid;var Oa=env.invoke_viiii;var Pa=env._glUseProgram;var Qa=env._fabs;var Ra=env._glUniformMatrix3fv;var Sa=env._vsscanf;var Ta=env.__ZSt9terminatev;var Ua=env._memchr;var Va=env.___cxa_guard_acquire;var Wa=env.__reallyNegative;var Xa=env.___assert_fail;var Ya=env.__ZSt18uncaught_exceptionv;var Za=env.___ctype_toupper_loc;var _a=env._glBindBuffer;var $a=env._glGetShaderInfoLog;var ab=env.__addDays;var bb=env._fsync;var cb=env._SDL_GetError;var db=env._catgets;var eb=env._sbrk;var fb=env._glBlendFunc;var gb=env._SDL_FreeSurface;var hb=env.___cxa_begin_catch;var ib=env._emscripten_memcpy_big;var jb=env.__parseInt64;var kb=env._close;var lb=env._cos;var mb=env._fileno;var nb=env._fread;var ob=env._TTF_Init;var pb=env._write;var qb=env.__isLeapYear;var rb=env._ftell;var sb=env._glGenBuffers;var tb=env._glShaderSource;var ub=env.__ZNSt9exceptionD2Ev;var vb=env.___cxa_does_inherit;var wb=env._strtoll_l;var xb=env.___cxa_rethrow;var yb=env._catclose;var zb=env._TTF_FontHeight;var Ab=env._llvm_lifetime_end;var Bb=env._glEnableVertexAttribArray;var Cb=env._glVertexAttribPointer;var Db=env._send;var Eb=env._SDL_GL_SetAttribute;var Fb=env._ispunct;var Gb=env._canvasWheelEvent;var Hb=env._glGetProgramInfoLog;var Ib=env.___cxa_is_number_type;var Jb=env.___cxa_free_exception;var Kb=env.___cxa_find_matching_catch;var Lb=env._isxdigit_l;var Mb=env._glDrawElements;var Nb=env.___cxa_guard_release;var Ob=env._SDL_LockSurface;var Pb=env._strerror_r;var Qb=env._glViewport;var Rb=env._sin;var Sb=env.___setErrNo;var Tb=env._newlocale;var Ub=env._isdigit_l;var Vb=env._emscripten_set_canvas_size;var Wb=env.___resumeException;var Xb=env._freelocale;var Yb=env.___cxa_call_unexpected;var Zb=env._TTF_SizeText;var _b=env._glTexImage2D;var $b=env.___cxa_get_exception_ptr;var ac=env._glEnable;var bc=env._glGenTextures;var cc=env._sprintf;var dc=env._vasprintf;var ec=env._glAttachShader;var fc=env._SDL_CreateRGBSurface;var gc=env._vsnprintf;var hc=env._glCreateProgram;var ic=env._strtoull_l;var jc=env._glUniformMatrix4fv;var kc=env._read;var lc=env._SDL_SetVideoMode;var mc=env._fwrite;var nc=env._time;var oc=env._pthread_mutex_lock;var pc=env._catopen;var qc=env._exit;var rc=env.___cxa_guard_abort;var sc=env._llvm_pow_f64;var tc=env.___ctype_b_loc;var uc=env._fmod;var vc=env._lseek;var wc=env._llvm_invariant_start;var xc=env.___cxa_allocate_exception;var yc=env._SDL_PumpEvents;var zc=env._pwrite;var Ac=env._glBindTexture;var Bc=env._open;var Cc=env._glClearColor;var Dc=env._uselocale;var Ec=env._SDL_Init;var Fc=env._glUniform1f;var Gc=env._snprintf;var Hc=env.___errno_location;var Ic=env.___cxa_end_catch;var Jc=env._SDL_Quit;var Kc=env._strtoull;var Lc=env._strftime;var Mc=env._glDrawArrays;var Nc=env._TTF_RenderText_Solid;var Oc=env._glGetError;var Pc=env._fseek;var Qc=env._isxdigit;var Rc=env._fclose;var Sc=env._sqrtf;var Tc=env._glActiveTexture;var Uc=env._pthread_cond_broadcast;var Vc=env._recv;var Wc=env._tan;var Xc=env._fgetc;var Yc=env._glCompileShader;var Zc=env._sysconf;var _c=env.__getFloat;var $c=env._abort;var ad=env._glDeleteBuffers;var bd=env._glBufferData;var cd=env._isspace;var dd=env._fopen;var ed=env.___cxa_pure_virtual;var fd=env._glGenVertexArraysOES;var gd=env._pthread_cond_wait;var hd=env._llvm_lifetime_start;var id=env._glGetProgramiv;var jd=env._glUniform3f;var kd=env.___gxx_personality_v0;var ld=env._windowResizeHandler;var md=env._emscripten_asm_const_int;var nd=env._ungetc;var od=env._glLinkProgram;var pd=env._strtoll;var qd=env._strftime_l;var rd=env._sscanf;var sd=env._llvm_eh_typeid_for;var td=env._SDL_PollEvent;var ud=env._glGetUniformLocation;var vd=env._glTexParameteri;var wd=env._glClear;var xd=env._asprintf;var yd=env.__exit;var zd=env._glBindAttribLocation;var Ad=env.__arraySum;var Bd=env._glGetShaderiv;var Cd=env.___ctype_tolower_loc;var Dd=env._TTF_OpenFont;var Ed=env._pthread_mutex_unlock;var Fd=env._pread;var Gd=env._mkport;var Hd=env._fflush;var Id=env._glBindVertexArrayOES;var Jd=env._emscripten_set_main_loop;var Kd=env.__scanString;var Ld=env._copysign;var Md=env.___cxa_throw;var Nd=env._glColorMask;var Od=env._SDL_GL_SwapBuffers;var Pd=env._glDisable;var Qd=env._isdigit;var Rd=env._strerror;var Sd=env.__formatString;var Td=env._atexit;var Ud=env._SDL_UpperBlit;var Vd=env._glCreateShader;var Wd=0.0;
// EMSCRIPTEN_START_FUNCS
function Np(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;if((e|0)==4){c[d>>2]=14632;a[d+4|0]=0;a[d+5|0]=0;i=f;return}else{h=g;j=f+8|0;a[h+0|0]=a[j+0|0]|0;Vp(b,d,e,g);i=f;return}}function Op(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f;h=f+8|0;j=f+16|0;k=f+24|0;l=c[b>>2]|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];e=h;d=j;c[e+0>>2]=c[d+0>>2];d=g;e=k;c[d+0>>2]=c[e+0>>2];Sp(a,l,h,g);i=f;return}function Pp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;f=e;g=e+8|0;Ip(g,c);t=0;c=f;h=e+24|0;a[c+0|0]=a[h+0|0]|0;Ja(8,b|0,g|0,d|0,f|0)|0;f=t;t=0;if(f&1){f=Kb(-1,-1)|0;_p(g);Wb(f|0)}else{_p(g);i=e;return 1}return 0}function Qp(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+32|0;b=e;f=e+8|0;Ip(f,c);t=0;c=b;g=e+24|0;a[c+0|0]=a[g+0|0]|0;Oa(22,0,f|0,d|0,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;_p(f);Wb(b|0)}else{_p(f);i=e;return 1}return 0}function Rp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;a=YB(16)|0;t=0;na(118,a|0,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;_B(a);Wb(b|0)}else{c[d>>2]=a;i=e;return}}function Sp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;j=c[e>>2]|0;e=c[f>>2]|0;f=d;pp(h,f);a:do{if((j|0)==(e|0)){k=j;l=5}else{m=j;do{if(Tp(h,a[m]|0)|0){k=m;l=5;break a}m=m+1|0;}while((m|0)!=(e|0));_p(h)}}while(0);do{if((l|0)==5){_p(h);if((k|0)==(e|0)){break}b:do{if((c[d+12>>2]|0)==0){j=k;while(1){m=j+1|0;if(!(Tp(f,a[j]|0)|0)){n=j;break b}if((m|0)==(e|0)){n=e;break}else{j=m}}}else{n=k+1|0}}while(0);c[b>>2]=k;c[b+4>>2]=n;i=g;return}}while(0);c[b>>2]=e;c[b+4>>2]=e;i=g;return}function Tp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;a[f]=d;g=c[b+8>>2]|0;if(g>>>0<9){h=b}else{h=c[b>>2]|0}b=h+g|0;g=Up(h,b,f,e)|0;if((g|0)==(b|0)){j=0;i=e;return j|0}j=(a[g]|0)<=d<<24>>24;i=e;return j|0}function Up(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;e=i;f=b;g=c-b|0;a:while(1){b=g;while(1){if((b|0)==0){break a}h=(b|0)/2|0;if((a[f+h|0]|0)<(a[d]|0)){break}else{b=h}}f=f+(h+1)|0;g=b+ -1-h|0}i=e;return f|0}function Vp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;f=i;if((e|0)==2){g=c[d>>2]|0;if((g|0)!=0){_p(g);_B(g)}c[d>>2]=0;i=f;return}else if((e|0)==0){g=c[b>>2]|0;h=YB(16)|0;t=0;na(118,h|0,g|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;_B(h);Wb(g|0)}c[d>>2]=h;i=f;return}else if((e|0)==1){c[d>>2]=c[b>>2];c[b>>2]=0;i=f;return}else if((e|0)==3){if((oC(c[(c[d>>2]|0)+4>>2]|0,14568)|0)==0){c[d>>2]=c[b>>2];i=f;return}else{c[d>>2]=0;i=f;return}}else{c[d>>2]=14632;a[d+4|0]=0;a[d+5|0]=0;i=f;return}}function Wp(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=e;g=d+8|0;a[f+0|0]=a[g+0|0]|0;Xp(b,c,e);i=d;return}function Xp(a,b,c){a=a|0;b=b|0;c=c|0;c=i;Zp(a,b);Yp(a+4|0,b);i=c;return}function Yp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=a[d]|0;if((e&1)==0){f=d+1|0;g=(e&255)>>>1}else{f=c[d+8>>2]|0;g=c[d+4>>2]|0}c[b>>2]=f+g;i=i;return}function Zp(b,d){b=b|0;d=d|0;var e=0;if((a[d]&1)==0){e=d+1|0}else{e=c[d+8>>2]|0}c[b>>2]=e;i=i;return}function _p(a){a=a|0;var b=0;b=i;if((c[a+8>>2]|0)>>>0<9){i=b;return}else{$B(c[a>>2]|0);i=b;return}}function $p(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=b;f=b+(sC(e|0)|0)|0;c[a>>2]=e;c[a+4>>2]=f;i=d;return}function aq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+8|0;e=a+8|0;f=a;c[f>>2]=0;g=b;h=c[g>>2]|0;j=b+4|0;b=c[j>>2]|0;k=b-h|0;c[e>>2]=k;if(k>>>0<9){l=b;m=h;n=a}else{a=ZB(k)|0;c[f>>2]=a;l=c[j>>2]|0;m=c[g>>2]|0;n=a}rC(n|0,m|0,l-m|0)|0;bs(n,n+(c[e>>2]|0)|0,d);i=d;return}function bq(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a[c]|0;g=a[b]|0;h=a[d]|0;j=h<<24>>24<f<<24>>24;do{if(f<<24>>24<g<<24>>24){if(j){a[b]=h;a[d]=g;k=1;break}a[b]=f;a[c]=g;l=a[d]|0;if(!(l<<24>>24<g<<24>>24)){k=1;break}a[c]=l;a[d]=g;k=2}else{if(!j){k=0;break}a[c]=h;a[d]=f;l=a[c]|0;m=a[b]|0;if(!(l<<24>>24<m<<24>>24)){k=1;break}a[b]=l;a[c]=m;k=2}}while(0);i=e;return k|0}function cq(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;f=i;g=bq(b,c,d,0)|0;h=a[e]|0;j=a[d]|0;if(!(h<<24>>24<j<<24>>24)){k=g;i=f;return k|0}a[d]=h;a[e]=j;j=a[d]|0;e=a[c]|0;if(!(j<<24>>24<e<<24>>24)){k=g+1|0;i=f;return k|0}a[c]=j;a[d]=e;e=a[c]|0;d=a[b]|0;if(!(e<<24>>24<d<<24>>24)){k=g+2|0;i=f;return k|0}a[b]=e;a[c]=d;k=g+3|0;i=f;return k|0}function dq(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;g=i;h=cq(b,c,d,e,0)|0;j=a[f]|0;k=a[e]|0;if(!(j<<24>>24<k<<24>>24)){l=h;i=g;return l|0}a[e]=j;a[f]=k;k=a[e]|0;f=a[d]|0;if(!(k<<24>>24<f<<24>>24)){l=h+1|0;i=g;return l|0}a[d]=k;a[e]=f;f=a[d]|0;e=a[c]|0;if(!(f<<24>>24<e<<24>>24)){l=h+2|0;i=g;return l|0}a[c]=f;a[d]=e;e=a[c]|0;d=a[b]|0;if(!(e<<24>>24<d<<24>>24)){l=h+3|0;i=g;return l|0}a[b]=e;a[c]=d;l=h+4|0;i=g;return l|0}function eq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((a[b+36|0]|0)!=0){Mg(b)|0}fq(b,d);d=b+28|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;if((c[b+16>>2]|0)==0){i=e;return b|0}g=c[b+32>>2]|0;if((f|0)>=(g|0)){i=e;return b|0}h=c[b+12>>2]|0;j=f;while(1){if((c[h+(j>>>5<<2)>>2]&1<<(j&31)|0)==0){k=8;break}f=j+1|0;c[d>>2]=f;if((f|0)<(g|0)){j=f}else{k=8;break}}if((k|0)==8){i=e;return b|0}return 0}function fq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e;g=b+28|0;h=c[g>>2]|0;j=c[b+32>>2]|0;if((h|0)>=(j|0)){if((a[b+52|0]&4)==0){i=e;return}c[f>>2]=2160;c[f+4>>2]=h;c[f+8>>2]=j;t=0;ma(251,f|0);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;ub(f|0);Wb(j|0)}}j=b+4|0;f=c[j>>2]|0;k=b;l=c[k>>2]|0;if((f|0)==(l|0)){i=e;return}m=b+56|0;n=b+104|0;o=b+108|0;b=h;h=f;f=l;l=0;while(1){p=f+(l*68|0)|0;if((c[p>>2]|0)==(b|0)){gq(d,p,f+(l*68|0)+4|0,m,(a[n]|0)==0?0:o);q=c[k>>2]|0;r=c[j>>2]|0}else{q=f;r=h}p=l+1|0;if(!(p>>>0<((r-q|0)/68|0)>>>0)){break}b=c[g>>2]|0;h=r;f=q;l=p}i=e;return}function gq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;h=i;i=i+248|0;j=h;k=h+8|0;l=h+16|0;m=h+24|0;n=h+32|0;o=h+40|0;p=h+48|0;q=h+56|0;r=h+152|0;s=q;Pg(q,f);u=d+28|0;v=q;t=0;La(29,u|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0,g|0);w=t;t=0;a:do{if(w&1){x=6}else{y=q;z=c[(c[v>>2]|0)+ -12>>2]|0;A=c[s+(z+4)>>2]|0;B=c[s+(z+12)>>2]|0;t=0;La(30,e|0,0,0);z=t;t=0;if(z&1){x=6;break}b:do{if((B|0)!=0&(A&16|0)!=0){t=0;Ea(36,y|0,b|0)|0;z=t;t=0;if(z&1){x=6;break a}z=f+20|0;C=c[z>>2]|0;D=f+24|0;E=c[D>>2]|0;F=E-C|0;G=d+64|0;c:do{if((c[G>>2]&2|0)==0){H=0}else{d:do{if((E|0)!=(C|0)){J=a[C]|0;t=0;na(42,l|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);K=t;t=0;if(K&1){x=6;break a}t=0;K=Ea(20,l|0,21368)|0;L=t;t=0;do{if(!(L&1)){t=0;M=Ea(c[(c[K>>2]|0)+28>>2]|0,K|0,43)|0;N=t;t=0;if(N&1){break}t=0;ma(230,l|0);N=t;t=0;if(N&1){x=6;break a}if(J<<24>>24==M<<24>>24){H=0;break c}M=a[C]|0;t=0;na(42,k|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);N=t;t=0;if(N&1){x=6;break a}t=0;N=Ea(20,k|0,21368)|0;O=t;t=0;do{if(!(O&1)){t=0;P=Ea(c[(c[N>>2]|0)+28>>2]|0,N|0,45)|0;Q=t;t=0;if(Q&1){break}t=0;ma(230,k|0);Q=t;t=0;if(Q&1){x=6;break a}if(M<<24>>24==P<<24>>24){H=0;break c}else{break d}}}while(0);M=Kb(-1,-1)|0;N=I;t=0;ma(230,k|0);O=t;t=0;if(!(O&1)){R=N;S=M;x=7;break a}M=Kb(-1,-1,0)|0;Xe(M)}}while(0);J=Kb(-1,-1)|0;K=I;t=0;ma(230,l|0);L=t;t=0;if(!(L&1)){R=K;S=J;x=7;break a}J=Kb(-1,-1,0)|0;Xe(J)}}while(0);H=1}}while(0);do{if((F|0)==(B|0)){if((B|0)>(c[d+60>>2]|0)|H){break}t=0;sa(29,e|0,C|0,B|0)|0;E=t;t=0;if(E&1){x=6;break a}else{break b}}}while(0);t=0;sa(29,e|0,C|0,F|0)|0;E=t;t=0;if(E&1){x=6;break a}t=0;ma(252,f|0);E=t;t=0;if(E&1){x=6;break a}E=r;t=0;na(96,r|0,f|0);J=t;t=0;if(J&1){x=6;break a}J=r;t=0;La(29,u|0,E+(c[(c[J>>2]|0)+ -12>>2]|0)|0,g|0);K=t;t=0;e:do{if(K&1){x=67}else{L=r;c[E+((c[(c[J>>2]|0)+ -12>>2]|0)+12)>>2]=0;if(H){t=0;Ea(27,L|0,32)|0;M=t;t=0;if(M&1){x=67;break}}t=0;Ea(36,L|0,b|0)|0;M=t;t=0;if(M&1){x=67;break}M=c[D>>2]|0;N=c[z>>2]|0;do{if((M|0)==(N|0)){if((c[G>>2]&2|0)==0){T=M;U=M;V=H;break}t=0;Ea(27,L|0,32)|0;O=t;t=0;if(O&1){x=67;break e}T=c[D>>2]|0;U=c[z>>2]|0;V=1}else{T=M;U=N;V=H}}while(0);N=c[d+60>>2]|0;M=T-U|0;L=M>>>0<N>>>0?M:N;do{if(B>>>0>L>>>0){N=V&1;M=N+F|0;O=L>>>0<M>>>0?L:M;f:do{if(N>>>0<O>>>0){M=(a[e]&1)==0;P=e+1|0;Q=e+8|0;W=N;while(1){if(M){X=P}else{X=c[Q>>2]|0}Y=W+1|0;if((a[U+W|0]|0)!=(a[X+(W-N)|0]|0)){Z=W;break f}if(Y>>>0<O>>>0){W=Y}else{Z=Y;break}}}else{Z=N}}while(0);O=Z>>>0<L>>>0?Z:N;t=0;sa(29,e|0,U|0,O|0)|0;W=t;t=0;if(W&1){x=67;break e}W=B-L|0;if((W|0)<=0){t=0;Oa(14,14640,14648,227,14696);Q=t;t=0;if(Q&1){x=67;break e}}Q=c[(c[J>>2]|0)+ -12>>2]|0;P=E+(Q+76)|0;M=c[P>>2]|0;g:do{if((M|0)==-1){t=0;na(42,j|0,E+Q|0);Y=t;t=0;if(Y&1){x=67;break e}t=0;Y=Ea(20,j|0,21368)|0;_=t;t=0;do{if(!(_&1)){t=0;$=Ea(c[(c[Y>>2]|0)+28>>2]|0,Y|0,32)|0;aa=t;t=0;if(aa&1){break}t=0;ma(230,j|0);aa=t;t=0;if(aa&1){x=67;break e}aa=$<<24>>24;c[P>>2]=aa;ba=aa;break g}}while(0);Y=Kb(-1,-1)|0;_=I;t=0;ma(230,j|0);aa=t;t=0;if(!(aa&1)){ca=_;da=Y;break e}Y=Kb(-1,-1,0)|0;Xe(Y)}else{ba=M}}while(0);t=0;sa(27,e|0,W|0,ba&255|0)|0;M=t;t=0;if(M&1){x=67;break e}t=0;sa(26,e|0,U+O|0,L-O|0)|0;M=t;t=0;if(M&1){x=67;break e}if((((W|0)<0?L:B)|0)!=(B|0)){t=0;Oa(14,14704,14648,231,14696);M=t;t=0;if(M&1){x=67;break e}}M=a[e]|0;if((M&1)==0){ea=(M&255)>>>1}else{ea=c[e+4>>2]|0}if((ea|0)==(B|0)){break}t=0;Oa(14,14784,14648,232,14696);M=t;t=0;if(M&1){x=67;break e}}else{t=0;sa(29,e|0,U|0,L|0)|0;M=t;t=0;if(M&1){x=67;break e}}}while(0);t=0;ma(21,r|0);L=t;t=0;if(L&1){x=6;break a}else{break b}}}while(0);if((x|0)==67){E=Kb(-1,-1)|0;ca=I;da=E}t=0;ma(21,r|0);E=t;t=0;if(!(E&1)){fa=da;ga=ca;break a}ha=Kb(-1,-1,0)|0;ia=I;Xe(ha)}else{if((B|0)>0){c[s+((c[(c[v>>2]|0)+ -12>>2]|0)+12)>>2]=0}t=0;Ea(36,y|0,b|0)|0;E=t;t=0;if(E&1){x=6;break a}E=f+20|0;J=c[E>>2]|0;F=d+64|0;z=f+24|0;h:do{if((c[F>>2]&2|0)==0){ja=0}else{i:do{if((c[z>>2]|0)!=(J|0)){D=a[J]|0;t=0;na(42,p|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);G=t;t=0;if(G&1){x=6;break a}t=0;G=Ea(20,p|0,21368)|0;K=t;t=0;do{if(!(K&1)){t=0;C=Ea(c[(c[G>>2]|0)+28>>2]|0,G|0,43)|0;L=t;t=0;if(L&1){break}t=0;ma(230,p|0);L=t;t=0;if(L&1){x=6;break a}if(D<<24>>24==C<<24>>24){ja=0;break h}C=a[J]|0;t=0;na(42,o|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);L=t;t=0;if(L&1){x=6;break a}t=0;L=Ea(20,o|0,21368)|0;M=t;t=0;do{if(!(M&1)){t=0;P=Ea(c[(c[L>>2]|0)+28>>2]|0,L|0,45)|0;Q=t;t=0;if(Q&1){break}t=0;ma(230,o|0);Q=t;t=0;if(Q&1){x=6;break a}if(C<<24>>24==P<<24>>24){ja=0;break h}else{break i}}}while(0);C=Kb(-1,-1)|0;L=I;t=0;ma(230,o|0);M=t;t=0;if(!(M&1)){R=L;S=C;x=7;break a}C=Kb(-1,-1,0)|0;Xe(C)}}while(0);D=Kb(-1,-1)|0;G=I;t=0;ma(230,p|0);K=t;t=0;if(!(K&1)){R=G;S=D;x=7;break a}D=Kb(-1,-1,0)|0;Xe(D)}}while(0);t=0;na(42,n|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);D=t;t=0;if(D&1){x=6;break a}t=0;D=Ea(20,n|0,21368)|0;G=t;t=0;do{if(!(G&1)){t=0;K=Ea(c[(c[D>>2]|0)+28>>2]|0,D|0,32)|0;W=t;t=0;if(W&1){break}t=0;ma(230,n|0);W=t;t=0;if(W&1){x=6;break a}else{ja=K;break h}}}while(0);D=Kb(-1,-1)|0;G=I;t=0;ma(230,n|0);K=t;t=0;if(!(K&1)){R=G;S=D;x=7;break a}D=Kb(-1,-1,0)|0;Xe(D)}}while(0);D=(c[d+60>>2]|0)-(ja<<24>>24!=0)|0;G=(c[z>>2]|0)-(c[E>>2]|0)|0;K=G>>>0<D>>>0?G:D;D=c[(c[v>>2]|0)+ -12>>2]|0;G=s+(D+76)|0;W=c[G>>2]|0;j:do{if((W|0)==-1){t=0;na(42,m|0,s+D|0);O=t;t=0;if(O&1){x=6;break a}t=0;O=Ea(20,m|0,21368)|0;C=t;t=0;do{if(!(C&1)){t=0;L=Ea(c[(c[O>>2]|0)+28>>2]|0,O|0,32)|0;M=t;t=0;if(M&1){break}t=0;ma(230,m|0);M=t;t=0;if(M&1){x=6;break a}M=L<<24>>24;c[G>>2]=M;ka=M;break j}}while(0);O=Kb(-1,-1)|0;C=I;t=0;ma(230,m|0);M=t;t=0;if(!(M&1)){R=C;S=O;x=7;break a}O=Kb(-1,-1,0)|0;Xe(O)}else{ka=W}}while(0);t=0;va(7,e|0,J|0,K|0,B|0,ka&255|0,A|0,ja|0,(c[F>>2]&4|0)!=0|0);W=t;t=0;if(W&1){x=6;break a}}}while(0);t=0;ma(252,f|0);A=t;t=0;if(A&1){x=6;break}Ug(q);i=h;return}}while(0);if((x|0)==6){h=Kb(-1,-1)|0;R=I;S=h;x=7}if((x|0)==7){fa=S;ga=R}t=0;ma(21,q|0);q=t;t=0;if(q&1){ha=Kb(-1,-1,0)|0;ia=I;Xe(ha)}else{Wb(fa|0)}}function hq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+8|0;g=f;h=d+4|0;iq(g,d,e,c[d+4>>2]|0,h);d=c[g>>2]|0;do{if((d|0)!=(h|0)){g=d+16|0;j=a[e]|0;k=(j&1)==0;if(k){l=(j&255)>>>1}else{l=c[e+4>>2]|0}j=a[g]|0;m=(j&1)==0;if(m){n=(j&255)>>>1}else{n=c[d+20>>2]|0}if(k){o=e+1|0}else{o=c[e+8>>2]|0}if(m){p=g+1|0}else{p=c[d+24>>2]|0}g=n>>>0<l>>>0;m=nC(o,p,g?n:l)|0;if((m|0)==0){q=l>>>0<n>>>0?-1:g&1}else{q=m}if((q|0)<0){break}c[b>>2]=d;i=f;return}}while(0);c[b>>2]=h;i=f;return}function iq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;if((f|0)==0){h=g;j=b;c[j>>2]=h;i=d;return}k=a[e]|0;l=(k&1)==0;m=(k&255)>>>1;k=e+1|0;n=e+8|0;o=e+4|0;e=g;g=f;a:while(1){f=g;while(1){p=f+16|0;q=a[p]|0;r=(q&1)==0;if(r){s=(q&255)>>>1}else{s=c[f+20>>2]|0}if(l){t=m}else{t=c[o>>2]|0}if(r){u=p+1|0}else{u=c[f+24>>2]|0}if(l){v=k}else{v=c[n>>2]|0}p=t>>>0<s>>>0;r=nC(u,v,p?t:s)|0;if((r|0)==0){w=s>>>0<t>>>0?-1:p&1}else{w=r}if((w|0)>=0){break}r=c[f+4>>2]|0;if((r|0)==0){h=e;x=19;break a}else{f=r}}r=c[f>>2]|0;if((r|0)==0){h=f;x=19;break}else{e=f;g=r}}if((x|0)==19){j=b;c[j>>2]=h;i=d;return}}function jq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+48|0;d=b;e=b+8|0;f=b+16|0;g=b+32|0;c[f>>2]=e;c[f+4>>2]=e+2;lj(f,a)|0;if(Zj(f,d)|0){i=b;return c[d>>2]|0}d=g;wB(d);c[g>>2]=4040;c[g+4>>2]=4008;c[g+8>>2]=29592;t=0;ma(267,g|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;yB(d);Wb(g|0)}return 0}function kq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;pq(b,d)|0;f=b+36|0;g=d+36|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];a[f+8|0]=a[g+8|0]|0;nt(b+48|0,d+48|0)|0;i=e;return b|0}function lq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;if(oq(b,d)|0){i=e;return}f=a+4|0;do{a=c[f>>2]|0;g=Jj(b)|0;if((a|0)!=0){it(a,g)}c[f>>2]=(c[f>>2]|0)+12;Kj(b);}while(!(oq(b,d)|0));i=e;return}function mq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;g=c[f>>2]|0;if((g|0)==(e|0)){h=e}else{j=g;do{g=j+ -12|0;c[f>>2]=g;mt(g);j=c[f>>2]|0;}while((j|0)!=(e|0));h=c[d>>2]|0}_B(h);c[a+8>>2]=0;c[f>>2]=0;c[d>>2]=0;i=b;return}function nq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if(b>>>0>357913941){Uy(0)}else{e=YB(b*12|0)|0;c[a+4>>2]=e;c[a>>2]=e;c[a+8>>2]=e+(b*12|0);i=d;return}}function oq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a[d+44|0]|0;g=a[b+44|0]|0;do{if(f<<24>>24==0){h=g}else{if(g<<24>>24==0){h=0;break}if((c[d+36>>2]|0)!=(c[b+36>>2]|0)){j=0;i=e;return j|0}j=(c[d+40>>2]|0)==(c[b+40>>2]|0);i=e;return j|0}}while(0);j=f<<24>>24==h<<24>>24;i=e;return j|0}function pq(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;nt(b,c)|0;nt(b+12|0,c+12|0)|0;e=b+24|0;f=c+24|0;c=e+9|0;do{a[e]=a[f]|0;e=e+1|0;f=f+1|0}while((e|0)<(c|0));i=d;return b|0}function qq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+8|0;g=f;h=d+4|0;rq(g,d,e,c[d+4>>2]|0,h);d=c[g>>2]|0;do{if((d|0)!=(h|0)){g=d+16|0;j=a[e]|0;k=(j&1)==0;if(k){l=(j&255)>>>1}else{l=c[e+4>>2]|0}j=a[g]|0;m=(j&1)==0;if(m){n=(j&255)>>>1}else{n=c[d+20>>2]|0}if(k){o=e+1|0}else{o=c[e+8>>2]|0}if(m){p=g+1|0}else{p=c[d+24>>2]|0}g=n>>>0<l>>>0;m=nC(o,p,g?n:l)|0;if((m|0)==0){q=l>>>0<n>>>0?-1:g&1}else{q=m}if((q|0)<0){break}c[b>>2]=d;i=f;return}}while(0);c[b>>2]=h;i=f;return}function rq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;if((f|0)==0){h=g;j=b;c[j>>2]=h;i=d;return}k=a[e]|0;l=(k&1)==0;m=(k&255)>>>1;k=e+1|0;n=e+8|0;o=e+4|0;e=g;g=f;a:while(1){f=g;while(1){p=f+16|0;q=a[p]|0;r=(q&1)==0;if(r){s=(q&255)>>>1}else{s=c[f+20>>2]|0}if(l){t=m}else{t=c[o>>2]|0}if(r){u=p+1|0}else{u=c[f+24>>2]|0}if(l){v=k}else{v=c[n>>2]|0}p=t>>>0<s>>>0;r=nC(u,v,p?t:s)|0;if((r|0)==0){w=s>>>0<t>>>0?-1:p&1}else{w=r}if((w|0)>=0){break}r=c[f+4>>2]|0;if((r|0)==0){h=e;x=19;break a}else{f=r}}r=c[f>>2]|0;if((r|0)==0){h=f;x=19;break}else{e=f;g=r}}if((x|0)==19){j=b;c[j>>2]=h;i=d;return}}function sq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&1)==0;k=(h&255)>>>1;h=e+1|0;l=e+8|0;m=e+4|0;e=g;while(1){g=e+16|0;if(b){n=k}else{n=c[m>>2]|0}o=a[g]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[e+20>>2]|0}if(b){r=h}else{r=c[l>>2]|0}if(p){s=g+1|0}else{s=c[e+24>>2]|0}t=q>>>0<n>>>0;u=nC(r,s,t?q:n)|0;if((u|0)==0){v=n>>>0<q>>>0?-1:t&1}else{v=u}if((v|0)<0){w=e;u=c[w>>2]|0;if((u|0)==0){x=17;break}else{e=u;continue}}if(p){y=(o&255)>>>1}else{y=c[e+20>>2]|0}if(b){z=k}else{z=c[m>>2]|0}if(p){A=g+1|0}else{A=c[e+24>>2]|0}if(b){B=h}else{B=c[l>>2]|0}g=z>>>0<y>>>0;p=nC(A,B,g?z:y)|0;if((p|0)==0){C=y>>>0<z>>>0?-1:g&1}else{C=p}if((C|0)>=0){x=33;break}D=e+4|0;p=c[D>>2]|0;if((p|0)==0){x=32;break}else{e=p}}if((x|0)==17){c[d>>2]=e;j=w;i=f;return j|0}else if((x|0)==32){c[d>>2]=e;j=D;i=f;return j|0}else if((x|0)==33){c[d>>2]=e;j=d;i=f;return j|0}return 0}function tq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=YB(32)|0;t=0;na(46,f+16|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;_B(f);Wb(d|0)}else{c[f+28>>2]=0;c[a>>2]=f;f=a+4|0;c[f>>2]=b+4;c[f+4>>2]=257;i=e;return}}function uq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function vq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=(c[a+4>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823){Uy(0)}j=(c[a+8>>2]|0)-f|0;if(j>>2>>>0<536870911){f=j>>1;k=f>>>0<h>>>0?h:f}else{k=1073741823}yq(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;if((k|0)!=0){c[k>>2]=c[b>>2]}c[g>>2]=k+4;wq(a,e);xq(e);i=d;return}function wq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=b+4|0;j=(c[g>>2]|0)-f|0;k=(c[h>>2]|0)+(0-(j>>2)<<2)|0;c[h>>2]=k;qC(k|0,f|0,j|0)|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=b+8|0;e=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=e;e=a+8|0;a=b+12|0;j=c[e>>2]|0;c[e>>2]=c[a>>2];c[a>>2]=j;c[b>>2]=c[h>>2];i=d;return}function xq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function yq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b<<2)|0}c[a>>2]=h;e=h+(d<<2)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b<<2);i=f;return}function zq(a){a=a|0;var b=0;b=i;Aq(a,c[a+4>>2]|0);i=b;return}function Aq(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{Aq(a,c[b>>2]|0);Aq(a,c[b+4>>2]|0);mt(b+16|0);_B(b);i=d;return}}function Bq(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}_B(d);i=b;return}function Cq(a){a=a|0;var b=0;b=i;Dq(a,c[a+4>>2]|0);i=b;return}function Dq(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{Dq(a,c[b>>2]|0);Dq(a,c[b+4>>2]|0);mt(b+16|0);_B(b);i=d;return}}function Eq(a){a=a|0;var b=0,c=0;b=a&-65536;c=(b|0)==0?a:b;b=c&-16711936;a=(b|0)==0?c:b;b=a&-252645136;c=(b|0)==0?a:b;b=c&-858993460;a=(b|0)==0?c:b;b=a&-1431655766;i=i;return((b|0)==0?a:b)<<1|0}function Fq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0.0,ia=0,ja=0.0,ka=0,la=0,qa=0,ra=0,ta=0;f=i;i=i+80|0;h=f;j=f+8|0;k=f+24|0;l=f+32|0;m=f+48|0;n=f+56|0;o=f+64|0;p=f+72|0;q=p;r=i;i=i+96|0;s=b;c[b+4>>2]=0;c[b+8>>2]=0;c[b>>2]=b+4;t=0;Ia(3)|0;u=t;t=0;do{if(!(u&1)){if((a[d]&1)==0){v=d+1|0}else{v=c[d+8>>2]|0}t=0;w=Ea(37,v|0,e|0)|0;x=t;t=0;if(x&1){break}t=0;x=oa(100,w|0)|0;y=t;t=0;if(y&1){break}z=+(x|0);t=0;x=Ea(25,16720,14824)|0;y=t;t=0;if(y&1){break}t=0;y=ya(1,x|0,+z)|0;x=t;t=0;if(x&1){break}t=0;Ea(25,y|0,14840)|0;y=t;t=0;if(y&1){break}y=Eq(~~z>>>0)|0;c[j+4>>2]=0;x=j+8|0;c[x>>2]=0;c[j>>2]=j+4;a[k]=32;A=o;B=o+1|0;C=+(y|0);D=l;E=l+4|0;F=j;G=r;H=r+16|0;J=r+20|0;K=r+24|0;L=r+28|0;M=r+32|0;N=r+36|0;O=r+40|0;P=r+44|0;Q=r+48|0;R=r+52|0;S=r+56|0;T=r+60|0;U=r+64|0;V=r+68|0;W=r+72|0;X=r+76|0;Y=r+80|0;Z=r+84|0;_=r+88|0;$=r+92|0;aa=l+8|0;ba=l;ca=32;while(1){a[A]=ca;a[B]=0;t=0;Ja(9,w|0,A|0,m|0,n|0)|0;da=t;t=0;if(da&1){ea=32;break}da=c[m>>2]|0;fa=Eq(da)|0;ga=+(da|0)/+(fa|0);ha=+(c[n>>2]|0)/C;c[D>>2]=da;c[p>>2]=0;t=0;da=h;ia=q;a[da+0|0]=a[ia+0|0]|0;a[da+1|0]=a[ia+1|0]|0;a[da+2|0]=a[ia+2|0]|0;a[da+3|0]=a[ia+3|0]|0;ia=sa(32,w|0,A|0,h|0)|0;da=t;t=0;if(da&1){ea=32;break}t=0;da=Ha(9,0,fa|0,y|0,32,0,0,0,0)|0;fa=t;t=0;if(fa&1){ea=32;break}t=0;Ja(10,ia|0,0,da|0,0)|0;fa=t;t=0;if(fa&1){ea=32;break}t=0;na(119,1,E|0);fa=t;t=0;if(fa&1){ea=32;break}t=0;na(120,3553,c[E>>2]|0);fa=t;t=0;if(fa&1){ea=32;break}t=0;La(44,3553,10240,9729);fa=t;t=0;if(fa&1){ea=32;break}t=0;La(44,3553,10241,9729);fa=t;t=0;if(fa&1){ea=32;break}t=0;Ca(3,3553,0,6408,c[da+8>>2]|0,c[da+12>>2]|0,0,6408,5121,c[da+20>>2]|0);fa=t;t=0;if(fa&1){ea=32;break}t=0;ma(268,da|0);da=t;t=0;if(da&1){ea=32;break}t=0;ma(268,ia|0);ia=t;t=0;if(ia&1){ea=32;break}if((Tq(F,m)|0)==0){ia=r;c[ia+0>>2]=0;c[ia+4>>2]=0;c[ia+8>>2]=0;c[ia+12>>2]=0;ja=+(c[D>>2]|0);g[H>>2]=ja;g[J>>2]=0.0;g[K>>2]=ga;g[L>>2]=0.0;g[M>>2]=0.0;g[N>>2]=z;g[O>>2]=0.0;g[P>>2]=ha;g[Q>>2]=0.0;g[R>>2]=z;g[S>>2]=0.0;g[T>>2]=ha;g[U>>2]=ja;g[V>>2]=0.0;g[W>>2]=ga;g[X>>2]=0.0;g[Y>>2]=ja;g[Z>>2]=z;g[_>>2]=ga;g[$>>2]=ha;t=0;ia=oa(101,4)|0;da=t;t=0;if(da&1){ea=32;break}t=0;ma(269,ia|0);da=t;t=0;if(da&1){ea=32;break}t=0;Oa(23,ia|0,96,G|0,35044);da=t;t=0;if(da&1){ea=32;break}t=0;Aa(41,ia|0,0,2,5126,16,0,0);da=t;t=0;if(da&1){ea=32;break}t=0;Aa(41,ia|0,1,2,5126,16,2,0);da=t;t=0;if(da&1){ea=32;break}c[ia+4>>2]=6;t=0;ma(270,ia|0);da=t;t=0;if(da&1){ea=32;break}c[aa>>2]=ia;t=0;da=Ea(38,j|0,m|0)|0;fa=t;t=0;if(fa&1){ea=32;break}c[da>>2]=ia}else{t=0;ia=Ea(38,j|0,m|0)|0;da=t;t=0;if(da&1){ea=32;break}c[aa>>2]=c[ia>>2]}t=0;ia=Ea(39,s|0,k|0)|0;da=t;t=0;if(da&1){ea=32;break}da=ia;c[da+0>>2]=c[ba+0>>2];c[da+4>>2]=c[ba+4>>2];c[da+8>>2]=c[ba+8>>2];da=(a[k]|0)+1<<24>>24;a[k]=da;if(da<<24>>24==127){ea=39;break}else{ca=da}}if((ea|0)==32){ca=Kb(-1,-1)|0;ka=ca;la=I}else if((ea|0)==39){t=0;ca=Ea(25,16632,14848)|0;ba=t;t=0;do{if(!(ba&1)){t=0;aa=Ea(40,ca|0,c[x>>2]|0)|0;G=t;t=0;if(G&1){break}t=0;Ea(25,aa|0,14864)|0;aa=t;t=0;if(aa&1){break}t=0;pa(1,0,0.0,0.0,0.0);aa=t;t=0;if(aa&1){break}Wq(F);i=f;return}}while(0);x=Kb(-1,-1)|0;ka=x;la=I}Wq(F);qa=ka;ra=la;ta=b;Uq(ta);Wb(qa|0)}}while(0);la=Kb(-1,-1)|0;qa=la;ra=I;ta=b;Uq(ta);Wb(qa|0)}function Gq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=Qq(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+20|0;i=d;return k|0}Rq(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;Sq(a,c[e>>2]|0,g,f);j=f;k=j+20|0;i=d;return k|0}function Hq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=Nq(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+20|0;i=d;return k|0}Oq(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;Pq(a,c[e>>2]|0,g,f);j=f;k=j+20|0;i=d;return k|0}function Iq(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0,f=0;a=i;i=i+16|0;e=a;f=$f()|0;Ro(so(f,14888)|0);jt(e,14936,10);t=0;za(1,f|0,e|0,+b,+c,+d);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;mt(e);Wb(f|0)}else{mt(e);i=a;return}}function Jq(b,d,e,f){b=b|0;d=+d;e=+e;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0.0,x=0,y=0,z=0;g=i;i=i+40|0;h=g;j=g+16|0;k=g+32|0;Tc(33984);l=$f()|0;Ro(so(l,14888)|0);jt(h,14904,4);t=0;Na(1,l|0,h|0,+e);m=t;t=0;if(m&1){m=Kb(-1,-1)|0;n=I;mt(h);o=m;p=n;Wb(o|0)}mt(h);ac(3042);Pd(2929);fb(770,771);h=f;n=a[h]|0;if((n&1)==0){q=(n&255)>>>1}else{q=c[f+4>>2]|0}if((q|0)==0){Pd(3042);ac(2929);i=g;return}n=f+1|0;m=b;r=k;s=b+4|0;b=k;k=f+8|0;e=d;f=0;while(1){jt(j,14912,4);t=0;Na(1,l|0,j|0,+e);u=t;t=0;if(u&1){break}mt(j);if((a[h]&1)==0){v=n}else{v=c[k>>2]|0}Lq(r,m,v+f|0);u=c[b>>2]|0;if((u|0)==(s|0)){w=e}else{x=c[u+20>>2]|0;y=c[u+28>>2]|0;Ac(3553,c[u+24>>2]|0);tr(y);yr(y);ur(y);w=e+ +(x|0)}x=f+1|0;if(x>>>0<q>>>0){e=w;f=x}else{z=15;break}}if((z|0)==15){Pd(3042);ac(2929);i=g;return}g=Kb(-1,-1)|0;z=I;mt(j);o=g;p=z;Wb(o|0)}function Kq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;a=i;i=i+32|0;d=a;e=a+16|0;f=$f()|0;Ro(so(f,14888)|0);jt(d,14920,6);t=0;Na(1,f|0,d|0,+(2.0/+(b|0)));b=t;t=0;if(b&1){b=Kb(-1,-1)|0;g=I;mt(d);h=g;j=b;Wb(j|0)}mt(d);jt(e,14928,6);t=0;Na(1,f|0,e|0,+(-2.0/+(c|0)));c=t;t=0;if(!(c&1)){mt(e);i=a;return}a=Kb(-1,-1)|0;c=I;mt(e);h=c;j=a;Wb(j|0)}function Lq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+8|0;g=f;h=d+4|0;Mq(g,d,e,c[d+4>>2]|0,h);d=c[g>>2]|0;do{if((d|0)!=(h|0)){if((a[e]|0)<(a[d+16|0]|0)){break}c[b>>2]=d;i=f;return}}while(0);c[b>>2]=h;i=f;return}function Mq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;d=i;a:do{if((f|0)==0){h=g}else{j=a[e]|0;k=g;l=f;while(1){m=l;while(1){if(!((a[m+16|0]|0)<j<<24>>24)){break}n=c[m+4>>2]|0;if((n|0)==0){h=k;break a}else{m=n}}n=c[m>>2]|0;if((n|0)==0){h=m;break}else{k=m;l=n}}}}while(0);c[b>>2]=h;i=d;return}function Nq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;e=g;while(1){g=a[e+16|0]|0;if(h<<24>>24<g<<24>>24){k=e;b=c[k>>2]|0;if((b|0)==0){l=5;break}else{e=b;continue}}if(!(g<<24>>24<h<<24>>24)){l=9;break}m=e+4|0;g=c[m>>2]|0;if((g|0)==0){l=8;break}else{e=g}}if((l|0)==5){c[d>>2]=e;j=k;i=f;return j|0}else if((l|0)==8){c[d>>2]=e;j=m;i=f;return j|0}else if((l|0)==9){c[d>>2]=e;j=d;i=f;return j|0}return 0}function Oq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=YB(32)|0;h=g;j=d+4|0;a[g+16|0]=a[e]|0;e=g+20|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[b>>2]=h;h=b+4|0;c[h>>2]=j;c[h+4>>2]=257;i=f;return}function Pq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function Qq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[a+4>>2]|0;if((f|0)==0){g=a+4|0;c[b>>2]=g;h=g;i=e;return h|0}g=c[d>>2]|0;d=f;while(1){f=c[d+16>>2]|0;if((g|0)<(f|0)){j=d;a=c[j>>2]|0;if((a|0)==0){k=5;break}else{d=a;continue}}if((f|0)>=(g|0)){k=9;break}l=d+4|0;f=c[l>>2]|0;if((f|0)==0){k=8;break}else{d=f}}if((k|0)==5){c[b>>2]=d;h=j;i=e;return h|0}else if((k|0)==8){c[b>>2]=d;h=l;i=e;return h|0}else if((k|0)==9){c[b>>2]=d;h=b;i=e;return h|0}return 0}function Rq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=YB(24)|0;c[f+16>>2]=c[d>>2];c[f+20>>2]=0;c[a>>2]=f;f=a+4|0;c[f>>2]=b+4;c[f+4>>2]=257;i=e;return}function Sq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function Tq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[a+4>>2]|0;if((e|0)==0){f=0;i=d;return f|0}a=c[b>>2]|0;b=e;while(1){e=c[b+16>>2]|0;if((a|0)<(e|0)){g=b}else{if((e|0)>=(a|0)){f=1;h=8;break}g=b+4|0}e=c[g>>2]|0;if((e|0)==0){f=0;h=8;break}else{b=e}}if((h|0)==8){i=d;return f|0}return 0}function Uq(a){a=a|0;var b=0;b=i;Vq(a,c[a+4>>2]|0);i=b;return}function Vq(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{Vq(a,c[b>>2]|0);Vq(a,c[b+4>>2]|0);_B(b);i=d;return}}function Wq(a){a=a|0;var b=0;b=i;Xq(a,c[a+4>>2]|0);i=b;return}function Xq(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{Xq(a,c[b>>2]|0);Xq(a,c[b+4>>2]|0);_B(b);i=d;return}}function Yq(a){a=+a;i=i;return+(a/180.0*3.141592653589793)}function Zq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;if((Oc()|0)==0){i=d;return}f=e;a:while(1){c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;t=0;g=Ia(4)|0;h=t;t=0;if(h&1){j=19;break}switch(g|0){case 1281:{t=0;Ea(23,e|0,14976)|0;h=t;t=0;if(h&1){j=19;break a}break};case 1282:{t=0;Ea(23,e|0,15e3)|0;h=t;t=0;if(h&1){j=19;break a}break};case 0:{j=5;break a;break};case 1280:{t=0;Ea(23,e|0,14952)|0;h=t;t=0;if(h&1){j=19;break a}break};case 1285:{t=0;Ea(23,e|0,15032)|0;h=t;t=0;if(h&1){j=19;break a}break};default:{}}t=0;h=Ea(25,16720,15056)|0;k=t;t=0;if(k&1){j=19;break}t=0;k=Ea(36,h|0,e|0)|0;h=t;t=0;if(h&1){j=19;break}t=0;h=Ea(25,k|0,15072)|0;k=t;t=0;if(k&1){j=19;break}t=0;k=Ea(26,h|0,b|0)|0;h=t;t=0;if(h&1){j=19;break}t=0;h=Ea(25,k|0,15088)|0;k=t;t=0;if(k&1){j=19;break}t=0;k=Ea(36,h|0,a|0)|0;h=t;t=0;if(h&1){j=19;break}t=0;Ea(25,k|0,15104)|0;k=t;t=0;if(k&1){j=19;break}mt(e);if((g|0)==0){j=18;break}}if((j|0)==5){mt(e);i=d;return}else if((j|0)==18){i=d;return}else if((j|0)==19){j=Kb(-1,-1)|0;mt(e);Wb(j|0)}}function _q(b,c,d,e){b=b|0;c=+c;d=+d;e=+e;var f=0,h=0;f=i;h=b;g[k>>2]=c;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+4|0;g[k>>2]=d;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+8|0;g[k>>2]=e;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];i=f;return}function $q(b,c){b=b|0;c=c|0;var d=0,e=0,f=0.0;d=i;e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=b;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[k>>2]=f+ +g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=b+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[k>>2]=f+ +g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=b+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[k>>2]=f+ +g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return}function ar(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,l=0,m=0,n=0;e=i;i=i+8|0;f=e;a:do{if(!(d!=0.0)){h=Ye(Ye(Ye(Ye(Ku(Ye(Ye(Ye(16720,15112)|0,15224)|0,15136)|0,101)|0,15168)|0,15192)|0,15200)|0,15216)|0;Ot(f,h+(c[(c[h>>2]|0)+ -12>>2]|0)|0);t=0;j=Ea(20,f|0,21368)|0;l=t;t=0;do{if(!(l&1)){t=0;m=Ea(c[(c[j>>2]|0)+28>>2]|0,j|0,10)|0;n=t;t=0;if(n&1){break}bz(f);Nu(h,m)|0;xu(h)|0;break a}}while(0);h=Kb(-1,-1)|0;t=0;ma(230,f|0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{Wb(h|0)}}}while(0);f=b;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2]/d;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2]/d;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2]/d;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function br(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,l=0.0,m=0.0;e=i;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=h+ +g[k>>2];f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=h+ +g[k>>2];f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];m=h+ +g[k>>2];f=b;g[k>>2]=j;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=l;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=m;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function cr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,l=0.0,m=0.0;e=i;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=h- +g[k>>2];f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=h- +g[k>>2];f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];m=h- +g[k>>2];f=b;g[k>>2]=j;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=l;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=m;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function dr(b,c,d){b=b|0;c=c|0;d=+d;var e=0,f=0,h=0.0,j=0.0,l=0.0;e=i;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2]*d;f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=+g[k>>2]*d;f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=+g[k>>2]*d;f=b;g[k>>2]=h;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=j;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=l;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function er(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+4|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+8|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return b|0}function fr(b,c){b=b|0;c=+c;var d=0,e=0;d=i;e=b;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+4|0;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+8|0;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return b|0}function gr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=i;f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=+g[k>>2];f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=+g[k>>2];f=d+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];m=+g[k>>2];f=d;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];n=+g[k>>2];f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];o=+g[k>>2];f=b;g[k>>2]=h*j-l*m;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=l*n-j*o;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=m*o-h*n;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function hr(b){b=b|0;var d=0,e=0,f=0,h=0.0,j=0,l=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0;d=i;i=i+8|0;e=d;f=b;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];j=b+4|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];l=+g[k>>2];m=b+8|0;a[k]=a[m];a[k+1|0]=a[m+1|0];a[k+2|0]=a[m+2|0];a[k+3|0]=a[m+3|0];n=+g[k>>2];o=+U(+(h*h+l*l+n*n));if(o!=0.0){p=n;q=l;r=h;s=r/o;g[k>>2]=s;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];u=q/o;g[k>>2]=u;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];v=p/o;g[k>>2]=v;a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];i=d;return}b=Ye(Ye(Ye(Ye(Ku(Ye(Ye(Ye(16720,15112)|0,15232)|0,15136)|0,252)|0,15168)|0,15192)|0,15200)|0,15216)|0;Ot(e,b+(c[(c[b>>2]|0)+ -12>>2]|0)|0);t=0;w=Ea(20,e|0,21368)|0;x=t;t=0;do{if(!(x&1)){t=0;y=Ea(c[(c[w>>2]|0)+28>>2]|0,w|0,10)|0;z=t;t=0;if(z&1){break}bz(e);Nu(b,y)|0;xu(b)|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];l=+g[k>>2];a[k]=a[m];a[k+1|0]=a[m+1|0];a[k+2|0]=a[m+2|0];a[k+3|0]=a[m+3|0];p=+g[k>>2];q=l;r=h;s=r/o;g[k>>2]=s;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];u=q/o;g[k>>2]=u;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];v=p/o;g[k>>2]=v;a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];i=d;return}}while(0);d=Kb(-1,-1)|0;t=0;ma(230,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{Wb(d|0)}}function ir(b,c){b=b|0;c=c|0;var d=0,e=0,f=0.0,h=0.0,j=0.0;d=i;e=b;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];h=f*+g[k>>2];e=b+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];j=h+f*+g[k>>2];e=b+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];h=j+f*+g[k>>2];i=d;return+h}function jr(b,c){b=b|0;c=c|0;var d=0,e=0,f=0.0,h=0.0,j=0.0;d=i;e=b;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];h=f*+g[k>>2];e=b+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];j=h+f*+g[k>>2];e=b+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];f=+g[k>>2];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];h=j+f*+g[k>>2];i=d;return+h}function kr(b,c,d,e,f){b=b|0;c=+c;d=+d;e=+e;f=+f;var h=0,j=0;h=i;j=b;g[k>>2]=c;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];j=b+4|0;g[k>>2]=d;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];j=b+8|0;g[k>>2]=e;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];j=b+12|0;g[k>>2]=f;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];i=h;return}function lr(b){b=b|0;var d=0,e=0,f=0,h=0.0,j=0,l=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+8|0;e=d;f=b;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];j=b+4|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];l=+g[k>>2];m=b+8|0;a[k]=a[m];a[k+1|0]=a[m+1|0];a[k+2|0]=a[m+2|0];a[k+3|0]=a[m+3|0];n=+g[k>>2];o=+U(+(h*h+l*l+n*n));if(o!=0.0){p=n;q=l;r=h;s=r/o;g[k>>2]=s;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];u=q/o;g[k>>2]=u;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];v=p/o;g[k>>2]=v;a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];i=d;return b|0}w=Ye(Ye(Ye(Ye(Ku(Ye(Ye(Ye(16720,15240)|0,15352)|0,15264)|0,110)|0,15296)|0,15320)|0,15328)|0,15344)|0;Ot(e,w+(c[(c[w>>2]|0)+ -12>>2]|0)|0);t=0;x=Ea(20,e|0,21368)|0;y=t;t=0;do{if(!(y&1)){t=0;z=Ea(c[(c[x>>2]|0)+28>>2]|0,x|0,10)|0;A=t;t=0;if(A&1){break}bz(e);Nu(w,z)|0;xu(w)|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];l=+g[k>>2];a[k]=a[m];a[k+1|0]=a[m+1|0];a[k+2|0]=a[m+2|0];a[k+3|0]=a[m+3|0];p=+g[k>>2];q=l;r=h;s=r/o;g[k>>2]=s;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];u=q/o;g[k>>2]=u;a[j]=a[k];a[j+1|0]=a[k+1|0];a[j+2|0]=a[k+2|0];a[j+3|0]=a[k+3|0];v=p/o;g[k>>2]=v;a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];i=d;return b|0}}while(0);b=Kb(-1,-1)|0;t=0;ma(230,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{Wb(b|0)}return 0}function mr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=i;f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=+g[k>>2];f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=+g[k>>2];f=d+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];m=+g[k>>2];f=d;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];n=+g[k>>2];f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];o=+g[k>>2];f=b;g[k>>2]=h*j-l*m;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=l*n-j*o;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=m*o-h*n;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+12|0;g[k>>2]=0.0;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function nr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,l=0.0,m=0.0;e=i;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=h- +g[k>>2];f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=h- +g[k>>2];f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=d+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];m=h- +g[k>>2];f=c+12|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2];f=b;g[k>>2]=j;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=l;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=m;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+12|0;g[k>>2]=h;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function or(b,c,d){b=b|0;c=c|0;d=+d;var e=0,f=0,h=0.0,j=0.0,l=0.0;e=i;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];h=+g[k>>2]*d;f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];j=+g[k>>2]*d;f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];l=+g[k>>2]*d;f=c+12|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];d=+g[k>>2];f=b;g[k>>2]=h;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+4|0;g[k>>2]=j;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+8|0;g[k>>2]=l;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];f=b+12|0;g[k>>2]=d;a[f]=a[k];a[f+1|0]=a[k+1|0];a[f+2|0]=a[k+2|0];a[f+3|0]=a[k+3|0];i=e;return}function pr(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+4|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+8|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+12|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+12|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return b|0}function qr(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=c;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+4|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+4|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=c+8|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];e=b+8|0;g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+12|0;g[k>>2]=0.0;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return b|0}function rr(b,c){b=b|0;c=+c;var d=0,e=0;d=i;e=b;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+4|0;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+8|0;g[k>>2]=c;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+12|0;g[k>>2]=0.0;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return b|0}function sr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=b+28|0;c[f>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;a[b+12|0]=0;t=0;na(121,1,b+8|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;Jf(f);Wb(g|0)}else{a[b+24|0]=0;c[b>>2]=d;c[b+4>>2]=0;a[b+13|0]=0;c[b+16>>2]=5121;i=e;return}}function tr(b){b=b|0;var d=0;d=i;Id(c[b+8>>2]|0);a[b+24|0]=1;i=d;return}function ur(b){b=b|0;var c=0;c=i;Id(0);a[b+24|0]=0;i=c;return}function vr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+8|0;h=g;if((a[b+24|0]|0)==0){Ye(16720,15368)|0}sb(1,h|0);j=b+32|0;k=c[j>>2]|0;if((k|0)==(c[b+36>>2]|0)){rf(b+28|0,h)}else{if((k|0)!=0){c[k>>2]=c[h>>2]}c[j>>2]=k+4}_a(34962,c[h>>2]|0);bd(34962,d|0,e|0,f|0);a[b+12|0]=1;i=g;return}function wr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+16|0;l=k;m=k+8|0;if((a[b+24|0]|0)==0){Ye(16720,15368)|0}sb(1,l|0);n=b+32|0;o=c[n>>2]|0;if((o|0)==(c[b+36>>2]|0)){rf(b+28|0,l)}else{if((o|0)!=0){c[o>>2]=c[l>>2]}c[n>>2]=o+4}sb(1,m|0);c[b+20>>2]=c[m>>2];_a(34962,c[l>>2]|0);bd(34962,d|0,e|0,j|0);if((h|0)==5121){p=1}else if((h|0)==5125){p=4}else if((h|0)==5123){p=2}else{Ye(16720,15408)|0;p=2}_a(34963,c[m>>2]|0);bd(34963,ea(p,f)|0,g|0,j|0);a[b+12|0]=1;a[b+13|0]=1;c[b+16>>2]=h;i=k;return}function xr(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;j=i;if((a[b+24|0]|0)!=1){Ye(16720,15448)|0}Cb(c|0,d|0,e|0,h&1|0,f|0,0+(g<<2)|0);Bb(c|0);i=j;return}function yr(b){b=b|0;var d=0,e=0,f=0;d=i;if((a[b+12|0]|0)==0){Ye(16720,15496)|0}if((a[b+24|0]|0)==0){Ye(16720,15544)|0}e=c[b>>2]|0;f=c[b+4>>2]|0;if((a[b+13|0]|0)==0){Mc(e|0,0,f|0);i=d;return}else{Mb(e|0,f|0,c[b+16>>2]|0,0);i=d;return}}function zr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((a[b+36|0]|0)!=0){Mg(b)|0}Ar(b,d);d=b+28|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;if((c[b+16>>2]|0)==0){i=e;return b|0}g=c[b+32>>2]|0;if((f|0)>=(g|0)){i=e;return b|0}h=c[b+12>>2]|0;j=f;while(1){if((c[h+(j>>>5<<2)>>2]&1<<(j&31)|0)==0){k=8;break}f=j+1|0;c[d>>2]=f;if((f|0)<(g|0)){j=f}else{k=8;break}}if((k|0)==8){i=e;return b|0}return 0}function Ar(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e;g=b+28|0;h=c[g>>2]|0;j=c[b+32>>2]|0;if((h|0)>=(j|0)){if((a[b+52|0]&4)==0){i=e;return}c[f>>2]=2160;c[f+4>>2]=h;c[f+8>>2]=j;t=0;ma(251,f|0);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;ub(f|0);Wb(j|0)}}j=b+4|0;f=c[j>>2]|0;k=b;l=c[k>>2]|0;if((f|0)==(l|0)){i=e;return}m=b+56|0;n=b+104|0;o=b+108|0;b=h;h=f;f=l;l=0;while(1){p=f+(l*68|0)|0;if((c[p>>2]|0)==(b|0)){Br(d,p,f+(l*68|0)+4|0,m,(a[n]|0)==0?0:o);q=c[k>>2]|0;r=c[j>>2]|0}else{q=f;r=h}p=l+1|0;if(!(p>>>0<((r-q|0)/68|0)>>>0)){break}b=c[g>>2]|0;h=r;f=q;l=p}i=e;return}function Br(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;j=i;i=i+248|0;k=j;l=j+8|0;m=j+16|0;n=j+24|0;o=j+32|0;p=j+40|0;q=j+48|0;r=j+56|0;s=j+152|0;u=r;Pg(r,f);v=d+28|0;w=r;t=0;La(29,v|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0,h|0);x=t;t=0;a:do{if(x&1){y=6}else{z=r;A=c[(c[w>>2]|0)+ -12>>2]|0;B=c[u+(A+4)>>2]|0;C=c[u+(A+12)>>2]|0;t=0;La(30,e|0,0,0);A=t;t=0;if(A&1){y=6;break}b:do{if((C|0)!=0&(B&16|0)!=0){t=0;ya(1,z|0,+(+g[b>>2]))|0;A=t;t=0;if(A&1){y=6;break a}A=f+20|0;D=c[A>>2]|0;E=f+24|0;F=c[E>>2]|0;G=F-D|0;H=d+64|0;c:do{if((c[H>>2]&2|0)==0){J=0}else{d:do{if((F|0)!=(D|0)){K=a[D]|0;t=0;na(42,m|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0);L=t;t=0;if(L&1){y=6;break a}t=0;L=Ea(20,m|0,21368)|0;M=t;t=0;do{if(!(M&1)){t=0;N=Ea(c[(c[L>>2]|0)+28>>2]|0,L|0,43)|0;O=t;t=0;if(O&1){break}t=0;ma(230,m|0);O=t;t=0;if(O&1){y=6;break a}if(K<<24>>24==N<<24>>24){J=0;break c}N=a[D]|0;t=0;na(42,l|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0);O=t;t=0;if(O&1){y=6;break a}t=0;O=Ea(20,l|0,21368)|0;P=t;t=0;do{if(!(P&1)){t=0;Q=Ea(c[(c[O>>2]|0)+28>>2]|0,O|0,45)|0;R=t;t=0;if(R&1){break}t=0;ma(230,l|0);R=t;t=0;if(R&1){y=6;break a}if(N<<24>>24==Q<<24>>24){J=0;break c}else{break d}}}while(0);N=Kb(-1,-1)|0;O=I;t=0;ma(230,l|0);P=t;t=0;if(!(P&1)){S=O;T=N;y=7;break a}N=Kb(-1,-1,0)|0;Xe(N)}}while(0);K=Kb(-1,-1)|0;L=I;t=0;ma(230,m|0);M=t;t=0;if(!(M&1)){S=L;T=K;y=7;break a}K=Kb(-1,-1,0)|0;Xe(K)}}while(0);J=1}}while(0);do{if((G|0)==(C|0)){if((C|0)>(c[d+60>>2]|0)|J){break}t=0;sa(29,e|0,D|0,C|0)|0;F=t;t=0;if(F&1){y=6;break a}else{break b}}}while(0);t=0;sa(29,e|0,D|0,G|0)|0;F=t;t=0;if(F&1){y=6;break a}t=0;ma(252,f|0);F=t;t=0;if(F&1){y=6;break a}F=s;t=0;na(96,s|0,f|0);K=t;t=0;if(K&1){y=6;break a}K=s;t=0;La(29,v|0,F+(c[(c[K>>2]|0)+ -12>>2]|0)|0,h|0);L=t;t=0;e:do{if(L&1){y=67}else{M=s;c[F+((c[(c[K>>2]|0)+ -12>>2]|0)+12)>>2]=0;if(J){t=0;Ea(27,M|0,32)|0;N=t;t=0;if(N&1){y=67;break}}t=0;ya(1,M|0,+(+g[b>>2]))|0;N=t;t=0;if(N&1){y=67;break}N=c[E>>2]|0;O=c[A>>2]|0;do{if((N|0)==(O|0)){if((c[H>>2]&2|0)==0){U=N;V=N;W=J;break}t=0;Ea(27,M|0,32)|0;P=t;t=0;if(P&1){y=67;break e}U=c[E>>2]|0;V=c[A>>2]|0;W=1}else{U=N;V=O;W=J}}while(0);O=c[d+60>>2]|0;N=U-V|0;M=N>>>0<O>>>0?N:O;do{if(C>>>0>M>>>0){O=W&1;N=O+G|0;P=M>>>0<N>>>0?M:N;f:do{if(O>>>0<P>>>0){N=(a[e]&1)==0;Q=e+1|0;R=e+8|0;X=O;while(1){if(N){Y=Q}else{Y=c[R>>2]|0}Z=X+1|0;if((a[V+X|0]|0)!=(a[Y+(X-O)|0]|0)){_=X;break f}if(Z>>>0<P>>>0){X=Z}else{_=Z;break}}}else{_=O}}while(0);P=_>>>0<M>>>0?_:O;t=0;sa(29,e|0,V|0,P|0)|0;X=t;t=0;if(X&1){y=67;break e}X=C-M|0;if((X|0)<=0){t=0;Oa(14,15584,15592,227,15640);R=t;t=0;if(R&1){y=67;break e}}R=c[(c[K>>2]|0)+ -12>>2]|0;Q=F+(R+76)|0;N=c[Q>>2]|0;g:do{if((N|0)==-1){t=0;na(42,k|0,F+R|0);Z=t;t=0;if(Z&1){y=67;break e}t=0;Z=Ea(20,k|0,21368)|0;$=t;t=0;do{if(!($&1)){t=0;aa=Ea(c[(c[Z>>2]|0)+28>>2]|0,Z|0,32)|0;ba=t;t=0;if(ba&1){break}t=0;ma(230,k|0);ba=t;t=0;if(ba&1){y=67;break e}ba=aa<<24>>24;c[Q>>2]=ba;ca=ba;break g}}while(0);Z=Kb(-1,-1)|0;$=I;t=0;ma(230,k|0);ba=t;t=0;if(!(ba&1)){da=$;ea=Z;break e}Z=Kb(-1,-1,0)|0;Xe(Z)}else{ca=N}}while(0);t=0;sa(27,e|0,X|0,ca&255|0)|0;N=t;t=0;if(N&1){y=67;break e}t=0;sa(26,e|0,V+P|0,M-P|0)|0;N=t;t=0;if(N&1){y=67;break e}if((((X|0)<0?M:C)|0)!=(C|0)){t=0;Oa(14,15648,15592,231,15640);N=t;t=0;if(N&1){y=67;break e}}N=a[e]|0;if((N&1)==0){fa=(N&255)>>>1}else{fa=c[e+4>>2]|0}if((fa|0)==(C|0)){break}t=0;Oa(14,15728,15592,232,15640);N=t;t=0;if(N&1){y=67;break e}}else{t=0;sa(29,e|0,V|0,M|0)|0;N=t;t=0;if(N&1){y=67;break e}}}while(0);t=0;ma(21,s|0);M=t;t=0;if(M&1){y=6;break a}else{break b}}}while(0);if((y|0)==67){F=Kb(-1,-1)|0;da=I;ea=F}t=0;ma(21,s|0);F=t;t=0;if(!(F&1)){ga=ea;ha=da;break a}ia=Kb(-1,-1,0)|0;ja=I;Xe(ia)}else{if((C|0)>0){c[u+((c[(c[w>>2]|0)+ -12>>2]|0)+12)>>2]=0}t=0;ya(1,z|0,+(+g[b>>2]))|0;F=t;t=0;if(F&1){y=6;break a}F=f+20|0;K=c[F>>2]|0;G=d+64|0;A=f+24|0;h:do{if((c[G>>2]&2|0)==0){ka=0}else{i:do{if((c[A>>2]|0)!=(K|0)){E=a[K]|0;t=0;na(42,q|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0);H=t;t=0;if(H&1){y=6;break a}t=0;H=Ea(20,q|0,21368)|0;L=t;t=0;do{if(!(L&1)){t=0;D=Ea(c[(c[H>>2]|0)+28>>2]|0,H|0,43)|0;M=t;t=0;if(M&1){break}t=0;ma(230,q|0);M=t;t=0;if(M&1){y=6;break a}if(E<<24>>24==D<<24>>24){ka=0;break h}D=a[K]|0;t=0;na(42,p|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0);M=t;t=0;if(M&1){y=6;break a}t=0;M=Ea(20,p|0,21368)|0;N=t;t=0;do{if(!(N&1)){t=0;Q=Ea(c[(c[M>>2]|0)+28>>2]|0,M|0,45)|0;R=t;t=0;if(R&1){break}t=0;ma(230,p|0);R=t;t=0;if(R&1){y=6;break a}if(D<<24>>24==Q<<24>>24){ka=0;break h}else{break i}}}while(0);D=Kb(-1,-1)|0;M=I;t=0;ma(230,p|0);N=t;t=0;if(!(N&1)){S=M;T=D;y=7;break a}D=Kb(-1,-1,0)|0;Xe(D)}}while(0);E=Kb(-1,-1)|0;H=I;t=0;ma(230,q|0);L=t;t=0;if(!(L&1)){S=H;T=E;y=7;break a}E=Kb(-1,-1,0)|0;Xe(E)}}while(0);t=0;na(42,o|0,u+(c[(c[w>>2]|0)+ -12>>2]|0)|0);E=t;t=0;if(E&1){y=6;break a}t=0;E=Ea(20,o|0,21368)|0;H=t;t=0;do{if(!(H&1)){t=0;L=Ea(c[(c[E>>2]|0)+28>>2]|0,E|0,32)|0;X=t;t=0;if(X&1){break}t=0;ma(230,o|0);X=t;t=0;if(X&1){y=6;break a}else{ka=L;break h}}}while(0);E=Kb(-1,-1)|0;H=I;t=0;ma(230,o|0);L=t;t=0;if(!(L&1)){S=H;T=E;y=7;break a}E=Kb(-1,-1,0)|0;Xe(E)}}while(0);E=(c[d+60>>2]|0)-(ka<<24>>24!=0)|0;H=(c[A>>2]|0)-(c[F>>2]|0)|0;L=H>>>0<E>>>0?H:E;E=c[(c[w>>2]|0)+ -12>>2]|0;H=u+(E+76)|0;X=c[H>>2]|0;j:do{if((X|0)==-1){t=0;na(42,n|0,u+E|0);P=t;t=0;if(P&1){y=6;break a}t=0;P=Ea(20,n|0,21368)|0;D=t;t=0;do{if(!(D&1)){t=0;M=Ea(c[(c[P>>2]|0)+28>>2]|0,P|0,32)|0;N=t;t=0;if(N&1){break}t=0;ma(230,n|0);N=t;t=0;if(N&1){y=6;break a}N=M<<24>>24;c[H>>2]=N;la=N;break j}}while(0);P=Kb(-1,-1)|0;D=I;t=0;ma(230,n|0);N=t;t=0;if(!(N&1)){S=D;T=P;y=7;break a}P=Kb(-1,-1,0)|0;Xe(P)}else{la=X}}while(0);t=0;va(7,e|0,K|0,L|0,C|0,la&255|0,B|0,ka|0,(c[G>>2]&4|0)!=0|0);X=t;t=0;if(X&1){y=6;break a}}}while(0);t=0;ma(252,f|0);B=t;t=0;if(B&1){y=6;break}Ug(r);i=j;return}}while(0);if((y|0)==6){j=Kb(-1,-1)|0;S=I;T=j;y=7}if((y|0)==7){ga=T;ha=S}t=0;ma(21,r|0);r=t;t=0;if(r&1){ia=Kb(-1,-1,0)|0;ja=I;Xe(ia)}else{Wb(ga|0)}}function Cr(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,ya=0,Aa=0,Ba=0,Ca=0,Da=0,Fa=0,Ga=0,Ha=0,Ja=0,Ma=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0;d=i;i=i+696|0;e=d;f=d+16|0;h=d+32|0;j=d+48|0;k=d+56|0;l=d+72|0;m=d+80|0;n=d+96|0;o=d+104|0;p=d+120|0;q=d+136|0;r=d+152|0;s=d+168|0;u=d+184|0;v=d+200|0;w=d+216|0;x=d+232|0;y=d+248|0;z=d+264|0;A=d+280|0;B=d+296|0;C=d+312|0;D=d+328|0;E=d+344|0;F=d+360|0;G=d+376|0;H=d+392|0;J=d+408|0;K=d+424|0;L=d+440|0;M=d+456|0;N=d+472|0;O=d+488|0;P=d+504|0;Q=d+520|0;R=d+536|0;S=d+552|0;T=d+568|0;U=d+584|0;V=d+600|0;W=d+616|0;X=d+632|0;Y=d+648|0;Z=d+664|0;_=d+680|0;Zi(b+28|0);$=b+108|0;aa=b+112|0;ba=b+116|0;ca=b+132|0;da=b+96|0;ea=da+32|0;do{a[da]=0;da=da+1|0}while((da|0)<(ea|0));a[ca]=1;a[b+133|0]=0;a[b+134|0]=0;a[b+8|0]=0;c[b>>2]=0;c[b+4>>2]=0;t=0;Oa(24,1,1,1,0);ca=t;t=0;a:do{if(!(ca&1)){t=0;ma(271,16640);da=t;t=0;if(da&1){break}t=0;ma(272,2929);da=t;t=0;if(da&1){break}t=0;Ka(1,.4000000059604645,.4000000059604645,.4000000059604645,1.0);da=t;t=0;if(da&1){break}g[e>>2]=0.0;g[e+4>>2]=10.0;g[e+8>>2]=40.0;g[f>>2]=0.0;g[f+4>>2]=10.0;g[f+8>>2]=0.0;g[h>>2]=0.0;g[h+4>>2]=1.0;g[h+8>>2]=0.0;t=0;da=oa(93,188)|0;ea=t;t=0;if(ea&1){break}ea=da;t=0;La(18,k|0,15768,22);fa=t;t=0;do{if(fa&1){ga=Kb(-1,-1)|0;ha=ga;ia=I}else{t=0;na(122,ea|0,k|0);ga=t;t=0;if(ga&1){ga=Kb(-1,-1)|0;ja=I;mt(k);ha=ga;ia=ja;break}mt(k);c[j>>2]=ea;ja=c[aa>>2]|0;if((ja|0)==(c[ba>>2]|0)){t=0;na(123,$|0,j|0);ga=t;t=0;if(ga&1){break a}}else{if((ja|0)==0){ka=0}else{c[ja>>2]=ea;ka=c[aa>>2]|0}c[aa>>2]=ka+4}t=0;ja=oa(93,188)|0;ga=t;t=0;if(ga&1){break a}ga=ja;t=0;La(18,m|0,15792,22);la=t;t=0;do{if(la&1){qa=Kb(-1,-1)|0;ra=I;sa=qa}else{t=0;na(122,ga|0,m|0);qa=t;t=0;if(qa&1){qa=Kb(-1,-1)|0;ta=I;mt(m);ra=ta;sa=qa;break}mt(m);c[l>>2]=ga;qa=c[aa>>2]|0;if((qa|0)==(c[ba>>2]|0)){t=0;na(123,$|0,l|0);ta=t;t=0;if(ta&1){break a}}else{if((qa|0)==0){ua=0}else{c[qa>>2]=ga;ua=c[aa>>2]|0}c[aa>>2]=ua+4}t=0;qa=oa(93,188)|0;ta=t;t=0;if(ta&1){break a}ta=qa;t=0;La(18,o|0,15816,22);va=t;t=0;do{if(va&1){wa=Kb(-1,-1)|0;ya=wa;Aa=I}else{t=0;na(122,ta|0,o|0);wa=t;t=0;if(wa&1){wa=Kb(-1,-1)|0;Ba=I;mt(o);ya=wa;Aa=Ba;break}mt(o);c[n>>2]=ta;Ba=c[aa>>2]|0;if((Ba|0)==(c[ba>>2]|0)){t=0;na(123,$|0,n|0);wa=t;t=0;if(wa&1){break a}}else{if((Ba|0)==0){Ca=0}else{c[Ba>>2]=ta;Ca=c[aa>>2]|0}c[aa>>2]=Ca+4}t=0;ma(273,b|0);Ba=t;t=0;if(Ba&1){break a}t=0;Ba=oa(93,512)|0;wa=t;t=0;if(wa&1){break a}wa=Ba;t=0;Oa(25,wa|0,e|0,f|0,h|0);Da=t;t=0;if(Da&1){Da=Kb(-1,-1)|0;Fa=I;_B(Ba);Ga=Da;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}c[b+92>>2]=wa;t=0;xa(1,wa|0,45.0,1.25,.05000000074505806,350.0);wa=t;t=0;if(wa&1){break a}t=0;wa=Ia(5)|0;Fa=t;t=0;if(Fa&1){break a}t=0;La(18,p|0,15840,10);Fa=t;t=0;if(Fa&1){break a}t=0;na(99,wa|0,p|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Da=I;mt(p);Ga=Fa;Ha=Da;Ja=$;Yr(Ja);Wb(Ga|0)}mt(p);t=0;La(18,q|0,15856,16);Da=t;t=0;if(Da&1){break a}t=0;La(33,wa|0,q|0,0);Da=t;t=0;if(Da&1){Da=Kb(-1,-1)|0;Fa=I;mt(q);Ga=Da;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(q);t=0;La(18,r|0,15880,18);Fa=t;t=0;if(Fa&1){break a}t=0;La(33,wa|0,r|0,1);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Da=I;mt(r);Ga=Fa;Ha=Da;Ja=$;Yr(Ja);Wb(Ga|0)}mt(r);t=0;La(18,s|0,15856,16);Da=t;t=0;if(Da&1){break a}t=0;La(18,u|0,15904,28);Da=t;t=0;do{if(Da&1){Fa=Kb(-1,-1)|0;Ma=Fa;Pa=I}else{t=0;La(45,wa|0,s|0,u|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Ba=I;mt(u);Ma=Fa;Pa=Ba;break}mt(u);mt(s);t=0;La(18,v|0,15880,18);Ba=t;t=0;if(Ba&1){break a}t=0;La(18,w|0,15936,28);Ba=t;t=0;do{if(Ba&1){Fa=Kb(-1,-1)|0;Qa=Fa;Ra=I}else{t=0;La(45,wa|0,v|0,w|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Sa=I;mt(w);Qa=Fa;Ra=Sa;break}mt(w);mt(v);t=0;La(18,x|0,15856,16);Sa=t;t=0;if(Sa&1){break a}t=0;na(100,wa|0,x|0);Sa=t;t=0;if(Sa&1){Sa=Kb(-1,-1)|0;Fa=I;mt(x);Ga=Sa;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(x);t=0;La(18,y|0,15880,18);Fa=t;t=0;if(Fa&1){break a}t=0;na(100,wa|0,y|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Sa=I;mt(y);Ga=Fa;Ha=Sa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(y);t=0;La(18,z|0,15840,10);Sa=t;t=0;if(Sa&1){break a}t=0;La(18,A|0,15856,16);Sa=t;t=0;do{if(Sa&1){Fa=Kb(-1,-1)|0;Ta=Fa;Ua=I}else{t=0;La(35,wa|0,z|0,A|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Va=I;mt(A);Ta=Fa;Ua=Va;break}mt(A);mt(z);t=0;La(18,B|0,15840,10);Va=t;t=0;if(Va&1){break a}t=0;La(18,C|0,15880,18);Va=t;t=0;do{if(Va&1){Fa=Kb(-1,-1)|0;Wa=Fa;Xa=I}else{t=0;La(35,wa|0,B|0,C|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;Ya=I;mt(C);Wa=Fa;Xa=Ya;break}mt(C);mt(B);t=0;La(18,D|0,15840,10);Ya=t;t=0;if(Ya&1){break a}t=0;La(18,E|0,15968,8);Ya=t;t=0;do{if(Ya&1){Fa=Kb(-1,-1)|0;Za=Fa;_a=I}else{t=0;Oa(19,wa|0,D|0,0,E|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;$a=I;mt(E);Za=Fa;_a=$a;break}mt(E);mt(D);t=0;La(18,F|0,15840,10);$a=t;t=0;if($a&1){break a}t=0;La(18,G|0,15984,10);$a=t;t=0;do{if($a&1){Fa=Kb(-1,-1)|0;ab=Fa;bb=I}else{t=0;Oa(19,wa|0,F|0,1,G|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;cb=I;mt(G);ab=Fa;bb=cb;break}mt(G);mt(F);t=0;La(18,H|0,15840,10);cb=t;t=0;if(cb&1){break a}t=0;La(18,J|0,16e3,9);cb=t;t=0;do{if(cb&1){Fa=Kb(-1,-1)|0;db=Fa;eb=I}else{t=0;Oa(19,wa|0,H|0,2,J|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;fb=I;mt(J);db=Fa;eb=fb;break}mt(J);mt(H);t=0;La(18,K|0,15840,10);fb=t;t=0;if(fb&1){break a}t=0;La(18,L|0,16016,11);fb=t;t=0;do{if(fb&1){Fa=Kb(-1,-1)|0;gb=Fa;hb=I}else{t=0;Oa(19,wa|0,K|0,3,L|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ib=I;mt(L);gb=Fa;hb=ib;break}mt(L);mt(K);t=0;La(18,M|0,15840,10);ib=t;t=0;if(ib&1){break a}t=0;La(18,N|0,16032,9);ib=t;t=0;do{if(ib&1){Fa=Kb(-1,-1)|0;jb=Fa;kb=I}else{t=0;Oa(19,wa|0,M|0,4,N|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;lb=I;mt(N);jb=Fa;kb=lb;break}mt(N);mt(M);t=0;La(18,O|0,15840,10);lb=t;t=0;if(lb&1){break a}t=0;La(18,P|0,16048,11);lb=t;t=0;do{if(lb&1){Fa=Kb(-1,-1)|0;mb=I;nb=Fa}else{t=0;Oa(19,wa|0,O|0,5,P|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(P);mb=ob;nb=Fa;break}mt(P);mt(O);t=0;La(18,Q|0,15840,10);Fa=t;t=0;if(Fa&1){break a}t=0;na(101,wa|0,Q|0);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(Q);Ga=Fa;Ha=ob;Ja=$;Yr(Ja);Wb(Ga|0)}mt(Q);t=0;ob=Ea(41,wa|0,15840)|0;Fa=t;t=0;if(Fa&1){break a}t=0;ma(274,ob|0);ob=t;t=0;if(ob&1){break a}t=0;La(18,R|0,16064,11);ob=t;t=0;if(ob&1){break a}t=0;za(2,wa|0,R|0,.10000000149011612,.10000000149011612,.10000000149011612);ob=t;t=0;if(ob&1){ob=Kb(-1,-1)|0;Fa=I;mt(R);Ga=ob;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(R);t=0;La(18,S|0,16080,11);Fa=t;t=0;if(Fa&1){break a}t=0;za(2,wa|0,S|0,.800000011920929,.800000011920929,.800000011920929);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(S);Ga=Fa;Ha=ob;Ja=$;Yr(Ja);Wb(Ga|0)}mt(S);t=0;La(18,T|0,16096,11);ob=t;t=0;if(ob&1){break a}t=0;za(2,wa|0,T|0,1.0,1.0,1.0);ob=t;t=0;if(ob&1){ob=Kb(-1,-1)|0;Fa=I;mt(T);Ga=ob;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(T);t=0;La(18,U|0,16112,18);Fa=t;t=0;if(Fa&1){break a}t=0;Na(2,wa|0,U|0,1.0e3);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(U);Ga=Fa;Ha=ob;Ja=$;Yr(Ja);Wb(Ga|0)}mt(U);t=0;La(18,V|0,16136,14);ob=t;t=0;if(ob&1){break a}g[W>>2]=2.0;g[W+4>>2]=20.0;g[W+8>>2]=2.0;t=0;La(46,wa|0,V|0,W|0);ob=t;t=0;if(ob&1){ob=Kb(-1,-1)|0;Fa=I;mt(V);Ga=ob;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(V);t=0;La(18,X|0,16152,8);Fa=t;t=0;if(Fa&1){break a}t=0;za(2,wa|0,X|0,.10000000149011612,.10000000149011612,.10000000149011612);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(X);Ga=Fa;Ha=ob;Ja=$;Yr(Ja);Wb(Ga|0)}mt(X);t=0;La(18,Y|0,16168,8);ob=t;t=0;if(ob&1){break a}t=0;za(2,wa|0,Y|0,1.0,1.0,1.0);ob=t;t=0;if(ob&1){ob=Kb(-1,-1)|0;Fa=I;mt(Y);Ga=ob;Ha=Fa;Ja=$;Yr(Ja);Wb(Ga|0)}mt(Y);t=0;La(18,Z|0,16184,8);Fa=t;t=0;if(Fa&1){break a}t=0;za(2,wa|0,Z|0,.8999999761581421,.8999999761581421,.8999999761581421);Fa=t;t=0;if(Fa&1){Fa=Kb(-1,-1)|0;ob=I;mt(Z);Ga=Fa;Ha=ob;Ja=$;Yr(Ja);Wb(Ga|0)}mt(Z);t=0;ma(272,2929);ob=t;t=0;if(ob&1){break a}t=0;ob=oa(93,12)|0;Fa=t;t=0;if(Fa&1){break a}Fa=ob;t=0;La(18,_|0,16200,15);pb=t;t=0;do{if(pb&1){qb=Kb(-1,-1)|0;rb=qb;sb=I}else{t=0;La(47,Fa|0,_|0,35);qb=t;t=0;if(qb&1){qb=Kb(-1,-1)|0;tb=I;mt(_);rb=qb;sb=tb;break}tb=b+136|0;c[tb>>2]=Fa;mt(_);t=0;La(48,c[tb>>2]|0,720,576);qb=t;t=0;if(qb&1){break a}t=0;pa(1,c[tb>>2]|0,1.0,0.0,0.0);tb=t;t=0;if(tb&1){break a}i=d;return}}while(0);_B(ob);Ga=rb;Ha=sb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(O);Ga=nb;Ha=mb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(M);Ga=jb;Ha=kb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(K);Ga=gb;Ha=hb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(H);Ga=db;Ha=eb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(F);Ga=ab;Ha=bb;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(D);Ga=Za;Ha=_a;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(B);Ga=Wa;Ha=Xa;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(z);Ga=Ta;Ha=Ua;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(v);Ga=Qa;Ha=Ra;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);mt(s);Ga=Ma;Ha=Pa;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);_B(qa);Ga=ya;Ha=Aa;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);_B(ja);Ga=sa;Ha=ra;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);_B(da);Ga=ha;Ha=ia;Ja=$;Yr(Ja);Wb(Ga|0)}}while(0);ia=Kb(-1,-1)|0;Ga=ia;Ha=I;Ja=$;Yr(Ja);Wb(Ga|0)}function Dr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+264|0;e=d;f=d+16|0;g=d+32|0;h=d+48|0;j=d+64|0;k=d+80|0;l=d+96|0;m=d+112|0;n=d+128|0;o=d+200|0;p=d+216|0;q=d+232|0;r=d+248|0;s=b+108|0;Yj(e,(c[c[s>>2]>>2]|0)+20|0);t=0;na(124,f|0,(c[(c[s>>2]|0)+4>>2]|0)+20|0);u=t;t=0;if(u&1){u=Kb(-1,-1)|0;v=u;w=I;x=e;Gf(x);Wb(v|0)}t=0;na(124,g|0,(c[(c[s>>2]|0)+8>>2]|0)+20|0);u=t;t=0;if(u&1){u=Kb(-1,-1)|0;y=u;z=I}else{t=0;na(125,h|0,(c[c[s>>2]>>2]|0)+56|0);u=t;t=0;if(u&1){u=Kb(-1,-1)|0;A=u;B=I}else{t=0;na(124,j|0,(c[c[s>>2]>>2]|0)+32|0);u=t;t=0;if(u&1){u=Kb(-1,-1)|0;C=u;D=I}else{t=0;na(124,k|0,(c[(c[s>>2]|0)+4>>2]|0)+32|0);u=t;t=0;if(u&1){u=Kb(-1,-1)|0;E=u;F=I}else{t=0;na(124,l|0,(c[(c[s>>2]|0)+8>>2]|0)+32|0);s=t;t=0;if(s&1){s=Kb(-1,-1)|0;G=s;H=I}else{s=m;c[s>>2]=0;u=m+4|0;c[u>>2]=0;J=m+8|0;c[J>>2]=0;K=n+0|0;L=K+72|0;do{a[K]=0;K=K+1|0}while((K|0)<(L|0));K=c[h+4>>2]|0;L=c[h>>2]|0;M=(K-L|0)/44|0;a:do{if((K|0)==(L|0)){N=33}else{O=n;P=c[e>>2]|0;Q=c[f>>2]|0;R=n+24|0;S=c[g>>2]|0;T=n+48|0;U=n+12|0;V=c[j>>2]|0;W=c[k>>2]|0;X=n+36|0;Y=c[l>>2]|0;Z=n+60|0;_=0;b:while(1){$=L+(_*44|0)+4|0;aa=L+(_*44|0)+28|0;ba=0;do{t=0;Ea(42,O|0,P+((c[(c[$>>2]|0)+(ba<<2)>>2]|0)*12|0)|0)|0;ca=t;t=0;if(ca&1){break b}t=0;La(49,o|0,Q+((c[(c[$>>2]|0)+(ba<<2)>>2]|0)*12|0)|0,O|0);ca=t;t=0;if(ca&1){break b}t=0;Ea(42,R|0,o|0)|0;ca=t;t=0;if(ca&1){break b}t=0;La(49,p|0,S+((c[(c[$>>2]|0)+(ba<<2)>>2]|0)*12|0)|0,O|0);ca=t;t=0;if(ca&1){break b}t=0;Ea(42,T|0,p|0)|0;ca=t;t=0;if(ca&1){break b}t=0;Ea(42,U|0,V+((c[(c[aa>>2]|0)+(ba<<2)>>2]|0)*12|0)|0)|0;ca=t;t=0;if(ca&1){break b}t=0;La(49,q|0,W+((c[(c[aa>>2]|0)+(ba<<2)>>2]|0)*12|0)|0,U|0);ca=t;t=0;if(ca&1){break b}t=0;Ea(42,X|0,q|0)|0;ca=t;t=0;if(ca&1){break b}t=0;La(49,r|0,Y+((c[(c[aa>>2]|0)+(ba<<2)>>2]|0)*12|0)|0,U|0);ca=t;t=0;if(ca&1){break b}t=0;Ea(42,Z|0,r|0)|0;ca=t;t=0;if(ca&1){break b}ca=c[u>>2]|0;if((ca|0)==(c[J>>2]|0)){t=0;na(126,m|0,n|0);da=t;t=0;if(da&1){break b}}else{if((ca|0)==0){ea=0}else{Sr(ca,n);ea=c[u>>2]|0}c[u>>2]=ea+72}ba=ba+1|0;}while((ba|0)<3);ba=_+1|0;if(ba>>>0<M>>>0){_=ba}else{N=33;break a}}_=Kb(-1,-1)|0;fa=_;ga=I}}while(0);if((N|0)==33){t=0;N=oa(101,4)|0;M=t;t=0;do{if(!(M&1)){ea=b+128|0;c[ea>>2]=N;t=0;ma(269,N|0);n=t;t=0;if(n&1){break}n=c[s>>2]|0;J=(c[u>>2]|0)-n|0;t=0;Oa(23,c[ea>>2]|0,J|0,n|0,35044);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,0,3,5126,72,0,0);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,1,3,5126,72,3,0);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,2,3,5126,72,6,0);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,3,3,5126,72,9,0);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,4,3,5126,72,12,0);n=t;t=0;if(n&1){break}t=0;Aa(41,c[ea>>2]|0,5,3,5126,72,15,0);n=t;t=0;if(n&1){break}n=c[ea>>2]|0;c[n+4>>2]=(J|0)/72|0;t=0;ma(270,n|0);n=t;t=0;if(n&1){break}Xr(m);Gf(l);Gf(k);Gf(j);Hf(h);Gf(g);Gf(f);Gf(e);i=d;return}}while(0);d=Kb(-1,-1)|0;fa=d;ga=I}Xr(m);Gf(l);G=fa;H=ga}Gf(k);E=G;F=H}Gf(j);C=E;D=F}Hf(h);A=C;B=D}Gf(g);y=A;z=B}Gf(f);v=y;w=z;x=e;Gf(x);Wb(v|0)}function Er(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,h=0.0;d=i;do{if((b|0)==1){e=a+124|0;f=+g[e>>2];if((c|0)==0){g[e>>2]=f+.1;break}else{g[e>>2]=f+-.1;break}}else if((b|0)==0){e=a+120|0;f=+g[e>>2];if((c|0)==0){g[e>>2]=f+.1;break}else{g[e>>2]=f+-.1;break}}}while(0);c=a+120|0;f=+g[c>>2];h=f>0.0?f:0.0;g[c>>2]=h<1.0?h:1.0;c=a+124|0;h=+g[c>>2];f=h>0.0?h:0.0;g[c>>2]=f<1.0?f:1.0;i=d;return}function Fr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Qb(0,0,b|0,d|0);Uf(c[a+92>>2]|0,45.0,+(b|0)/+(d|0),.05000000074505806,350.0);i=e;return}function Gr(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+480|0;e=d;f=d+64|0;h=d+128|0;j=d+192|0;l=d+208|0;m=d+224|0;n=d+336|0;o=d+352|0;p=d+464|0;wd(16640);Zi(e);Zi(f);dj(e,+(c[b>>2]|0));ej(f,+(c[b+4>>2]|0));cj(h,f,e);$i(b+28|0,h)|0;h=b+96|0;a[k]=a[h];a[k+1|0]=a[h+1|0];a[k+2|0]=a[h+2|0];a[k+3|0]=a[h+3|0];g[b+76>>2]=+g[k>>2];h=b+100|0;a[k]=a[h];a[k+1|0]=a[h+1|0];a[k+2|0]=a[h+2|0];a[k+3|0]=a[h+3|0];g[b+80>>2]=+g[k>>2];h=b+104|0;a[k]=a[h];a[k+1|0]=a[h+1|0];a[k+2|0]=a[h+2|0];a[k+3|0]=a[h+3|0];g[b+84>>2]=+g[k>>2];Hr(b);h=b+128|0;tr(c[h>>2]|0);yr(c[h>>2]|0);ur(c[h>>2]|0);h=b+136|0;Iq(c[h>>2]|0,1.0,1.0,1.0);e=j;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;t=0;na(109,m|0,16216);e=t;t=0;a:do{if(!(e&1)){t=0;f=Ea(43,m|0,b+120|0)|0;q=t;t=0;do{if(q&1){r=17}else{t=0;na(110,l|0,f|0);s=t;t=0;if(s&1){r=17;break}t=0;Ea(28,j|0,l|0)|0;s=t;t=0;if(s&1){s=Kb(-1,-1)|0;u=I;mt(l);v=u;w=s;break}mt(l);t=0;ma(263,m|0);s=t;t=0;if(s&1){break a}t=0;ra(1,c[h>>2]|0,10.0,18.0,j|0);s=t;t=0;if(s&1){break a}t=0;na(109,o|0,16256);s=t;t=0;if(s&1){break a}t=0;s=Ea(43,o|0,b+124|0)|0;u=t;t=0;do{if(u&1){r=20}else{t=0;na(110,n|0,s|0);x=t;t=0;if(x&1){r=20;break}t=0;Ea(28,j|0,n|0)|0;x=t;t=0;if(x&1){x=Kb(-1,-1)|0;y=I;mt(n);z=y;A=x;break}mt(n);t=0;ma(263,o|0);x=t;t=0;if(x&1){break a}t=0;ra(1,c[h>>2]|0,10.0,34.0,j|0);x=t;t=0;if(x&1){break a}x=c[h>>2]|0;t=0;La(18,p|0,16296,36);y=t;t=0;if(y&1){break a}t=0;ra(1,x|0,10.0,58.0,p|0);x=t;t=0;if(!(x&1)){mt(p);mt(j);i=d;return}x=Kb(-1,-1)|0;y=I;mt(p);B=y;C=x;mt(j);Wb(C|0)}}while(0);if((r|0)==20){s=Kb(-1,-1)|0;z=I;A=s}t=0;ma(263,o|0);s=t;t=0;if(s&1){D=Kb(-1,-1,0)|0;E=I;Xe(D)}else{B=z;C=A;mt(j);Wb(C|0)}}}while(0);if((r|0)==17){f=Kb(-1,-1)|0;v=I;w=f}t=0;ma(263,m|0);f=t;t=0;if(f&1){D=Kb(-1,-1,0)|0;E=I;Xe(D)}else{B=v;C=w;mt(j);Wb(C|0)}}}while(0);w=Kb(-1,-1)|0;B=I;C=w;mt(j);Wb(C|0)}function Hr(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0;b=i;i=i+584|0;d=b;e=b+64|0;f=b+128|0;h=b+168|0;j=b+232|0;k=b+296|0;l=b+336|0;m=b+352|0;n=b+416|0;o=b+432|0;p=b+496|0;q=b+512|0;r=b+552|0;s=b+568|0;u=$f()|0;Ro(so(u,15840)|0);Zi(d);Zi(e);ag(f);v=a+92|0;cj(h,a+28|0,(c[v>>2]|0)+120|0);$i(d,h)|0;cj(j,d,(c[v>>2]|0)+448|0);$i(e,j)|0;bg(k,d);j=f+0|0;v=k+0|0;k=j+36|0;do{c[j>>2]=c[v>>2];j=j+4|0;v=v+4|0}while((j|0)<(k|0));eg(f);jt(l,16336,3);t=0;na(127,m|0,e|0);e=t;t=0;do{if(!(e&1)){t=0;La(50,u|0,l|0,m|0);v=t;t=0;if(v&1){break}mt(l);jt(n,16344,2);t=0;na(127,o|0,d|0);v=t;t=0;do{if(!(v&1)){t=0;La(50,u|0,n|0,o|0);j=t;t=0;if(j&1){break}mt(n);jt(p,16352,12);t=0;na(128,q|0,f|0);j=t;t=0;do{if(!(j&1)){t=0;La(51,u|0,p|0,q|0);k=t;t=0;if(k&1){break}mt(p);jt(r,16368,7);t=0;Na(3,u|0,r|0,+(+g[a+120>>2]));k=t;t=0;if(k&1){k=Kb(-1,-1)|0;h=I;mt(r);w=h;x=k;Wb(x|0)}mt(r);jt(s,16376,7);t=0;Na(3,u|0,s|0,+(+g[a+124>>2]));k=t;t=0;if(!(k&1)){mt(s);i=b;return}k=Kb(-1,-1)|0;h=I;mt(s);w=h;x=k;Wb(x|0)}}while(0);j=Kb(-1,-1)|0;k=I;mt(p);w=k;x=j;Wb(x|0)}}while(0);v=Kb(-1,-1)|0;j=I;mt(n);w=j;x=v;Wb(x|0)}}while(0);n=Kb(-1,-1)|0;p=I;mt(l);w=p;x=n;Wb(x|0)}function Ir(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0;e=i;do{if((a[b+8|0]|0)!=0){if((a[d+8|0]&1)==0){break}f=d+12|0;h=b+12|0;j=(c[f>>2]|0)-(c[h>>2]|0)|0;l=d+16|0;m=b+16|0;n=b;c[n>>2]=~~(+(c[n>>2]|0)+ +((c[l>>2]|0)-(c[m>>2]|0)|0)*.5);n=b+4|0;c[n>>2]=~~(+(j|0)*.5+ +(c[n>>2]|0));c[h>>2]=c[f>>2];c[m>>2]=c[l>>2];Gr(b);i=e;return}}while(0);if((a[b+9|0]|0)==0){i=e;return}if((a[d+8|0]&4)==0){i=e;return}l=c[d+12>>2]|0;m=b+20|0;f=l-(c[m>>2]|0)|0;h=d+16|0;d=b+24|0;n=(c[h>>2]|0)-(c[d>>2]|0)|0;c[m>>2]=l;c[d>>2]=c[h>>2];h=b+96|0;a[k]=a[h];a[k+1|0]=a[h+1|0];a[k+2|0]=a[h+2|0];a[k+3|0]=a[h+3|0];g[k>>2]=+(f|0)*.009999999776482582+ +g[k>>2];a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+100|0;a[k]=a[h];a[k+1|0]=a[h+1|0];a[k+2|0]=a[h+2|0];a[k+3|0]=a[h+3|0];g[k>>2]=+g[k>>2]- +(n|0)*.009999999776482582;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];Gr(b);i=e;return}function Jr(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;f=a[d+8|0]|0;if(f<<24>>24==1){c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];a[b+8|0]=1;i=e;return}else if(f<<24>>24==3){c[b+20>>2]=c[d+12>>2];c[b+24>>2]=c[d+16>>2];a[b+9|0]=1;i=e;return}else{i=e;return}}function Kr(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=c+8|0;c=a[e]|0;if(c<<24>>24==1){a[b+8|0]=0;f=a[e]|0}else{f=c}if(!(f<<24>>24==3)){i=d;return}a[b+9|0]=0;i=d;return}function Lr(b,d){b=b|0;d=d|0;var e=0;e=i;switch(c[d>>2]|0){case 122:{a[b+133|0]=1;break};case 97:{Er(b,1,1);break};case 115:{Er(b,1,0);break};case 119:{Er(b,0,0);break};case 120:{a[b+134|0]=1;break};case 113:{Er(b,0,1);break};default:{}}i=e;return}function Mr(b){b=b|0;var d=0,e=0,f=0,h=0,j=0.0;d=i;e=b+133|0;do{if((a[e]|0)!=0){f=c[4096]|0;if((f|0)==0){h=b+120|0;j=+g[h>>2]+.2;g[h>>2]=j;if(!(j>1.1)){break}c[4096]=1;break}else if((f|0)==1){f=b+120|0;j=+g[f>>2]+-.2;g[f>>2]=j;if(!(j<=0.0)){break}g[f>>2]=0.0;c[4096]=0;a[e]=0;break}else{break}}}while(0);e=b+134|0;if((a[e]|0)==0){i=d;return}f=c[4098]|0;if((f|0)==0){h=b+124|0;j=+g[h>>2]+.2;g[h>>2]=j;if(!(j>1.1)){i=d;return}c[4098]=1;i=d;return}else if((f|0)==1){f=b+124|0;j=+g[f>>2]+-.20000000298023224;g[f>>2]=j;if(!(j<=0.0)){i=d;return}g[f>>2]=0.0;c[4098]=0;a[e]=0;i=d;return}else{i=d;return}}function Nr(b,c){b=b|0;c=+c;var d=0,e=0;d=i;if(c>0.0){e=b+104|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[k>>2]=+g[k>>2]+.05000000074505806;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return}if(!(c<0.0)){i=d;return}e=b+104|0;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[k>>2]=+g[k>>2]+-.05000000074505806;a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return}function Or(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=((c[a+4>>2]|0)-f|0)/72|0;h=g+1|0;if(h>>>0>59652323){Uy(0)}j=((c[a+8>>2]|0)-f|0)/72|0;if(j>>>0<29826161){f=j<<1;k=f>>>0<h>>>0?h:f}else{k=59652323}Rr(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;if((k|0)!=0){Sr(k,b)}c[g>>2]=k+72;Pr(a,e);Qr(e);i=d;return}function Pr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=c[g>>2]|0;j=b+4|0;k=c[j>>2]|0;if((h|0)==(f|0)){l=k;m=f}else{n=h;h=k;do{n=n+ -72|0;Sr(h+ -72|0,n);h=(c[j>>2]|0)+ -72|0;c[j>>2]=h;}while((n|0)!=(f|0));l=h;m=c[e>>2]|0}c[e>>2]=l;c[j>>2]=m;m=b+8|0;l=c[g>>2]|0;c[g>>2]=c[m>>2];c[m>>2]=l;l=a+8|0;a=b+12|0;m=c[l>>2]|0;c[l>>2]=c[a>>2];c[a>>2]=m;c[b>>2]=c[j>>2];i=d;return}function Qr(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~(((f+ -72+(0-d)|0)>>>0)/72|0)*72|0)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function Rr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b*72|0)|0}c[a>>2]=h;e=h+(d*72|0)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b*72|0);i=f;return}function Sr(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=b;f=c;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+4|0;f=c+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+8|0;f=c+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+12|0;f=c+12|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+16|0;f=c+16|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+20|0;f=c+20|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+24|0;f=c+24|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+28|0;f=c+28|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+32|0;f=c+32|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+36|0;f=c+36|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+40|0;f=c+40|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+44|0;f=c+44|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+48|0;f=c+48|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+52|0;f=c+52|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+56|0;f=c+56|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+60|0;f=c+60|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+64|0;f=c+64|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];e=b+68|0;b=c+68|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];g[k>>2]=+g[k>>2];a[e]=a[k];a[e+1|0]=a[k+1|0];a[e+2|0]=a[k+2|0];a[e+3|0]=a[k+3|0];i=d;return}function Tr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=(c[a+4>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823){Uy(0)}j=(c[a+8>>2]|0)-f|0;if(j>>2>>>0<536870911){f=j>>1;k=f>>>0<h>>>0?h:f}else{k=1073741823}Wr(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;if((k|0)!=0){c[k>>2]=c[b>>2]}c[g>>2]=k+4;Ur(a,e);Vr(e);i=d;return}function Ur(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=b+4|0;j=(c[g>>2]|0)-f|0;k=(c[h>>2]|0)+(0-(j>>2)<<2)|0;c[h>>2]=k;qC(k|0,f|0,j|0)|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=b+8|0;e=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=e;e=a+8|0;a=b+12|0;j=c[e>>2]|0;c[e>>2]=c[a>>2];c[a>>2]=j;c[b>>2]=c[h>>2];i=d;return}function Vr(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function Wr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b<<2)|0}c[a>>2]=h;e=h+(d<<2)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b<<2);i=f;return}function Xr(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~(((a+ -72+(0-d)|0)>>>0)/72|0)*72|0)}_B(d);i=b;return}function Yr(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}_B(d);i=b;return}function Zr(a,b,d){a=a|0;b=b|0;d=d|0;d=i;Vb(a|0,b|0);Fr(c[4100]|0,a,b);i=d;return}function _r(a,b){a=a|0;b=b|0;b=i;Nr(c[4100]|0,+(a|0));i=b;return}function $r(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0;a=i;i=i+48|0;b=a;do{if((td(b|0)|0)!=0){d=b;e=b;f=b;g=0;a:while(1){while(1){h=c[d>>2]|0;if((h|0)==768){break}else if((h|0)==1025){Jr(c[4100]|0,f)}else if((h|0)==1026){Kr(c[4100]|0,f)}else if((h|0)==1024){Ir(c[4100]|0,e)}if((td(b|0)|0)==0){j=10;break a}}if((td(b|0)|0)==0){break}else{g=1}}if((j|0)==10){if(!g){break}}yc();Lr(c[4100]|0,b+16|0)}}while(0);Mr(c[4100]|0);Gr(c[4100]|0);Od();i=a;return}function as(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;b=i;a=md(16408,0)|0;d=md(16448,0)|0;if((Ec(32)|0)!=0){e=Ye(16720,16480)|0;Ye(e,cb()|0)|0;f=1;i=b;return f|0}Eb(5,1)|0;if((lc(a|0,d|0,16,83886080)|0)==0){e=Ye(16720,16512)|0;Ye(e,cb()|0)|0;f=1;i=b;return f|0}ac(2929);e=YB(140)|0;g=e;t=0;ma(275,g|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;_B(e);Wb(h|0)}c[4100]=g;Fr(g,a,d);ld(0,52);Gb(0,129);Jd(4,0,1);Jc();f=0;i=b;return f|0}function bs(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;f=b;b=c;a:while(1){c=b;g=b+ -1|0;h=f;b:while(1){j=h;k=c-j|0;switch(k|0){case 3:{l=6;break a;break};case 4:{l=14;break a;break};case 1:case 0:{l=84;break a;break};case 5:{l=26;break a;break};case 2:{l=4;break a;break};default:{}}if((k|0)<31){l=28;break a}m=(k|0)/2|0;n=h+m|0;do{if((k|0)>999){o=(k|0)/4|0;p=dq(h,h+o|0,n,h+(o+m)|0,g,0)|0}else{o=a[n]|0;q=a[h]|0;r=a[g]|0;s=r<<24>>24<o<<24>>24;if(!(o<<24>>24<q<<24>>24)){if(!s){p=0;break}a[n]=r;a[g]=o;t=a[n]|0;u=a[h]|0;if(!(t<<24>>24<u<<24>>24)){p=1;break}a[h]=t;a[n]=u;p=2;break}if(s){a[h]=r;a[g]=q;p=1;break}a[h]=o;a[n]=q;o=a[g]|0;if(!(o<<24>>24<q<<24>>24)){p=1;break}a[n]=o;a[g]=q;p=2}}while(0);m=a[h]|0;k=a[n]|0;do{if(m<<24>>24<k<<24>>24){v=g;w=p}else{q=g;while(1){x=q+ -1|0;if((h|0)==(x|0)){break}y=a[x]|0;if(y<<24>>24<k<<24>>24){l=67;break}else{q=x}}if((l|0)==67){l=0;a[h]=y;a[x]=m;v=x;w=p+1|0;break}q=h+1|0;o=a[g]|0;if(m<<24>>24<o<<24>>24){z=q}else{if((q|0)==(g|0)){l=84;break a}else{A=q}while(1){B=a[A]|0;C=A+1|0;if(m<<24>>24<B<<24>>24){break}if((C|0)==(g|0)){l=84;break a}else{A=C}}a[A]=o;a[g]=B;z=C}if((z|0)==(g|0)){l=84;break a}else{D=z;E=g}while(1){q=a[h]|0;r=D;while(1){F=a[r]|0;G=r+1|0;if(q<<24>>24<F<<24>>24){H=E;break}else{r=G}}do{H=H+ -1|0;I=a[H]|0;}while(q<<24>>24<I<<24>>24);if(!(r>>>0<H>>>0)){h=r;continue b}a[r]=I;a[H]=F;D=G;E=H}}}while(0);m=h+1|0;c:do{if(m>>>0<v>>>0){k=m;o=v;q=n;s=w;while(1){u=a[q]|0;t=k;while(1){J=a[t]|0;K=t+1|0;if(J<<24>>24<u<<24>>24){t=K}else{L=o;break}}do{L=L+ -1|0;M=a[L]|0;}while(!(M<<24>>24<u<<24>>24));if(t>>>0>L>>>0){N=t;O=q;P=s;break c}a[t]=M;a[L]=J;k=K;o=L;q=(q|0)==(t|0)?L:q;s=s+1|0}}else{N=m;O=n;P=w}}while(0);do{if((N|0)==(O|0)){Q=P}else{n=a[O]|0;m=a[N]|0;if(!(n<<24>>24<m<<24>>24)){Q=P;break}a[N]=n;a[O]=m;Q=P+1|0}}while(0);if((Q|0)==0){R=cs(h,N,0)|0;m=N+1|0;if(cs(m,b,0)|0){l=79;break}if(R){h=m;continue}}m=N;if((m-j|0)>=(c-m|0)){l=83;break}bs(h,N,d);h=N+1|0}if((l|0)==79){l=0;if(R){l=84;break}else{f=h;b=N;continue}}else if((l|0)==83){l=0;bs(N+1|0,b,d);f=h;b=N;continue}}if((l|0)==4){N=a[g]|0;f=a[h]|0;if(!(N<<24>>24<f<<24>>24)){i=e;return}a[h]=N;a[g]=f;i=e;return}else if((l|0)==6){f=h+1|0;N=a[f]|0;d=a[h]|0;R=a[g]|0;Q=R<<24>>24<N<<24>>24;if(!(N<<24>>24<d<<24>>24)){if(!Q){i=e;return}a[f]=R;a[g]=N;P=a[f]|0;O=a[h]|0;if(!(P<<24>>24<O<<24>>24)){i=e;return}a[h]=P;a[f]=O;i=e;return}if(Q){a[h]=R;a[g]=d;i=e;return}a[h]=N;a[f]=d;N=a[g]|0;if(!(N<<24>>24<d<<24>>24)){i=e;return}a[f]=N;a[g]=d;i=e;return}else if((l|0)==14){d=h+1|0;N=h+2|0;f=a[d]|0;R=a[h]|0;Q=a[N]|0;O=Q<<24>>24<f<<24>>24;do{if(f<<24>>24<R<<24>>24){if(O){a[h]=Q;a[N]=R;S=R;break}a[h]=f;a[d]=R;if(!(Q<<24>>24<R<<24>>24)){S=Q;break}a[d]=Q;a[N]=R;S=R}else{if(!O){S=Q;break}a[d]=Q;a[N]=f;if(!(Q<<24>>24<R<<24>>24)){S=f;break}a[h]=Q;a[d]=R;S=f}}while(0);f=a[g]|0;if(!(f<<24>>24<S<<24>>24)){i=e;return}a[N]=f;a[g]=S;S=a[N]|0;f=a[d]|0;if(!(S<<24>>24<f<<24>>24)){i=e;return}a[d]=S;a[N]=f;f=a[h]|0;if(!(S<<24>>24<f<<24>>24)){i=e;return}a[h]=S;a[d]=f;i=e;return}else if((l|0)==26){dq(h,h+1|0,h+2|0,h+3|0,g,0)|0;i=e;return}else if((l|0)==28){g=h+2|0;f=h+1|0;d=a[f]|0;S=a[h]|0;N=a[g]|0;R=N<<24>>24<d<<24>>24;do{if(d<<24>>24<S<<24>>24){if(R){a[h]=N;a[g]=S;T=S;break}a[h]=d;a[f]=S;if(!(N<<24>>24<S<<24>>24)){T=N;break}a[f]=N;a[g]=S;T=S}else{if(!R){T=N;break}a[f]=N;a[g]=d;if(!(N<<24>>24<S<<24>>24)){T=d;break}a[h]=N;a[f]=S;T=d}}while(0);d=h+3|0;if((d|0)==(b|0)){i=e;return}else{U=T;V=d;W=g}while(1){g=a[V]|0;if(g<<24>>24<U<<24>>24){d=U;T=V;S=W;while(1){a[T]=d;if((S|0)==(h|0)){X=h;break}f=S+ -1|0;N=a[f]|0;if(g<<24>>24<N<<24>>24){R=S;d=N;S=f;T=R}else{X=S;break}}a[X]=g}S=V+1|0;if((S|0)==(b|0)){break}T=V;U=a[V]|0;V=S;W=T}i=e;return}else if((l|0)==84){i=e;return}}function cs(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;switch(c-b|0){case 3:{e=b+1|0;f=c+ -1|0;g=a[e]|0;h=a[b]|0;j=a[f]|0;k=j<<24>>24<g<<24>>24;if(!(g<<24>>24<h<<24>>24)){if(!k){l=1;i=d;return l|0}a[e]=j;a[f]=g;m=a[e]|0;n=a[b]|0;if(!(m<<24>>24<n<<24>>24)){l=1;i=d;return l|0}a[b]=m;a[e]=n;l=1;i=d;return l|0}if(k){a[b]=j;a[f]=h;l=1;i=d;return l|0}a[b]=g;a[e]=h;g=a[f]|0;if(!(g<<24>>24<h<<24>>24)){l=1;i=d;return l|0}a[e]=g;a[f]=h;l=1;i=d;return l|0};case 4:{h=b+1|0;f=b+2|0;g=c+ -1|0;e=a[h]|0;j=a[b]|0;k=a[f]|0;n=k<<24>>24<e<<24>>24;do{if(e<<24>>24<j<<24>>24){if(n){a[b]=k;a[f]=j;o=j;break}a[b]=e;a[h]=j;if(!(k<<24>>24<j<<24>>24)){o=k;break}a[h]=k;a[f]=j;o=j}else{if(!n){o=k;break}a[h]=k;a[f]=e;if(!(k<<24>>24<j<<24>>24)){o=e;break}a[b]=k;a[h]=j;o=e}}while(0);e=a[g]|0;if(!(e<<24>>24<o<<24>>24)){l=1;i=d;return l|0}a[f]=e;a[g]=o;o=a[f]|0;g=a[h]|0;if(!(o<<24>>24<g<<24>>24)){l=1;i=d;return l|0}a[h]=o;a[f]=g;g=a[b]|0;if(!(o<<24>>24<g<<24>>24)){l=1;i=d;return l|0}a[b]=o;a[h]=g;l=1;i=d;return l|0};case 2:{g=c+ -1|0;h=a[g]|0;o=a[b]|0;if(!(h<<24>>24<o<<24>>24)){l=1;i=d;return l|0}a[b]=h;a[g]=o;l=1;i=d;return l|0};case 1:case 0:{l=1;i=d;return l|0};case 5:{dq(b,b+1|0,b+2|0,b+3|0,c+ -1|0,0)|0;l=1;i=d;return l|0};default:{o=b+2|0;g=b+1|0;h=a[g]|0;f=a[b]|0;e=a[o]|0;j=e<<24>>24<h<<24>>24;do{if(h<<24>>24<f<<24>>24){if(j){a[b]=e;a[o]=f;p=f;break}a[b]=h;a[g]=f;if(!(e<<24>>24<f<<24>>24)){p=e;break}a[g]=e;a[o]=f;p=f}else{if(!j){p=e;break}a[g]=e;a[o]=h;if(!(e<<24>>24<f<<24>>24)){p=h;break}a[b]=e;a[g]=f;p=h}}while(0);h=b+3|0;if((h|0)==(c|0)){l=1;i=d;return l|0}else{q=p;r=0;s=h;t=o}while(1){o=a[s]|0;if(o<<24>>24<q<<24>>24){h=q;p=s;f=t;while(1){a[p]=h;if((f|0)==(b|0)){u=b;break}g=f+ -1|0;e=a[g]|0;if(o<<24>>24<e<<24>>24){j=f;h=e;f=g;p=j}else{u=f;break}}a[u]=o;f=r+1|0;if((f|0)==8){break}else{v=f}}else{v=r}f=s+1|0;if((f|0)==(c|0)){l=1;w=41;break}p=s;q=a[s]|0;r=v;s=f;t=p}if((w|0)==41){i=d;return l|0}l=(s+1|0)==(c|0);i=d;return l|0}}return 0}function ds(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b;e=b+8|0;f=b+16|0;g=b+24|0;h=c[r>>2]|0;zs(17256,h,17312);c[4136]=18764;c[16552>>2]=18784;c[16548>>2]=0;t=0;na(54,16552|0,17256);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;Lt(16552|0);Wb(j|0)}c[16624>>2]=0;c[16628>>2]=-1;j=c[s>>2]|0;c[4340]=18632;$y(17364|0);c[17368>>2]=0;c[17372>>2]=0;c[17376>>2]=0;c[17380>>2]=0;c[17384>>2]=0;c[17388>>2]=0;c[4340]=17872;c[17392>>2]=j;az(g,17364|0);t=0;k=Ea(20,g|0,21432)|0;l=t;t=0;if(l&1){l=Kb(-1,-1)|0;bz(g);c[4340]=18632;bz(17364|0);Wb(l|0)}l=k;bz(g);c[17396>>2]=l;c[17400>>2]=17320;g=($d[c[(c[k>>2]|0)+28>>2]&127](l)|0)&1;a[17404|0]=g;c[4158]=18844;c[16636>>2]=18864;t=0;na(54,16636|0,17360);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;Lt(16636|0);Wb(g|0)}c[16708>>2]=0;c[16712>>2]=-1;g=c[q>>2]|0;c[4352]=18632;$y(17412|0);c[17416>>2]=0;c[17420>>2]=0;c[17424>>2]=0;c[17428>>2]=0;c[17432>>2]=0;c[17436>>2]=0;c[4352]=17872;c[17440>>2]=g;az(f,17412|0);t=0;l=Ea(20,f|0,21432)|0;k=t;t=0;if(k&1){k=Kb(-1,-1)|0;bz(f);c[4352]=18632;bz(17412|0);Wb(k|0)}k=l;bz(f);c[17444>>2]=k;c[17448>>2]=17328;f=($d[c[(c[l>>2]|0)+28>>2]&127](k)|0)&1;a[17452|0]=f;c[4180]=18844;c[16724>>2]=18864;t=0;na(54,16724|0,17408);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;Lt(16724|0);Wb(f|0)}c[16796>>2]=0;c[16800>>2]=-1;f=c[(c[(c[4180]|0)+ -12>>2]|0)+16744>>2]|0;c[4202]=18844;c[16812>>2]=18864;t=0;na(54,16812|0,f|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;Lt(16812|0);Wb(f|0)}c[16884>>2]=0;c[16888>>2]=-1;c[(c[(c[4136]|0)+ -12>>2]|0)+16616>>2]=16632;f=(c[(c[4180]|0)+ -12>>2]|0)+16724|0;c[f>>2]=c[f>>2]|8192;c[(c[(c[4180]|0)+ -12>>2]|0)+16792>>2]=16632;ls(17456,h,17336|0);c[4224]=18804;c[16904>>2]=18824;c[16900>>2]=0;t=0;na(54,16904|0,17456);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;Lt(16904|0);Wb(h|0)}c[16976>>2]=0;c[16980>>2]=-1;c[4378]=18696;$y(17516|0);c[17520>>2]=0;c[17524>>2]=0;c[17528>>2]=0;c[17532>>2]=0;c[17536>>2]=0;c[17540>>2]=0;c[4378]=17616;c[17544>>2]=j;az(e,17516|0);t=0;j=Ea(20,e|0,21440)|0;h=t;t=0;if(h&1){h=Kb(-1,-1)|0;bz(e);c[4378]=18696;bz(17516|0);Wb(h|0)}h=j;bz(e);c[17548>>2]=h;c[17552>>2]=17344;e=($d[c[(c[j>>2]|0)+28>>2]&127](h)|0)&1;a[17556|0]=e;c[4246]=18884;c[16988>>2]=18904;t=0;na(54,16988|0,17512);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;Lt(16988|0);Wb(e|0)}c[17060>>2]=0;c[17064>>2]=-1;c[4390]=18696;$y(17564|0);c[17568>>2]=0;c[17572>>2]=0;c[17576>>2]=0;c[17580>>2]=0;c[17584>>2]=0;c[17588>>2]=0;c[4390]=17616;c[17592>>2]=g;az(d,17564|0);t=0;g=Ea(20,d|0,21440)|0;e=t;t=0;if(e&1){e=Kb(-1,-1)|0;bz(d);c[4390]=18696;bz(17564|0);Wb(e|0)}e=g;bz(d);c[17596>>2]=e;c[17600>>2]=17352;d=($d[c[(c[g>>2]|0)+28>>2]&127](e)|0)&1;a[17604|0]=d;c[4268]=18884;c[17076>>2]=18904;t=0;na(54,17076|0,17560);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;Lt(17076|0);Wb(d|0)}c[17148>>2]=0;c[17152>>2]=-1;d=c[(c[(c[4268]|0)+ -12>>2]|0)+17096>>2]|0;c[4290]=18884;c[17164>>2]=18904;t=0;na(54,17164|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;Lt(17164|0);Wb(d|0)}else{c[17236>>2]=0;c[17240>>2]=-1;c[(c[(c[4224]|0)+ -12>>2]|0)+16968>>2]=16984;d=(c[(c[4268]|0)+ -12>>2]|0)+17076|0;c[d>>2]=c[d>>2]|8192;c[(c[(c[4268]|0)+ -12>>2]|0)+17144>>2]=16984;i=b;return}}function es(a){a=a|0;var b=0,c=0;a=i;t=0;oa(102,16632)|0;b=t;t=0;do{if(!(b&1)){t=0;oa(102,16808)|0;c=t;t=0;if(c&1){break}t=0;oa(103,16984)|0;c=t;t=0;if(c&1){break}t=0;oa(103,17160)|0;c=t;t=0;if(c&1){break}i=a;return}}while(0);a=Kb(-1,-1,0)|0;Xe(a)}function fs(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);i=b;return}function gs(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);_B(a);i=b;return}function hs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;$d[c[(c[b>>2]|0)+24>>2]&127](b)|0;f=ez(d,21440)|0;d=f;c[b+36>>2]=d;g=($d[c[(c[f>>2]|0)+28>>2]&127](d)|0)&1;a[b+44|0]=g;i=e;return}function is(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b;e=b+8|0;f=a+36|0;g=a+40|0;h=d;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=qe[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((mc(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Hd(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function js(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;if((a[b+44|0]|0)!=0){g=mc(d|0,4,e|0,c[b+32>>2]|0)|0;i=f;return g|0}h=b;if((e|0)>0){j=d;k=0}else{g=0;i=f;return g|0}while(1){if((pe[c[(c[h>>2]|0)+52>>2]&63](b,c[j>>2]|0)|0)==-1){g=k;l=6;break}d=k+1|0;if((d|0)<(e|0)){j=j+4|0;k=d}else{g=d;l=6;break}}if((l|0)==6){i=f;return g|0}return 0}function ks(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((mc(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=se[c[(c[u>>2]|0)+12>>2]&15](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((mc(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((mc(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function ls(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+8|0;g=f;h=b;c[h>>2]=18696;j=b+4|0;$y(j);k=b+8|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[h>>2]=17728;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;az(g,j);t=0;e=Ea(20,g|0,21440)|0;d=t;t=0;if(d&1){l=Kb(-1,-1)|0;m=I;bz(g);c[h>>2]=18696;bz(j);Wb(l|0)}d=e;k=b+36|0;c[k>>2]=d;n=$d[c[(c[e>>2]|0)+24>>2]&127](d)|0;d=b+44|0;c[d>>2]=n;n=c[k>>2]|0;k=($d[c[(c[n>>2]|0)+28>>2]&127](n)|0)&1;a[b+53|0]=k;if((c[d>>2]|0)<=8){bz(g);i=f;return}t=0;ma(276,17824);d=t;t=0;if(d&1){l=Kb(-1,-1)|0;m=I;bz(g);c[h>>2]=18696;bz(j);Wb(l|0)}else{bz(g);i=f;return}}function ms(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);i=b;return}function ns(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);_B(a);i=b;return}function os(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=ez(d,21440)|0;d=f;g=b+36|0;c[g>>2]=d;h=$d[c[(c[f>>2]|0)+24>>2]&127](d)|0;d=b+44|0;c[d>>2]=h;h=c[g>>2]|0;g=($d[c[(c[h>>2]|0)+28>>2]&127](h)|0)&1;a[b+53|0]=g;if((c[d>>2]|0)<=8){i=e;return}ly(17824);i=e;return}function ps(a){a=a|0;var b=0,c=0;b=i;c=ss(a,0)|0;i=b;return c|0}function qs(a){a=a|0;var b=0,c=0;b=i;c=ss(a,1)|0;i=b;return c|0}function rs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f;q=se[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==1|(q|0)==2){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o+ -1|0;c[g>>2]=r;if((nd(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function ss(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=Xc(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=se[c[(c[t>>2]|0)+16>>2]&15](t,s,o,w,h,g,p,j)|0;if((x|0)==2){n=-1;y=22;break}else if((x|0)==3){y=14;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=Xc(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b+ -1|0;if((nd(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function ts(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);i=b;return}function us(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);_B(a);i=b;return}function vs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;$d[c[(c[b>>2]|0)+24>>2]&127](b)|0;f=ez(d,21432)|0;d=f;c[b+36>>2]=d;g=($d[c[(c[f>>2]|0)+28>>2]&127](d)|0)&1;a[b+44|0]=g;i=e;return}function ws(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b;e=b+8|0;f=a+36|0;g=a+40|0;h=d;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=qe[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((mc(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Hd(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function xs(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((a[b+44|0]|0)!=0){h=mc(e|0,1,f|0,c[b+32>>2]|0)|0;i=g;return h|0}j=b;if((f|0)>0){k=e;l=0}else{h=0;i=g;return h|0}while(1){if((pe[c[(c[j>>2]|0)+52>>2]&63](b,d[k]|0)|0)==-1){h=l;m=6;break}e=l+1|0;if((e|0)<(f|0)){k=k+1|0;l=e}else{h=e;m=6;break}}if((m|0)==6){i=g;return h|0}return 0}function ys(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((mc(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=se[c[(c[u>>2]|0)+12>>2]&15](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((mc(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((mc(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function zs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+8|0;g=f;h=b;c[h>>2]=18632;j=b+4|0;$y(j);k=b+8|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[h>>2]=17984;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;az(g,j);t=0;e=Ea(20,g|0,21432)|0;d=t;t=0;if(d&1){l=Kb(-1,-1)|0;m=I;bz(g);c[h>>2]=18632;bz(j);Wb(l|0)}d=e;k=b+36|0;c[k>>2]=d;n=$d[c[(c[e>>2]|0)+24>>2]&127](d)|0;d=b+44|0;c[d>>2]=n;n=c[k>>2]|0;k=($d[c[(c[n>>2]|0)+28>>2]&127](n)|0)&1;a[b+53|0]=k;if((c[d>>2]|0)<=8){bz(g);i=f;return}t=0;ma(276,17824);d=t;t=0;if(d&1){l=Kb(-1,-1)|0;m=I;bz(g);c[h>>2]=18632;bz(j);Wb(l|0)}else{bz(g);i=f;return}}function As(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);i=b;return}function Bs(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);_B(a);i=b;return}function Cs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=ez(d,21432)|0;d=f;g=b+36|0;c[g>>2]=d;h=$d[c[(c[f>>2]|0)+24>>2]&127](d)|0;d=b+44|0;c[d>>2]=h;h=c[g>>2]|0;g=($d[c[(c[h>>2]|0)+28>>2]&127](h)|0)&1;a[b+53|0]=g;if((c[d>>2]|0)<=8){i=e;return}ly(17824);i=e;return}function Ds(a){a=a|0;var b=0,c=0;b=i;c=Gs(a,0)|0;i=b;return c|0}function Es(a){a=a|0;var b=0,c=0;b=i;c=Gs(a,1)|0;i=b;return c|0}function Fs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f;q=se[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==1|(q|0)==2){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o+ -1|0;c[g>>2]=r;if((nd(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Gs(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=Xc(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=se[c[(c[u>>2]|0)+16>>2]&15](u,t,p,x,j,h,q,k)|0;if((y|0)==2){o=-1;z=23;break}else if((y|0)==3){z=14;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=Xc(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k+ -1|0;if((nd(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function Hs(){var a=0;a=i;ds(0);Td(277,17248,p|0)|0;i=a;return}function Is(a){a=a|0;i=i;return}function Js(a){a=a|0;var b=0;b=a+4|0;c[b>>2]=(c[b>>2]|0)+1;i=i;return}function Ks(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a+4|0;e=c[d>>2]|0;c[d>>2]=e+ -1;if((e|0)!=0){f=0;i=b;return f|0}Zd[c[(c[a>>2]|0)+8>>2]&511](a);f=1;i=b;return f|0}function Ls(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a>>2]=18128;e=sC(b|0)|0;t=0;f=oa(104,e+13|0)|0;g=t;t=0;if(g&1){g=Kb(-1,-1)|0;ub(a|0);Wb(g|0)}else{c[f+4>>2]=e;c[f>>2]=e;g=f+12|0;c[a+4>>2]=g;c[f+8>>2]=0;qC(g|0,b|0,e+1|0)|0;i=d;return}}function Ms(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=18128;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){$B((c[d>>2]|0)+ -12|0)}ub(a|0);_B(a);i=b;return}function Ns(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;c[a>>2]=18128;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)>=0){g=a;ub(g|0);i=b;return}$B((c[d>>2]|0)+ -12|0);g=a;ub(g|0);i=b;return}function Os(a){a=a|0;i=i;return c[a+4>>2]|0}function Ps(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;c[b>>2]=18152;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=sC(f|0)|0;t=0;g=oa(104,d+13|0)|0;h=t;t=0;if(h&1){h=Kb(-1,-1)|0;ub(b|0);Wb(h|0)}else{c[g+4>>2]=d;c[g>>2]=d;h=g+12|0;c[b+4>>2]=h;c[g+8>>2]=0;qC(h|0,f|0,d+1|0)|0;i=e;return}}function Qs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a>>2]=18152;e=sC(b|0)|0;t=0;f=oa(104,e+13|0)|0;g=t;t=0;if(g&1){g=Kb(-1,-1)|0;ub(a|0);Wb(g|0)}else{c[f+4>>2]=e;c[f>>2]=e;g=f+12|0;c[a+4>>2]=g;c[f+8>>2]=0;qC(g|0,b|0,e+1|0)|0;i=d;return}}function Rs(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=18152;d=c[b+4>>2]|0;c[a+4>>2]=d;a=d+ -4|0;c[a>>2]=(c[a>>2]|0)+1;i=i;return}function Ss(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=18152;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){$B((c[d>>2]|0)+ -12|0)}ub(a|0);_B(a);i=b;return}function Ts(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;c[a>>2]=18152;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)>=0){g=a;ub(g|0);i=b;return}$B((c[d>>2]|0)+ -12|0);g=a;ub(g|0);i=b;return}function Us(a){a=a|0;i=i;return c[a+4>>2]|0}function Vs(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=18128;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){$B((c[d>>2]|0)+ -12|0)}ub(a|0);_B(a);i=b;return}function Ws(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=18128;d=a+4|0;e=(c[d>>2]|0)+ -4|0;f=c[e>>2]|0;c[e>>2]=f+ -1;if((f+ -1|0)<0){$B((c[d>>2]|0)+ -12|0)}ub(a|0);_B(a);i=b;return}function Xs(a){a=a|0;i=i;return}function Ys(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;i=i;return}function Zs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e;we[c[(c[a>>2]|0)+12>>2]&63](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function _s(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((c[b+4>>2]|0)!=(a|0)){f=0;i=e;return f|0}f=(c[b>>2]|0)==(d|0);i=e;return f|0}function $s(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;d=i;f=Rd(e|0)|0;e=sC(f|0)|0;if(e>>>0>4294967279){ft(0)}if(e>>>0<11){a[b]=e<<1;g=b+1|0;qC(g|0,f|0,e|0)|0;h=g+e|0;a[h]=0;i=d;return}else{j=e+16&-16;k=YB(j)|0;c[b+8>>2]=k;c[b>>2]=j|1;c[b+4>>2]=e;g=k;qC(g|0,f|0,e|0)|0;h=g+e|0;a[h]=0;i=d;return}}function at(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f;h=d;j=c[h>>2]|0;k=e;do{if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{vt(e,18368,2)|0;n=c[h>>2]|0}l=c[d+4>>2]|0;we[c[(c[l>>2]|0)+24>>2]&63](g,l,n);l=g;o=a[l]|0;if((o&1)==0){p=g+1|0;q=(o&255)>>>1}else{p=c[g+8>>2]|0;q=c[g+4>>2]|0}t=0;sa(26,e|0,p|0,q|0)|0;o=t;t=0;if(!(o&1)){if((a[l]&1)==0){break}_B(c[g+8>>2]|0);break}o=Kb(-1,-1)|0;if((a[l]&1)==0){Wb(o|0)}_B(c[g+8>>2]|0);Wb(o|0)}}while(0);g=b;c[g+0>>2]=c[k+0>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;i=f;return}function bt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+32|0;g=f;h=f+16|0;j=sC(e|0)|0;if(j>>>0>4294967279){ft(0)}if(j>>>0<11){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=YB(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}qC(k|0,e|0,j|0)|0;a[k+j|0]=0;t=0;La(53,g|0,d|0,h|0);j=t;t=0;do{if(j&1){k=Kb(-1,-1)|0;n=I;o=k}else{t=0;na(130,b|0,g|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;e=I;if((a[g]&1)==0){n=e;o=k;break}_B(c[g+8>>2]|0);n=e;o=k;break}if(!((a[g]&1)==0)){_B(c[g+8>>2]|0)}if((a[h]&1)==0){p=b;c[p>>2]=18384;q=b+8|0;r=d;s=q;u=r;v=u;w=c[v>>2]|0;x=u+4|0;y=x;z=c[y>>2]|0;A=s;B=A;c[B>>2]=w;C=A+4|0;D=C;c[D>>2]=z;i=f;return}_B(c[h+8>>2]|0);p=b;c[p>>2]=18384;q=b+8|0;r=d;s=q;u=r;v=u;w=c[v>>2]|0;x=u+4|0;y=x;z=c[y>>2]|0;A=s;B=A;c[B>>2]=w;C=A+4|0;D=C;c[D>>2]=z;i=f;return}}while(0);if((a[h]&1)==0){Wb(o|0)}_B(c[h+8>>2]|0);Wb(o|0)}function ct(a){a=a|0;var b=0;b=i;Ts(a);_B(a);i=b;return}function dt(a){a=a|0;var b=0;b=i;Ts(a);i=b;return}function et(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;oc(18520)|0;if((c[a>>2]|0)==1){do{gd(18544,18520)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){Ed(18520)|0;i=e;return}c[a>>2]=1;t=0;oa(105,18520)|0;f=t;t=0;do{if(!(f&1)){t=0;ma(d|0,b|0);g=t;t=0;if(g&1){break}t=0;oa(106,18520)|0;g=t;t=0;if(g&1){break}c[a>>2]=-1;t=0;oa(105,18520)|0;g=t;t=0;if(g&1){break}t=0;oa(107,18544)|0;g=t;t=0;if(g&1){break}i=e;return}}while(0);e=Kb(-1,-1,0)|0;hb(e|0)|0;t=0;oa(106,18520)|0;e=t;t=0;do{if(!(e&1)){c[a>>2]=0;t=0;oa(105,18520)|0;b=t;t=0;if(b&1){break}t=0;oa(107,18544)|0;b=t;t=0;if(b&1){break}t=0;Ma(3);b=t;t=0;if(b&1){break}}}while(0);a=Kb(-1,-1)|0;t=0;Ma(2);e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{Wb(a|0)}}function ft(a){a=a|0;var b=0;a=xc(8)|0;t=0;na(131,a|0,18592);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Jb(a|0);Wb(b|0)}else{c[a>>2]=18208;Md(a|0,18248,131)}}function gt(a){a=a|0;var b=0;a=xc(8)|0;t=0;na(131,a|0,18592);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Jb(a|0);Wb(b|0)}else{c[a>>2]=18272;Md(a|0,18312,131)}}function ht(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=d;if((a[f]&1)==0){g=b;c[g+0>>2]=c[f+0>>2];c[g+4>>2]=c[f+4>>2];c[g+8>>2]=c[f+8>>2];i=e;return}f=c[d+8>>2]|0;g=c[d+4>>2]|0;if(g>>>0>4294967279){ft(0)}if(g>>>0<11){a[b]=g<<1;h=b+1|0}else{d=g+16&-16;j=YB(d)|0;c[b+8>>2]=j;c[b>>2]=d|1;c[b+4>>2]=g;h=j}qC(h|0,f|0,g|0)|0;a[h+g|0]=0;i=e;return}function it(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=d;if((a[f]&1)==0){g=b;c[g+0>>2]=c[f+0>>2];c[g+4>>2]=c[f+4>>2];c[g+8>>2]=c[f+8>>2];i=e;return}f=c[d+8>>2]|0;g=c[d+4>>2]|0;if(g>>>0>4294967279){ft(0)}if(g>>>0<11){a[b]=g<<1;h=b+1|0}else{d=g+16&-16;j=YB(d)|0;c[b+8>>2]=j;c[b>>2]=d|1;c[b+4>>2]=g;h=j}qC(h|0,f|0,g|0)|0;a[h+g|0]=0;i=e;return}function jt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(e>>>0>4294967279){ft(0)}if(e>>>0<11){a[b]=e<<1;g=b+1|0}else{h=e+16&-16;j=YB(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=e;g=j}qC(g|0,d|0,e|0)|0;a[g+e|0]=0;i=f;return}function kt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if(d>>>0>4294967279){ft(0)}if(d>>>0<11){a[b]=d<<1;g=b+1|0}else{h=d+16&-16;j=YB(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=d;g=j}tC(g|0,e|0,d|0)|0;a[g+d|0]=0;i=f;return}function lt(b){b=b|0;var d=0;d=i;if((a[b]&1)==0){i=d;return}_B(c[b+8>>2]|0);i=d;return}function mt(b){b=b|0;var d=0;d=i;if((a[b]&1)==0){i=d;return}_B(c[b+8>>2]|0);i=d;return}function nt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;if((b|0)==(d|0)){i=e;return b|0}f=a[d]|0;if((f&1)==0){g=d+1|0;h=(f&255)>>>1}else{g=c[d+8>>2]|0;h=c[d+4>>2]|0}d=b;f=a[d]|0;if((f&1)==0){j=f;k=10}else{f=c[b>>2]|0;j=f&255;k=(f&-2)+ -1|0}f=(j&1)==0;if(k>>>0<h>>>0){if(f){l=(j&255)>>>1}else{l=c[b+4>>2]|0}wt(b,k,h-k|0,l,0,l,h,g);i=e;return b|0}if(f){m=b+1|0}else{m=c[b+8>>2]|0}rC(m|0,g|0,h|0)|0;a[m+h|0]=0;if((a[d]&1)==0){a[d]=h<<1;i=e;return b|0}else{c[b+4>>2]=h;i=e;return b|0}return 0}function ot(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=sC(d|0)|0;g=b;h=a[g]|0;if((h&1)==0){j=h;k=10}else{h=c[b>>2]|0;j=h&255;k=(h&-2)+ -1|0}h=(j&1)==0;if(k>>>0<f>>>0){if(h){l=(j&255)>>>1}else{l=c[b+4>>2]|0}wt(b,k,f-k|0,l,0,l,f,d);i=e;return b|0}if(h){m=b+1|0}else{m=c[b+8>>2]|0}rC(m|0,d|0,f|0)|0;a[m+f|0]=0;if((a[g]&1)==0){a[g]=f<<1;i=e;return b|0}else{c[b+4>>2]=f;i=e;return b|0}return 0}function pt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=b;h=a[g]|0;if((h&1)==0){j=10;k=h}else{h=c[b>>2]|0;j=(h&-2)+ -1|0;k=h&255}h=(k&1)==0;if(j>>>0<e>>>0){if(h){l=(k&255)>>>1}else{l=c[b+4>>2]|0}wt(b,j,e-j|0,l,0,l,e,d);i=f;return b|0}if(h){m=b+1|0}else{m=c[b+8>>2]|0}rC(m|0,d|0,e|0)|0;a[m+e|0]=0;if((a[g]&1)==0){a[g]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function qt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=b;h=a[g]|0;j=(h&1)==0;if(j){k=(h&255)>>>1}else{k=c[b+4>>2]|0}if(k>>>0<d>>>0){rt(b,d-k|0,e)|0;i=f;return}if(j){a[b+d+1|0]=0;a[g]=d<<1;i=f;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;i=f;return}}function rt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;if((d|0)==0){i=f;return b|0}g=b;h=a[g]|0;if((h&1)==0){j=h;k=10}else{h=c[b>>2]|0;j=h&255;k=(h&-2)+ -1|0}if((j&1)==0){l=(j&255)>>>1}else{l=c[b+4>>2]|0}if((k-l|0)>>>0<d>>>0){xt(b,k,d-k+l|0,l,l,0,0);m=a[g]|0}else{m=j}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}tC(n+l|0,e|0,d|0)|0;e=l+d|0;if((a[g]&1)==0){a[g]=e<<1}else{c[b+4>>2]=e}a[n+e|0]=0;i=f;return b|0}function st(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;if(d>>>0>4294967279){ft(0)}f=b;g=a[f]|0;if((g&1)==0){h=g;j=10}else{g=c[b>>2]|0;h=g&255;j=(g&-2)+ -1|0}if((h&1)==0){k=(h&255)>>>1}else{k=c[b+4>>2]|0}g=k>>>0>d>>>0?k:d;if(g>>>0<11){l=10}else{l=(g+16&-16)+ -1|0}if((l|0)==(j|0)){i=e;return}do{if((l|0)==10){m=b+1|0;n=0;o=c[b+8>>2]|0;p=1}else{g=l+1|0;do{if(l>>>0>j>>>0){q=YB(g)|0}else{t=0;d=oa(93,g|0)|0;r=t;t=0;if(!(r&1)){q=d;break}d=Kb(-1,-1,0)|0;hb(d|0)|0;Ic();i=e;return}}while(0);if((h&1)==0){m=q;n=1;o=b+1|0;p=0;break}else{m=q;n=1;o=c[b+8>>2]|0;p=1;break}}}while(0);if((h&1)==0){s=(h&255)>>>1}else{s=c[b+4>>2]|0}qC(m|0,o|0,s+1|0)|0;if(p){_B(o)}if(n){c[b>>2]=l+1|1;c[b+4>>2]=k;c[b+8>>2]=m;i=e;return}else{a[f]=k<<1;i=e;return}}function tt(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=vt(a,b,sC(b|0)|0)|0;i=c;return d|0}function ut(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=b;g=a[f]|0;h=(g&1)!=0;if(h){j=(c[b>>2]&-2)+ -1|0;k=c[b+4>>2]|0}else{j=10;k=(g&255)>>>1}if((k|0)==(j|0)){xt(b,j,1,j,j,0,0);if((a[f]&1)==0){l=7}else{l=8}}else{if(h){l=8}else{l=7}}if((l|0)==7){a[f]=(k<<1)+2;m=b+1|0;n=k+1|0;o=m+k|0;a[o]=d;p=m+n|0;a[p]=0;i=e;return}else if((l|0)==8){l=c[b+8>>2]|0;f=k+1|0;c[b+4>>2]=f;m=l;n=f;o=m+k|0;a[o]=d;p=m+n|0;a[p]=0;i=e;return}}function vt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=b;h=a[g]|0;if((h&1)==0){j=10;k=h}else{h=c[b>>2]|0;j=(h&-2)+ -1|0;k=h&255}if((k&1)==0){l=(k&255)>>>1}else{l=c[b+4>>2]|0}if((j-l|0)>>>0<e>>>0){wt(b,j,e-j+l|0,l,l,0,e,d);i=f;return b|0}if((e|0)==0){i=f;return b|0}if((k&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}qC(m+l|0,d|0,e|0)|0;d=l+e|0;if((a[g]&1)==0){a[g]=d<<1}else{c[b+4>>2]=d}a[m+d|0]=0;i=f;return b|0}function wt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;if((-18-d|0)>>>0<e>>>0){ft(0)}if((a[b]&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}do{if(d>>>0<2147483623){n=e+d|0;o=d<<1;p=n>>>0<o>>>0?o:n;if(p>>>0<11){q=11;break}q=p+16&-16}else{q=-17}}while(0);e=YB(q)|0;if((g|0)!=0){qC(e|0,m|0,g|0)|0}if((j|0)!=0){qC(e+g|0,k|0,j|0)|0}k=f-h|0;if((k|0)!=(g|0)){qC(e+(j+g)|0,m+(h+g)|0,k-g|0)|0}if((d|0)==10){r=b+8|0;c[r>>2]=e;s=q|1;t=b;c[t>>2]=s;u=k+j|0;v=b+4|0;c[v>>2]=u;w=e+u|0;a[w]=0;i=l;return}_B(m);r=b+8|0;c[r>>2]=e;s=q|1;t=b;c[t>>2]=s;u=k+j|0;v=b+4|0;c[v>>2]=u;w=e+u|0;a[w]=0;i=l;return}function xt(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=i;if((-17-d|0)>>>0<e>>>0){ft(0)}if((a[b]&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}do{if(d>>>0<2147483623){m=e+d|0;n=d<<1;o=m>>>0<n>>>0?n:m;if(o>>>0<11){p=11;break}p=o+16&-16}else{p=-17}}while(0);e=YB(p)|0;if((g|0)!=0){qC(e|0,l|0,g|0)|0}o=f-h|0;if((o|0)!=(g|0)){qC(e+(j+g)|0,l+(h+g)|0,o-g|0)|0}if((d|0)==10){q=b+8|0;c[q>>2]=e;r=p|1;s=b;c[s>>2]=r;i=k;return}_B(l);q=b+8|0;c[q>>2]=e;r=p|1;s=b;c[s>>2]=r;i=k;return}function yt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=a[b]|0;j=(h&1)==0;if(j){k=(h&255)>>>1}else{k=c[b+4>>2]|0}if(k>>>0<e>>>0|(k-e|0)>>>0<f>>>0){l=-1;i=g;return l|0}if((f|0)==0){l=e;i=g;return l|0}if(j){m=b+1|0}else{m=c[b+8>>2]|0}b=m+e|0;j=m+k|0;h=d+f|0;if((j-b|0)<(f|0)){l=-1;i=g;return l|0}n=k+(1-f)|0;f=m+n|0;if((n|0)==(e|0)){l=-1;i=g;return l|0}e=a[d]|0;n=b;a:while(1){if((a[n]|0)==e<<24>>24){b=n;k=d;do{k=k+1|0;if((k|0)==(h|0)){break a}b=b+1|0;}while((a[b]|0)==(a[k]|0))}k=n+1|0;if((k|0)==(f|0)){l=-1;o=18;break}else{n=k}}if((o|0)==18){i=g;return l|0}if((n|0)==(j|0)){l=-1;i=g;return l|0}l=n-m|0;i=g;return l|0}function zt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=a[b]|0;h=(g&1)==0;if(h){j=(g&255)>>>1}else{j=c[b+4>>2]|0}if(!(j>>>0>e>>>0)){k=-1;i=f;return k|0}if(h){l=b+1|0}else{l=c[b+8>>2]|0}b=Ua(l+e|0,d&255|0,j-e|0)|0;if((b|0)==0){k=-1;i=f;return k|0}k=b-l|0;i=f;return k|0}function At(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=sC(d|0)|0;g=a[b]|0;h=(g&1)==0;if(h){j=(g&255)>>>1}else{j=c[b+4>>2]|0}if((f|0)==-1){t=0;ma(278,0);g=t;t=0;if(g&1){g=Kb(-1,-1,0)|0;Xe(g)}}if(h){k=b+1|0}else{k=c[b+8>>2]|0}b=j>>>0>f>>>0;h=nC(k,d,b?f:j)|0;if((h|0)==0){i=e;return(j>>>0<f>>>0?-1:b&1)|0}else{i=e;return h|0}return 0}function Bt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if(e>>>0>1073741807){ft(0)}if(e>>>0<2){a[b]=e<<1;g=b+4|0;sB(g,d,e)|0;h=g+(e<<2)|0;c[h>>2]=0;i=f;return}else{j=e+4&-4;k=YB(j<<2)|0;c[b+8>>2]=k;c[b>>2]=j|1;c[b+4>>2]=e;g=k;sB(g,d,e)|0;h=g+(e<<2)|0;c[h>>2]=0;i=f;return}}function Ct(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if(d>>>0>1073741807){ft(0)}if(d>>>0<2){a[b]=d<<1;g=b+4|0;uB(g,e,d)|0;h=g+(d<<2)|0;c[h>>2]=0;i=f;return}else{j=d+4&-4;k=YB(j<<2)|0;c[b+8>>2]=k;c[b>>2]=j|1;c[b+4>>2]=d;g=k;uB(g,e,d)|0;h=g+(d<<2)|0;c[h>>2]=0;i=f;return}}function Dt(b){b=b|0;var d=0;d=i;if((a[b]&1)==0){i=d;return}_B(c[b+8>>2]|0);i=d;return}function Et(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=Ft(a,b,rB(b)|0)|0;i=c;return d|0}function Ft(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=b;h=a[g]|0;if((h&1)==0){j=1;k=h}else{h=c[b>>2]|0;j=(h&-2)+ -1|0;k=h&255}h=(k&1)==0;if(j>>>0<e>>>0){if(h){l=(k&255)>>>1}else{l=c[b+4>>2]|0}It(b,j,e-j|0,l,0,l,e,d);i=f;return b|0}if(h){m=b+4|0}else{m=c[b+8>>2]|0}tB(m,d,e)|0;c[m+(e<<2)>>2]=0;if((a[g]&1)==0){a[g]=e<<1;i=f;return b|0}else{c[b+4>>2]=e;i=f;return b|0}return 0}function Gt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;if(d>>>0>1073741807){ft(0)}f=b;g=a[f]|0;if((g&1)==0){h=g;j=1}else{g=c[b>>2]|0;h=g&255;j=(g&-2)+ -1|0}if((h&1)==0){k=(h&255)>>>1}else{k=c[b+4>>2]|0}g=k>>>0>d>>>0?k:d;if(g>>>0<2){l=1}else{l=(g+4&-4)+ -1|0}if((l|0)==(j|0)){i=e;return}do{if((l|0)==1){m=b+4|0;n=0;o=c[b+8>>2]|0;p=1}else{g=(l<<2)+4|0;do{if(l>>>0>j>>>0){q=YB(g)|0}else{t=0;d=oa(93,g|0)|0;r=t;t=0;if(!(r&1)){q=d;break}d=Kb(-1,-1,0)|0;hb(d|0)|0;Ic();i=e;return}}while(0);g=q;if((h&1)==0){m=g;n=1;o=b+4|0;p=0;break}else{m=g;n=1;o=c[b+8>>2]|0;p=1;break}}}while(0);if((h&1)==0){s=(h&255)>>>1}else{s=c[b+4>>2]|0}sB(m,o,s+1|0)|0;if(p){_B(o)}if(n){c[b>>2]=l+1|1;c[b+4>>2]=k;c[b+8>>2]=m;i=e;return}else{a[f]=k<<1;i=e;return}}function Ht(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=b;g=a[f]|0;h=(g&1)!=0;if(h){j=(c[b>>2]&-2)+ -1|0;k=c[b+4>>2]|0}else{j=1;k=(g&255)>>>1}if((k|0)==(j|0)){Jt(b,j,1,j,j,0,0);if((a[f]&1)==0){l=7}else{l=8}}else{if(h){l=8}else{l=7}}if((l|0)==7){a[f]=(k<<1)+2;m=b+4|0;n=k+1|0;o=m+(k<<2)|0;c[o>>2]=d;p=m+(n<<2)|0;c[p>>2]=0;i=e;return}else if((l|0)==8){l=c[b+8>>2]|0;f=k+1|0;c[b+4>>2]=f;m=l;n=f;o=m+(k<<2)|0;c[o>>2]=d;p=m+(n<<2)|0;c[p>>2]=0;i=e;return}}function It(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;if((1073741806-d|0)>>>0<e>>>0){ft(0)}if((a[b]&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}do{if(d>>>0<536870887){n=e+d|0;o=d<<1;p=n>>>0<o>>>0?o:n;if(p>>>0<2){q=2;break}q=p+4&-4}else{q=1073741807}}while(0);e=YB(q<<2)|0;if((g|0)!=0){sB(e,m,g)|0}if((j|0)!=0){sB(e+(g<<2)|0,k,j)|0}k=f-h|0;if((k|0)!=(g|0)){sB(e+(j+g<<2)|0,m+(h+g<<2)|0,k-g|0)|0}if((d|0)==1){r=b+8|0;c[r>>2]=e;s=q|1;t=b;c[t>>2]=s;u=k+j|0;v=b+4|0;c[v>>2]=u;w=e+(u<<2)|0;c[w>>2]=0;i=l;return}_B(m);r=b+8|0;c[r>>2]=e;s=q|1;t=b;c[t>>2]=s;u=k+j|0;v=b+4|0;c[v>>2]=u;w=e+(u<<2)|0;c[w>>2]=0;i=l;return}function Jt(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=i;if((1073741807-d|0)>>>0<e>>>0){ft(0)}if((a[b]&1)==0){l=b+4|0}else{l=c[b+8>>2]|0}do{if(d>>>0<536870887){m=e+d|0;n=d<<1;o=m>>>0<n>>>0?n:m;if(o>>>0<2){p=2;break}p=o+4&-4}else{p=1073741807}}while(0);e=YB(p<<2)|0;if((g|0)!=0){sB(e,l,g)|0}o=f-h|0;if((o|0)!=(g|0)){sB(e+(j+g<<2)|0,l+(h+g<<2)|0,o-g|0)|0}if((d|0)==1){q=b+8|0;c[q>>2]=e;r=p|1;s=b;c[s>>2]=r;i=k;return}_B(l);q=b+8|0;c[q>>2]=e;r=p|1;s=b;c[s>>2]=r;i=k;return}function Kt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;h=(c[b+24>>2]|0)==0;if(h){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((h&1|d)&c[b+20>>2]|0)==0){i=e;return}e=xc(16)|0;do{if((a[18976]|0)==0){if((Va(18976)|0)==0){break}c[4742]=19672;Td(157,18968,p|0)|0;Nb(18976)}}while(0);b=e;d=g;c[d>>2]=1;c[d+4>>2]=18968;t=0;d=f;h=g;c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];La(54,b|0,f|0,19024);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;Jb(e|0);Wb(f|0)}else{c[e>>2]=18992;Md(e|0,19072,153)}}function Lt(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;c[a>>2]=19016;d=c[a+40>>2]|0;e=a+32|0;f=a+36|0;a:do{if((d|0)!=0){g=d;while(1){g=g+ -1|0;t=0;La(c[(c[e>>2]|0)+(g<<2)>>2]|0,0,a|0,c[(c[f>>2]|0)+(g<<2)>>2]|0);h=t;t=0;if(h&1){break}if((g|0)==0){break a}}g=Kb(-1,-1,0)|0;Xe(g)}}while(0);bz(a+28|0);UB(c[e>>2]|0);UB(c[f>>2]|0);UB(c[a+48>>2]|0);UB(c[a+60>>2]|0);i=b;return}function Mt(a){a=a|0;var b=0;b=i;Lt(a);_B(a);i=b;return}function Nt(a){a=a|0;var b=0;b=i;Lt(a);i=b;return}function Ot(a,b){a=a|0;b=b|0;var c=0;c=i;az(a,b+28|0);i=c;return}function Pt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=b+28|0;az(a,f);cz(f,d)|0;d=c[b+40>>2]|0;if((d|0)==0){i=e;return}f=b+32|0;g=b+36|0;h=d;while(1){d=h+ -1|0;t=0;La(c[(c[f>>2]|0)+(d<<2)>>2]|0,1,b|0,c[(c[g>>2]|0)+(d<<2)>>2]|0);j=t;t=0;if(j&1){k=5;break}if((d|0)==0){k=6;break}else{h=d}}if((k|0)==5){h=Kb(-1,-1)|0;bz(a);Wb(h|0)}else if((k|0)==6){i=e;return}}function Qt(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;e=a+32|0;a=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(a|0));$y(b);i=d;return}function Rt(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);_B(a);i=b;return}function St(a){a=a|0;var b=0;b=i;c[a>>2]=18632;bz(a+4|0);i=b;return}function Tt(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=18632;$y(a+4|0);d=a+8|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;i=b;return}function Ut(a,b){a=a|0;b=b|0;i=i;return}function Vt(a,b,c){a=a|0;b=b|0;c=c|0;i=i;return a|0}function Wt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;i=i;return}function Xt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;i=i;return}function Yt(a){a=a|0;i=i;return 0}function Zt(a){a=a|0;i=i;return 0}function _t(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;if((e|0)<=0){h=0;i=f;return h|0}j=b+12|0;k=b+16|0;l=d;d=0;while(1){m=c[j>>2]|0;if(m>>>0<(c[k>>2]|0)>>>0){c[j>>2]=m+1;n=a[m]|0}else{m=$d[c[(c[g>>2]|0)+40>>2]&127](b)|0;if((m|0)==-1){h=d;o=8;break}n=m&255}a[l]=n;m=d+1|0;if((m|0)<(e|0)){l=l+1|0;d=m}else{h=m;o=8;break}}if((o|0)==8){i=f;return h|0}return 0}function $t(a){a=a|0;i=i;return-1}function au(a){a=a|0;var b=0,e=0,f=0;b=i;if(($d[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){e=-1;i=b;return e|0}f=a+12|0;a=c[f>>2]|0;c[f>>2]=a+1;e=d[a]|0;i=b;return e|0}function bu(a,b){a=a|0;b=b|0;i=i;return-1}function cu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;h=b;if((f|0)<=0){j=0;i=g;return j|0}k=b+24|0;l=b+28|0;m=e;e=0;while(1){n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){o=a[m]|0;c[k>>2]=n+1;a[n]=o}else{if((pe[c[(c[h>>2]|0)+52>>2]&63](b,d[m]|0)|0)==-1){j=e;p=7;break}}o=e+1|0;if((o|0)<(f|0)){m=m+1|0;e=o}else{j=o;p=7;break}}if((p|0)==7){i=g;return j|0}return 0}function du(a,b){a=a|0;b=b|0;i=i;return-1}function eu(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);_B(a);i=b;return}function fu(a){a=a|0;var b=0;b=i;c[a>>2]=18696;bz(a+4|0);i=b;return}function gu(a,b){a=a|0;b=b|0;i=i;return}function hu(a,b,c){a=a|0;b=b|0;c=c|0;i=i;return a|0}function iu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;i=i;return}function ju(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;i=i;return}function ku(a){a=a|0;i=i;return 0}function lu(a){a=a|0;i=i;return 0}function mu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=a;if((d|0)<=0){g=0;i=e;return g|0}h=a+12|0;j=a+16|0;k=b;b=0;while(1){l=c[h>>2]|0;if(l>>>0<(c[j>>2]|0)>>>0){c[h>>2]=l+4;m=c[l>>2]|0}else{l=$d[c[(c[f>>2]|0)+40>>2]&127](a)|0;if((l|0)==-1){g=b;n=8;break}else{m=l}}c[k>>2]=m;l=b+1|0;if((l|0)>=(d|0)){g=l;n=8;break}k=k+4|0;b=l}if((n|0)==8){i=e;return g|0}return 0}function nu(a){a=a|0;i=i;return-1}function ou(a){a=a|0;var b=0,d=0,e=0;b=i;if(($d[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){d=-1;i=b;return d|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+4;d=c[a>>2]|0;i=b;return d|0}function pu(a,b){a=a|0;b=b|0;i=i;return-1}function qu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=a;if((d|0)<=0){g=0;i=e;return g|0}h=a+24|0;j=a+28|0;k=b;b=0;while(1){l=c[h>>2]|0;if(l>>>0<(c[j>>2]|0)>>>0){m=c[k>>2]|0;c[h>>2]=l+4;c[l>>2]=m}else{if((pe[c[(c[f>>2]|0)+52>>2]&63](a,c[k>>2]|0)|0)==-1){g=b;n=8;break}}m=b+1|0;if((m|0)>=(d|0)){g=m;n=8;break}k=k+4|0;b=m}if((n|0)==8){i=e;return g|0}return 0}function ru(a,b){a=a|0;b=b|0;i=i;return-1}function su(a){a=a|0;var b=0;b=i;Lt(a+8|0);_B(a);i=b;return}function tu(a){a=a|0;var b=0;b=i;Lt(a+8|0);i=b;return}function uu(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;e=c[(c[a>>2]|0)+ -12>>2]|0;Lt(d+(e+8)|0);_B(d+e|0);i=b;return}function vu(a){a=a|0;var b=0;b=i;Lt(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function wu(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+8|0;j=h;k=e;a[k]=0;e=f;l=c[(c[e>>2]|0)+ -12>>2]|0;m=f;f=c[m+(l+16)>>2]|0;if((f|0)!=0){Kt(m+l|0,f|4);i=h;return}f=c[m+(l+72)>>2]|0;if((f|0)!=0){xu(f)|0}a:do{if(!g){f=c[(c[e>>2]|0)+ -12>>2]|0;if((c[m+(f+4)>>2]&4096|0)==0){break}az(j,m+(f+28)|0);t=0;f=Ea(20,j|0,21368)|0;l=t;t=0;if(l&1){l=Kb(-1,-1)|0;bz(j);Wb(l|0)}bz(j);l=f+8|0;f=c[m+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;while(1){if((f|0)==0){break}if((c[f+12>>2]|0)==(c[f+16>>2]|0)){n=($d[c[(c[f>>2]|0)+36>>2]&127](f)|0)==-1;o=n?0:f;if((o|0)==0){break}else{p=o}}else{p=f}o=p+12|0;n=c[o>>2]|0;q=p+16|0;if((n|0)==(c[q>>2]|0)){r=$d[c[(c[p>>2]|0)+36>>2]&127](p)|0}else{r=d[n]|0}if(!((r&255)<<24>>24>-1)){s=20;break}if((b[(c[l>>2]|0)+(r<<24>>24<<1)>>1]&8192)==0){s=20;break}n=c[o>>2]|0;if((n|0)==(c[q>>2]|0)){$d[c[(c[p>>2]|0)+40>>2]&127](p)|0;f=p;continue}else{c[o>>2]=n+1;f=p;continue}}do{if((s|0)==20){if((p|0)==0){break}if((c[p+12>>2]|0)!=(c[p+16>>2]|0)){break a}if(!(($d[c[(c[p>>2]|0)+36>>2]&127](p)|0)==-1|(p|0)==0)){break a}}}while(0);f=c[(c[e>>2]|0)+ -12>>2]|0;Kt(m+f|0,c[m+(f+16)>>2]|6)}}while(0);a[k]=(c[m+((c[(c[e>>2]|0)+ -12>>2]|0)+16)>>2]|0)==0|0;i=h;return}function xu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+8|0;e=d;f=b;g=c[(c[f>>2]|0)+ -12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;do{if((k|0)==0){l=g;m=6}else{t=0;oa(102,k|0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1,0)|0;o=n;break}else{l=c[(c[f>>2]|0)+ -12>>2]|0;m=6;break}}}while(0);if((m|0)==6){a[j]=1;k=c[h+(l+24)>>2]|0;t=0;n=oa(c[(c[k>>2]|0)+24>>2]|0,k|0)|0;k=t;t=0;if(!(k&1)){if(!((n|0)==-1)){break}n=c[(c[f>>2]|0)+ -12>>2]|0;t=0;na(43,h+n|0,c[h+(n+16)>>2]|1|0);n=t;t=0;if(!(n&1)){break}}n=Kb(-1,-1,0)|0;Ju(e);o=n}hb(o|0)|0;n=c[(c[f>>2]|0)+ -12>>2]|0;k=h+(n+16)|0;c[k>>2]=c[k>>2]|1;if((c[h+(n+20)>>2]&1|0)==0){Ic();i=d;return b|0}t=0;Ma(3);n=t;t=0;n=Kb(-1,-1)|0;t=0;Ma(2);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}else{Wb(n|0)}}}while(0);Ju(e);i=d;return b|0}function yu(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){i=i;return}else{xb()}}function zu(a){a=a|0;var b=0;b=i;Lt(a+8|0);_B(a);i=b;return}function Au(a){a=a|0;var b=0;b=i;Lt(a+8|0);i=b;return}function Bu(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;e=c[(c[a>>2]|0)+ -12>>2]|0;Lt(d+(e+8)|0);_B(d+e|0);i=b;return}function Cu(a){a=a|0;var b=0;b=i;Lt(a+((c[(c[a>>2]|0)+ -12>>2]|0)+8)|0);i=b;return}function Du(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+8|0;e=d;f=b;g=c[(c[f>>2]|0)+ -12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;do{if((k|0)==0){l=g;m=6}else{t=0;oa(103,k|0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1,0)|0;o=n;break}else{l=c[(c[f>>2]|0)+ -12>>2]|0;m=6;break}}}while(0);if((m|0)==6){a[j]=1;k=c[h+(l+24)>>2]|0;t=0;n=oa(c[(c[k>>2]|0)+24>>2]|0,k|0)|0;k=t;t=0;if(!(k&1)){if(!((n|0)==-1)){break}n=c[(c[f>>2]|0)+ -12>>2]|0;t=0;na(43,h+n|0,c[h+(n+16)>>2]|1|0);n=t;t=0;if(!(n&1)){break}}n=Kb(-1,-1,0)|0;Su(e);o=n}hb(o|0)|0;n=c[(c[f>>2]|0)+ -12>>2]|0;k=h+(n+16)|0;c[k>>2]=c[k>>2]|1;if((c[h+(n+20)>>2]&1|0)==0){Ic();i=d;return b|0}t=0;Ma(3);n=t;t=0;n=Kb(-1,-1)|0;t=0;Ma(2);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}else{Wb(n|0)}}}while(0);Su(e);i=d;return b|0}function Eu(a){a=a|0;var b=0;b=i;Lt(a+4|0);_B(a);i=b;return}function Fu(a){a=a|0;var b=0;b=i;Lt(a+4|0);i=b;return}function Gu(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;e=c[(c[a>>2]|0)+ -12>>2]|0;Lt(d+(e+4)|0);_B(d+e|0);i=b;return}function Hu(a){a=a|0;var b=0;b=i;Lt(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function Iu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=b;a[f]=0;c[b+4>>2]=d;b=c[(c[d>>2]|0)+ -12>>2]|0;g=d;if((c[g+(b+16)>>2]|0)!=0){i=e;return}d=c[g+(b+72)>>2]|0;if((d|0)!=0){xu(d)|0}a[f]=1;i=e;return}function Ju(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a+4|0;a=c[d>>2]|0;e=c[(c[a>>2]|0)+ -12>>2]|0;f=a;if((c[f+(e+24)>>2]|0)==0){i=b;return}if((c[f+(e+16)>>2]|0)!=0){i=b;return}if((c[f+(e+4)>>2]&8192|0)==0){i=b;return}if(Ya()|0){i=b;return}e=c[d>>2]|0;f=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;t=0;e=oa(c[(c[f>>2]|0)+24>>2]|0,f|0)|0;f=t;t=0;do{if(!(f&1)){if(!((e|0)==-1)){i=b;return}a=c[d>>2]|0;g=c[(c[a>>2]|0)+ -12>>2]|0;h=a;t=0;na(43,h+g|0,c[h+(g+16)>>2]|1|0);g=t;t=0;if(g&1){break}i=b;return}}while(0);d=Kb(-1,-1,0)|0;hb(d|0)|0;t=0;Ma(2);d=t;t=0;if(d&1){d=Kb(-1,-1,0)|0;Xe(d)}else{i=b;return}}function Ku(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+48|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=j;a[m]=0;c[j+4>>2]=b;n=b;o=c[(c[n>>2]|0)+ -12>>2]|0;p=b;do{if((c[p+(o+16)>>2]|0)==0){q=c[p+(o+72)>>2]|0;do{if((q|0)==0){r=o;s=5}else{t=0;oa(102,q|0)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;v=u;break}else{r=c[(c[n>>2]|0)+ -12>>2]|0;s=5;break}}}while(0);if((s|0)==5){a[m]=1;az(k,p+(r+28)|0);t=0;q=Ea(20,k|0,20080)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;bz(k);w=u}else{u=q;bz(k);x=c[(c[n>>2]|0)+ -12>>2]|0;y=c[p+(x+24)>>2]|0;z=p+x|0;A=p+(x+76)|0;B=c[A>>2]|0;a:do{if((B|0)==-1){az(h,p+(x+28)|0);t=0;C=Ea(20,h|0,21368)|0;D=t;t=0;do{if(!(D&1)){t=0;E=Ea(c[(c[C>>2]|0)+28>>2]|0,C|0,32)|0;F=t;t=0;if(F&1){break}bz(h);F=E<<24>>24;c[A>>2]=F;G=F;s=11;break a}}while(0);C=Kb(-1,-1,0)|0;bz(h);H=C}else{G=B;s=11}}while(0);if((s|0)==11){B=G&255;A=z;x=c[(c[q>>2]|0)+16>>2]|0;c[g>>2]=y;t=0;C=f;D=g;c[C+0>>2]=c[D+0>>2];wa(x|0,l|0,u|0,f|0,A|0,B|0,d|0);B=t;t=0;if(!(B&1)){if((c[l>>2]|0)!=0){break}B=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,p+B|0,c[p+(B+16)>>2]|5|0);B=t;t=0;if(!(B&1)){break}}B=Kb(-1,-1,0)|0;H=B}w=H}Ju(j);v=w}hb(v|0)|0;B=c[(c[n>>2]|0)+ -12>>2]|0;A=p+(B+16)|0;c[A>>2]=c[A>>2]|1;if((c[p+(B+20)>>2]&1|0)==0){Ic();i=e;return b|0}t=0;Ma(3);B=t;t=0;B=Kb(-1,-1)|0;t=0;Ma(2);A=t;t=0;if(A&1){A=Kb(-1,-1,0)|0;Xe(A)}else{Wb(B|0)}}}while(0);Ju(j);i=e;return b|0}function Lu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+48|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=j;a[m]=0;c[j+4>>2]=b;n=b;o=c[(c[n>>2]|0)+ -12>>2]|0;p=b;do{if((c[p+(o+16)>>2]|0)==0){q=c[p+(o+72)>>2]|0;do{if((q|0)==0){r=o;s=5}else{t=0;oa(102,q|0)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;v=u;break}else{r=c[(c[n>>2]|0)+ -12>>2]|0;s=5;break}}}while(0);if((s|0)==5){a[m]=1;az(k,p+(r+28)|0);t=0;q=Ea(20,k|0,20080)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;bz(k);w=u}else{u=q;bz(k);x=c[(c[n>>2]|0)+ -12>>2]|0;y=c[p+(x+24)>>2]|0;z=p+x|0;A=p+(x+76)|0;B=c[A>>2]|0;a:do{if((B|0)==-1){az(h,p+(x+28)|0);t=0;C=Ea(20,h|0,21368)|0;D=t;t=0;do{if(!(D&1)){t=0;E=Ea(c[(c[C>>2]|0)+28>>2]|0,C|0,32)|0;F=t;t=0;if(F&1){break}bz(h);F=E<<24>>24;c[A>>2]=F;G=F;s=11;break a}}while(0);C=Kb(-1,-1,0)|0;bz(h);H=C}else{G=B;s=11}}while(0);if((s|0)==11){B=G&255;A=z;x=c[(c[q>>2]|0)+24>>2]|0;c[g>>2]=y;t=0;C=f;D=g;c[C+0>>2]=c[D+0>>2];wa(x|0,l|0,u|0,f|0,A|0,B|0,d|0);B=t;t=0;if(!(B&1)){if((c[l>>2]|0)!=0){break}B=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,p+B|0,c[p+(B+16)>>2]|5|0);B=t;t=0;if(!(B&1)){break}}B=Kb(-1,-1,0)|0;H=B}w=H}Ju(j);v=w}hb(v|0)|0;B=c[(c[n>>2]|0)+ -12>>2]|0;A=p+(B+16)|0;c[A>>2]=c[A>>2]|1;if((c[p+(B+20)>>2]&1|0)==0){Ic();i=e;return b|0}t=0;Ma(3);B=t;t=0;B=Kb(-1,-1)|0;t=0;Ma(2);A=t;t=0;if(A&1){A=Kb(-1,-1,0)|0;Xe(A)}else{Wb(B|0)}}}while(0);Ju(j);i=e;return b|0}function Mu(b,d){b=b|0;d=+d;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0;e=i;i=i+48|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=j;a[m]=0;c[j+4>>2]=b;n=b;o=c[(c[n>>2]|0)+ -12>>2]|0;p=b;do{if((c[p+(o+16)>>2]|0)==0){q=c[p+(o+72)>>2]|0;do{if((q|0)==0){r=o;s=5}else{t=0;oa(102,q|0)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;v=u;break}else{r=c[(c[n>>2]|0)+ -12>>2]|0;s=5;break}}}while(0);if((s|0)==5){a[m]=1;az(k,p+(r+28)|0);t=0;q=Ea(20,k|0,20080)|0;u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;bz(k);w=u}else{u=q;bz(k);x=c[(c[n>>2]|0)+ -12>>2]|0;y=c[p+(x+24)>>2]|0;z=p+x|0;A=p+(x+76)|0;B=c[A>>2]|0;a:do{if((B|0)==-1){az(h,p+(x+28)|0);t=0;C=Ea(20,h|0,21368)|0;D=t;t=0;do{if(!(D&1)){t=0;E=Ea(c[(c[C>>2]|0)+28>>2]|0,C|0,32)|0;F=t;t=0;if(F&1){break}bz(h);F=E<<24>>24;c[A>>2]=F;G=F;s=11;break a}}while(0);C=Kb(-1,-1,0)|0;bz(h);H=C}else{G=B;s=11}}while(0);if((s|0)==11){B=G&255;A=z;I=d;x=c[(c[q>>2]|0)+32>>2]|0;c[g>>2]=y;t=0;C=f;D=g;c[C+0>>2]=c[D+0>>2];ua(x|0,l|0,u|0,f|0,A|0,B|0,+I);B=t;t=0;if(!(B&1)){if((c[l>>2]|0)!=0){break}B=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,p+B|0,c[p+(B+16)>>2]|5|0);B=t;t=0;if(!(B&1)){break}}B=Kb(-1,-1,0)|0;H=B}w=H}Ju(j);v=w}hb(v|0)|0;B=c[(c[n>>2]|0)+ -12>>2]|0;A=p+(B+16)|0;c[A>>2]=c[A>>2]|1;if((c[p+(B+20)>>2]&1|0)==0){Ic();i=e;return b|0}t=0;Ma(3);B=t;t=0;B=Kb(-1,-1)|0;t=0;Ma(2);A=t;t=0;if(A&1){A=Kb(-1,-1,0)|0;Xe(A)}else{Wb(B|0)}}}while(0);Ju(j);i=e;return b|0}



function Ae(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Be(){return i|0}function Ce(a){a=a|0;i=a}function De(a,b){a=a|0;b=b|0;if((t|0)==0){t=a;u=b}}function Ee(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Fe(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Ge(a){a=a|0;I=a}function He(a){a=a|0;J=a}function Ie(a){a=a|0;K=a}function Je(a){a=a|0;L=a}function Ke(a){a=a|0;M=a}function Le(a){a=a|0;N=a}function Me(a){a=a|0;O=a}function Ne(a){a=a|0;P=a}function Oe(a){a=a|0;Q=a}function Pe(a){a=a|0;R=a}function Qe(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,J=0;d=i;i=i+16|0;e=d;f=b+68|0;fr(f,0.0)|0;h=b+20|0;j=c[h>>2]|0;l=b+24|0;m=c[l>>2]|0;if((j|0)!=(m|0)){n=e;o=e+4|0;p=e+8|0;q=j;do{j=q;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];g[n>>2]=+g[k>>2];j=q+4|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];g[o>>2]=+g[k>>2];j=q+8|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];g[p>>2]=+g[k>>2];$q(f,e);q=q+12|0;}while((q|0)!=(m|0))}ar(f,+((c[b+4>>2]|0)>>>0));m=f;a[k]=a[m];a[k+1|0]=a[m+1|0];a[k+2|0]=a[m+2|0];a[k+3|0]=a[m+3|0];r=+g[k>>2];m=b+132|0;g[m>>2]=r;f=b+128|0;g[f>>2]=r;q=b+72|0;a[k]=a[q];a[k+1|0]=a[q+1|0];a[k+2|0]=a[q+2|0];a[k+3|0]=a[q+3|0];s=+g[k>>2];q=b+140|0;g[q>>2]=s;e=b+136|0;g[e>>2]=s;p=b+76|0;a[k]=a[p];a[k+1|0]=a[p+1|0];a[k+2|0]=a[p+2|0];a[k+3|0]=a[p+3|0];u=+g[k>>2];p=b+148|0;g[p>>2]=u;o=b+144|0;g[o>>2]=u;n=c[h>>2]|0;h=c[l>>2]|0;if((n|0)!=(h|0)){v=r;w=s;x=u;y=u;u=s;s=r;l=n;while(1){n=l;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];r=+g[k>>2];n=l+4|0;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];z=+g[k>>2];n=l+8|0;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];A=+g[k>>2];do{if(r>s){g[f>>2]=r;B=v;C=r}else{if(!(r<v)){B=v;C=s;break}g[m>>2]=r;B=r;C=s}}while(0);do{if(z>u){g[e>>2]=z;D=w;E=z}else{if(!(z<w)){D=w;E=u;break}g[q>>2]=z;D=z;E=u}}while(0);do{if(A>y){g[o>>2]=A;F=x;G=A}else{if(!(A<x)){F=x;G=y;break}g[p>>2]=A;F=A;G=y}}while(0);n=l+12|0;if((n|0)==(h|0)){break}else{v=B;w=D;x=F;y=G;u=E;s=C;l=n}}}l=b+152|0;b=c[l>>2]|0;do{if((b|0)!=0){t=0;h=t;t=0;if(!(h&1)){_B(b);break}h=Kb(-1,-1)|0;n=I;_B(b);H=n;J=h;Wb(J|0)}}while(0);b=YB(224)|0;h=b;t=0;Aa(39,h|0,m|0,f|0,q|0,e|0,p|0,o|0);o=t;t=0;if(!(o&1)){c[l>>2]=h;i=d;return}d=Kb(-1,-1)|0;h=I;_B(b);H=h;J=d;Wb(J|0)}function Re(a){a=a|0;var b=0,c=0;b=i;t=0;ma(1,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function Se(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;d=i;i=i+240|0;e=d;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;k=d+40|0;l=d+48|0;m=d+56|0;n=d+64|0;o=d+72|0;p=d+80|0;q=d+88|0;r=d+96|0;s=d+104|0;u=d+112|0;v=d+120|0;w=d+128|0;x=d+136|0;y=d+144|0;z=d+152|0;A=d+160|0;B=d+168|0;C=d+176|0;D=d+184|0;E=d+192|0;F=d+200|0;G=d+208|0;H=d+216|0;J=d+224|0;K=d+232|0;c[b>>2]=16;if((a[b+168|0]|0)==0){L=b+92|0;Jf(L);M=b+80|0;If(M);N=b+56|0;Hf(N);O=b+44|0;Gf(O);P=b+32|0;Gf(P);Q=b+20|0;Gf(Q);i=d;return}R=b+20|0;c[r>>2]=c[R>>2];c[s>>2]=c[b+24>>2];t=0;S=q;T=r;c[S+0>>2]=c[T+0>>2];T=p;S=s;c[T+0>>2]=c[S+0>>2];Oa(11,u|0,R|0,q|0,p|0);p=t;t=0;a:do{if(!(p&1)){q=b+32|0;c[v>>2]=c[q>>2];c[w>>2]=c[b+36>>2];t=0;u=o;S=v;c[u+0>>2]=c[S+0>>2];S=n;u=w;c[S+0>>2]=c[u+0>>2];Oa(11,x|0,q|0,o|0,n|0);q=t;t=0;if(q&1){break}q=b+44|0;c[y>>2]=c[q>>2];c[z>>2]=c[b+48>>2];t=0;u=m;S=y;c[u+0>>2]=c[S+0>>2];S=l;u=z;c[S+0>>2]=c[u+0>>2];Oa(11,A|0,q|0,m|0,l|0);q=t;t=0;if(q&1){break}q=b+56|0;c[B>>2]=c[q>>2];c[C>>2]=c[b+60>>2];t=0;u=k;S=B;c[u+0>>2]=c[S+0>>2];S=j;u=C;c[S+0>>2]=c[u+0>>2];Oa(12,D|0,q|0,k|0,j|0);q=t;t=0;if(q&1){break}q=b+80|0;c[E>>2]=c[q>>2];c[F>>2]=c[b+84>>2];u=h;S=E;c[u+0>>2]=c[S+0>>2];S=g;u=F;c[S+0>>2]=c[u+0>>2];Ve(G,q,h,g);q=b+92|0;c[H>>2]=c[q>>2];c[J>>2]=c[b+96>>2];u=f;S=H;c[u+0>>2]=c[S+0>>2];S=e;u=J;c[S+0>>2]=c[u+0>>2];We(K,q,f,e);do{if((a[b+120|0]|0)!=0){t=0;na(40,1,b+112|0);q=t;t=0;if(q&1){break a}q=c[b+116>>2]|0;if((q|0)==0){break}Jf(q+28|0);_B(q)}}while(0);q=c[b+152>>2]|0;if((q|0)==0){L=b+92|0;Jf(L);M=b+80|0;If(M);N=b+56|0;Hf(N);O=b+44|0;Gf(O);P=b+32|0;Gf(P);Q=b+20|0;Gf(Q);i=d;return}t=0;u=t;t=0;if(u&1){u=Kb(-1,-1)|0;S=I;_B(q);U=S;V=u;W=b+92|0;Jf(W);X=b+80|0;If(X);Y=b+56|0;Hf(Y);Z=b+44|0;Gf(Z);_=b+32|0;Gf(_);$=R;Gf($);Wb(V|0)}else{_B(q);L=b+92|0;Jf(L);M=b+80|0;If(M);N=b+56|0;Hf(N);O=b+44|0;Gf(O);P=b+32|0;Gf(P);Q=b+20|0;Gf(Q);i=d;return}}}while(0);d=Kb(-1,-1)|0;U=I;V=d;W=b+92|0;Jf(W);X=b+80|0;If(X);Y=b+56|0;Hf(Y);Z=b+44|0;Gf(Z);_=b+32|0;Gf(_);$=R;Gf($);Wb(V|0)}function Te(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=c[b>>2]|0;h=c[d>>2]|0;d=h;j=(d-g|0)/12|0;k=g+(j*12|0)|0;c[a>>2]=k;a=c[e>>2]|0;if((h|0)==(a|0)){i=f;return}h=g+((((a-d|0)/12|0)+j|0)*12|0)|0;d=b+4|0;b=c[d>>2]|0;if((h|0)==(b|0)){l=k;m=h}else{a=b+ -12+(0-h)|0;e=h;h=k;while(1){er(h,e)|0;k=e+12|0;if((k|0)==(b|0)){break}else{h=h+12|0;e=k}}l=g+((j+1+((a>>>0)/12|0)|0)*12|0)|0;m=c[d>>2]|0}if((m|0)==(l|0)){i=f;return}c[d>>2]=m+(~(((m+ -12+(0-l)|0)>>>0)/12|0)*12|0);i=f;return}function Ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=c[b>>2]|0;h=c[d>>2]|0;d=h;j=(d-g|0)/44|0;k=g+(j*44|0)|0;c[a>>2]=k;a=c[e>>2]|0;if((h|0)==(a|0)){i=f;return}h=g+((((a-d|0)/44|0)+j|0)*44|0)|0;d=b+4|0;b=c[d>>2]|0;if((h|0)==(b|0)){l=k}else{a=b+ -44+(0-h)|0;e=h;h=k;while(1){zf(h,e)|0;k=e+44|0;if((k|0)==(b|0)){break}else{h=h+44|0;e=k}}l=g+((j+1+((a>>>0)/44|0)|0)*44|0)|0}while(1){a=c[d>>2]|0;if((a|0)==(l|0)){m=10;break}j=a+ -44|0;c[d>>2]=j;t=0;ma(229,j|0);j=t;t=0;if(j&1){m=9;break}}if((m|0)==9){d=Kb(-1,-1)|0;Yb(d|0)}else if((m|0)==10){i=f;return}}function Ve(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=c[b>>2]|0;h=c[d>>2]|0;d=h;j=(d-g|0)/12|0;k=g+(j*12|0)|0;c[a>>2]=k;a=c[e>>2]|0;if((h|0)==(a|0)){i=f;return}h=g+((((a-d|0)/12|0)+j|0)*12|0)|0;d=b+4|0;b=(c[d>>2]|0)-h|0;rC(k|0,h|0,b|0)|0;h=g+((((b|0)/12|0)+j|0)*12|0)|0;j=c[d>>2]|0;if((j|0)==(h|0)){i=f;return}c[d>>2]=j+(~(((j+ -12+(0-h)|0)>>>0)/12|0)*12|0);i=f;return}function We(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=c[b>>2]|0;h=c[d>>2]|0;d=h;j=d-g>>2;k=g+(j<<2)|0;c[a>>2]=k;a=c[e>>2]|0;if((h|0)==(a|0)){i=f;return}h=g+((a-d>>2)+j<<2)|0;d=b+4|0;b=(c[d>>2]|0)-h|0;rC(k|0,h|0,b|0)|0;h=g+((b>>2)+j<<2)|0;j=c[d>>2]|0;if((j|0)==(h|0)){i=f;return}c[d>>2]=j+(~((j+ -4+(0-h)|0)>>>2)<<2);i=f;return}function Xe(a){a=a|0;hb(a|0)|0;Ta()}function Ye(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+40|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;t=0;na(41,h|0,b|0);l=t;t=0;a:do{if(l&1){m=17}else{b:do{if((a[h]|0)!=0){n=sC(d|0)|0;o=b;p=c[(c[o>>2]|0)+ -12>>2]|0;q=b;c[j>>2]=c[q+(p+24)>>2];if((c[q+(p+4)>>2]&176|0)==32){r=d+n|0}else{r=d}s=q+p|0;u=q+(p+76)|0;p=c[u>>2]|0;c:do{if((p|0)==-1){v=s;t=0;na(42,g|0,v|0);w=t;t=0;if(w&1){m=18;break}t=0;w=Ea(20,g|0,21368)|0;x=t;t=0;do{if(!(x&1)){t=0;y=Ea(c[(c[w>>2]|0)+28>>2]|0,w|0,32)|0;z=t;t=0;if(z&1){break}t=0;ma(230,g|0);z=t;t=0;if(z&1){m=18;break c}z=y<<24>>24;c[u>>2]=z;A=v;B=z;m=14;break c}}while(0);v=Kb(-1,-1,0)|0;t=0;ma(230,g|0);w=t;t=0;if(!(w&1)){C=v;break}v=Kb(-1,-1,0)|0;Xe(v)}else{A=s;B=p;m=14}}while(0);do{if((m|0)==14){p=B&255;s=d+n|0;t=0;u=f;v=j;c[u+0>>2]=c[v+0>>2];Aa(40,k|0,f|0,d|0,r|0,s|0,A|0,p|0);p=t;t=0;if(p&1){m=18;break}if((c[k>>2]|0)!=0){break b}p=c[(c[o>>2]|0)+ -12>>2]|0;t=0;na(43,q+p|0,c[q+(p+16)>>2]|5|0);p=t;t=0;if(p&1){m=18}else{break b}}}while(0);if((m|0)==18){n=Kb(-1,-1,0)|0;C=n}t=0;ma(231,h|0);n=t;t=0;if(!(n&1)){D=C;E=q;F=o;break a}G=Kb(-1,-1,0)|0;H=I;Xe(G)}}while(0);t=0;ma(231,h|0);n=t;t=0;if(n&1){m=17;break}i=e;return b|0}}while(0);if((m|0)==17){m=Kb(-1,-1,0)|0;D=m;E=b;F=b}hb(D|0)|0;t=0;ma(232,E+(c[(c[F>>2]|0)+ -12>>2]|0)|0);F=t;t=0;if(!(F&1)){Ic();i=e;return b|0}b=Kb(-1,-1)|0;t=0;Ma(2);e=t;t=0;if(e&1){G=Kb(-1,-1,0)|0;H=I;Xe(G)}else{Wb(b|0)}return 0}function Ze(a){a=a|0;var b=0,c=0,d=0;b=i;c=YB(40)|0;d=c;t=0;na(44,d|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;_B(c);Wb(a|0)}else{i=b;return d|0}return 0}function _e(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0;e=i;i=i+40|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;t=0;na(41,h|0,b|0);l=t;t=0;a:do{if(l&1){m=25}else{b:do{if((a[h]|0)!=0){n=a[d]|0;o=(n&1)==0;if(o){p=(n&255)>>>1}else{p=c[d+4>>2]|0}n=b;q=c[(c[n>>2]|0)+ -12>>2]|0;r=b;c[j>>2]=c[r+(q+24)>>2];if(o){o=d;if((c[r+(q+4)>>2]&176|0)==32){s=o+p+1|0}else{s=o+1|0}u=s;v=d+1|0;w=d+1|0}else{o=c[d+8>>2]|0;if((c[r+(q+4)>>2]&176|0)==32){x=o+p|0}else{x=o}u=x;v=c[d+8>>2]|0;w=c[d+8>>2]|0}o=r+q|0;y=r+(q+76)|0;q=c[y>>2]|0;c:do{if((q|0)==-1){z=o;t=0;na(42,g|0,z|0);A=t;t=0;if(A&1){m=26;break}t=0;A=Ea(20,g|0,21368)|0;B=t;t=0;do{if(!(B&1)){t=0;C=Ea(c[(c[A>>2]|0)+28>>2]|0,A|0,32)|0;D=t;t=0;if(D&1){break}t=0;ma(230,g|0);D=t;t=0;if(D&1){m=26;break c}D=C<<24>>24;c[y>>2]=D;E=z;F=D;m=22;break c}}while(0);z=Kb(-1,-1,0)|0;t=0;ma(230,g|0);A=t;t=0;if(!(A&1)){G=z;break}z=Kb(-1,-1,0)|0;Xe(z)}else{E=o;F=q;m=22}}while(0);do{if((m|0)==22){q=F&255;o=w+p|0;t=0;y=f;z=j;c[y+0>>2]=c[z+0>>2];Aa(40,k|0,f|0,v|0,u|0,o|0,E|0,q|0);q=t;t=0;if(q&1){m=26;break}if((c[k>>2]|0)!=0){break b}q=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,r+q|0,c[r+(q+16)>>2]|5|0);q=t;t=0;if(q&1){m=26}else{break b}}}while(0);if((m|0)==26){q=Kb(-1,-1,0)|0;G=q}t=0;ma(231,h|0);q=t;t=0;if(!(q&1)){H=G;J=r;K=n;break a}L=Kb(-1,-1,0)|0;M=I;Xe(L)}}while(0);t=0;ma(231,h|0);q=t;t=0;if(q&1){m=25;break}i=e;return b|0}}while(0);if((m|0)==25){m=Kb(-1,-1,0)|0;H=m;J=b;K=b}hb(H|0)|0;t=0;ma(232,J+(c[(c[K>>2]|0)+ -12>>2]|0)|0);K=t;t=0;if(!(K&1)){Ic();i=e;return b|0}b=Kb(-1,-1)|0;t=0;Ma(2);e=t;t=0;if(e&1){L=Kb(-1,-1,0)|0;M=I;Xe(L)}else{Wb(b|0)}return 0}function $e(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a+64|0;e=c[d>>2]|0;if((e|0)==0){f=0;i=b;return f|0}t=0;g=oa(c[(c[a>>2]|0)+24>>2]|0,a|0)|0;h=t;t=0;if(h&1){h=Kb(-1,-1)|0;Rc(e|0)|0;Wb(h|0)}if((Rc(e|0)|0)!=0){f=0;i=b;return f|0}c[d>>2]=0;f=(g|0)==0?a:0;i=b;return f|0}function af(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=k;m=d;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((de[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){kt(l,q,j);if((a[l]&1)==0){r=l+1|0}else{r=c[l+8>>2]|0}t=0;h=sa(c[(c[d>>2]|0)+48>>2]|0,d|0,r|0,q|0)|0;e=t;t=0;if(e&1){e=Kb(-1,-1)|0;mt(l);Wb(e|0)}if((h|0)==(q|0)){mt(l);break}c[m>>2]=0;c[b>>2]=0;mt(l);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((de[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function bf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a+64|0;a:do{if((c[f>>2]|0)==0){switch(d&-3|0){case 1:case 17:{g=72;break};case 8:{g=80;break};case 24:{g=88;break};case 56:{g=96;break};case 9:case 25:{g=104;break};case 52:case 20:{g=112;break};case 5:case 21:{g=120;break};case 12:{g=128;break};case 28:{g=136;break};case 60:{g=144;break};case 13:case 29:{g=152;break};case 48:case 16:{g=64;break};default:{h=0;break a}}if((a|0)==0){h=0;break}j=dd(b|0,g|0)|0;c[f>>2]=j;if((j|0)==0){h=0;break}c[a+88>>2]=d;if((d&2|0)==0){h=a;break}if((Pc(j|0,0,2)|0)==0){h=a;break}Rc(c[f>>2]|0)|0;c[f>>2]=0;h=0}else{h=0}}while(0);i=e;return h|0}function cf(a){a=a|0;var b=0;b=i;df(a);i=b;return}function df(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b;c[e>>2]=168;t=0;oa(91,b|0)|0;f=t;t=0;do{if(f&1){g=Kb(-1,-1,0)|0;hb(g|0)|0;t=0;Ma(2);g=t;t=0;if(!(g&1)){break}g=Kb(-1,-1)|0;c[e>>2]=18632;t=0;ma(230,b+4|0);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}else{Wb(g|0)}}}while(0);if((a[b+96|0]|0)!=0){$B(c[b+32>>2]|0)}if((a[b+97|0]|0)==0){c[e>>2]=18632;j=b+4|0;bz(j);i=d;return}$B(c[b+56>>2]|0);c[e>>2]=18632;j=b+4|0;bz(j);i=d;return}function ef(a){a=a|0;var b=0,c=0;b=i;t=0;ma(233,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;$d[c[(c[b>>2]|0)+24>>2]&127](b)|0;f=ez(d,21432)|0;d=f;c[b+68>>2]=d;g=b+98|0;h=a[g]|0;j=$d[c[(c[f>>2]|0)+28>>2]&127](d)|0;a[g]=j&1;if((h&255|0)==(j&1|0)){i=e;return}h=b+96|0;g=b+8|0;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;g=(a[h]|0)!=0;if(j){j=b+32|0;if(g){$B(c[j>>2]|0)}d=b+97|0;a[h]=a[d]|0;f=b+60|0;c[b+52>>2]=c[f>>2];k=b+56|0;c[j>>2]=c[k>>2];c[f>>2]=0;c[k>>2]=0;a[d]=0;i=e;return}do{if(!g){d=b+32|0;k=c[d>>2]|0;if((k|0)==(b+44|0)){break}f=c[b+52>>2]|0;c[b+60>>2]=f;c[b+56>>2]=k;a[b+97|0]=0;k=ZB(f)|0;c[d>>2]=k;a[h]=1;i=e;return}}while(0);h=c[b+52>>2]|0;c[b+60>>2]=h;g=ZB(h)|0;c[b+56>>2]=g;a[b+97|0]=1;i=e;return}function gf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=b;h=b+96|0;j=b+8|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;if((a[h]|0)!=0){$B(c[b+32>>2]|0)}j=b+97|0;if((a[j]|0)!=0){$B(c[b+56>>2]|0)}k=b+52|0;c[k>>2]=e;do{if(e>>>0>8){l=a[b+98|0]|0;if(l<<24>>24==0|(d|0)==0){m=ZB(e)|0;c[b+32>>2]=m;a[h]=1;n=l;break}else{c[b+32>>2]=d;a[h]=0;n=l;break}}else{c[b+32>>2]=b+44;c[k>>2]=8;a[h]=0;n=a[b+98|0]|0}}while(0);if(!(n<<24>>24==0)){c[b+60>>2]=0;c[b+56>>2]=0;a[j]=0;i=f;return g|0}n=(e|0)<8?8:e;c[b+60>>2]=n;if((d|0)!=0&n>>>0>7){c[b+56>>2]=d;a[j]=0;i=f;return g|0}else{d=ZB(n)|0;c[b+56>>2]=d;a[j]=1;i=f;return g|0}return 0}function hf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=c[b+68>>2]|0;if((h|0)==0){j=xc(4)|0;wB(j);Md(j|0,29328,218)}j=$d[c[(c[h>>2]|0)+24>>2]&127](h)|0;h=b+64|0;do{if((c[h>>2]|0)!=0){k=(j|0)>0;if(!(k|(d|0)==0&(e|0)==0)){break}if(($d[c[(c[b>>2]|0)+24>>2]&127](b)|0)!=0){break}if(!(f>>>0<3)){l=a;c[l>>2]=0;c[l+4>>2]=0;l=a+8|0;c[l>>2]=-1;c[l+4>>2]=-1;i=g;return}l=c[h>>2]|0;if(k){k=GC(j|0,((j|0)<0)<<31>>31|0,d|0,e|0)|0;m=k}else{m=0}if((Pc(l|0,m|0,f|0)|0)==0){l=rb(c[h>>2]|0)|0;k=b+72|0;n=c[k+4>>2]|0;o=a;c[o>>2]=c[k>>2];c[o+4>>2]=n;n=a+8|0;c[n>>2]=l;c[n+4>>2]=((l|0)<0)<<31>>31;i=g;return}else{l=a;c[l>>2]=0;c[l+4>>2]=0;l=a+8|0;c[l>>2]=-1;c[l+4>>2]=-1;i=g;return}}}while(0);b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=g;return}function jf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;e=i;f=b+64|0;do{if((c[f>>2]|0)!=0){if(($d[c[(c[b>>2]|0)+24>>2]&127](b)|0)!=0){break}if((Pc(c[f>>2]|0,c[d+8>>2]|0,0)|0)==0){g=d;h=c[g+4>>2]|0;j=b+72|0;c[j>>2]=c[g>>2];c[j+4>>2]=h;h=a;j=d;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];i=e;return}else{j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;i=e;return}}}while(0);d=a;c[d>>2]=0;c[d+4>>2]=0;d=a+8|0;c[d>>2]=-1;c[d+4>>2]=-1;i=e;return}function kf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+16|0;e=d;f=d+8|0;g=f;h=b+64|0;if((c[h>>2]|0)==0){j=0;i=d;return j|0}k=b+68|0;l=c[k>>2]|0;if((l|0)==0){m=xc(4)|0;wB(m);Md(m|0,29328,218)}m=b+92|0;n=c[m>>2]|0;do{if((n&16|0)==0){if((n&8|0)==0){break}o=b+80|0;p=c[o+4>>2]|0;q=f;c[q>>2]=c[o>>2];c[q+4>>2]=p;do{if((a[b+98|0]|0)==0){p=$d[c[(c[l>>2]|0)+24>>2]&127](l)|0;q=b+36|0;o=c[q>>2]|0;r=(c[b+40>>2]|0)-o|0;if((p|0)>0){s=(ea((c[b+16>>2]|0)-(c[b+12>>2]|0)|0,p)|0)+r|0;t=0;break}p=c[b+12>>2]|0;if((p|0)==(c[b+16>>2]|0)){s=r;t=0;break}u=c[k>>2]|0;v=b+32|0;w=qe[c[(c[u>>2]|0)+32>>2]&15](u,g,c[v>>2]|0,o,p-(c[b+8>>2]|0)|0)|0;s=r-w+(c[q>>2]|0)-(c[v>>2]|0)|0;t=1}else{s=(c[b+16>>2]|0)-(c[b+12>>2]|0)|0;t=0}}while(0);if((Pc(c[h>>2]|0,0-s|0,1)|0)!=0){j=-1;i=d;return j|0}if(t){v=f;q=c[v+4>>2]|0;w=b+72|0;c[w>>2]=c[v>>2];c[w+4>>2]=q}q=c[b+32>>2]|0;c[b+40>>2]=q;c[b+36>>2]=q;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[m>>2]=0}else{do{if((c[b+24>>2]|0)!=(c[b+20>>2]|0)){if((pe[c[(c[b>>2]|0)+52>>2]&63](b,-1)|0)==-1){j=-1}else{break}i=d;return j|0}}while(0);q=b+72|0;w=b+32|0;v=b+52|0;while(1){r=c[k>>2]|0;p=c[w>>2]|0;o=qe[c[(c[r>>2]|0)+20>>2]&15](r,q,p,p+(c[v>>2]|0)|0,e)|0;p=c[w>>2]|0;r=(c[e>>2]|0)-p|0;if((mc(p|0,1,r|0,c[h>>2]|0)|0)!=(r|0)){j=-1;x=23;break}if((o|0)==2){j=-1;x=23;break}else if((o|0)!=1){x=10;break}}if((x|0)==10){if((Hd(c[h>>2]|0)|0)==0){break}else{j=-1}i=d;return j|0}else if((x|0)==23){i=d;return j|0}}}while(0);j=0;i=d;return j|0}function lf(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+16|0;f=e;g=e+8|0;h=b+64|0;if((c[h>>2]|0)==0){j=-1;i=e;return j|0}k=pf(b)|0;l=b+12|0;m=c[l>>2]|0;if((m|0)==0){n=f+1|0;c[b+8>>2]=f;c[l>>2]=n;c[b+16>>2]=n;o=n}else{o=m}m=c[b+16>>2]|0;if(k){p=0}else{k=(m-(c[b+8>>2]|0)|0)/2|0;p=k>>>0>4?4:k}k=b+16|0;do{if((o|0)==(m|0)){n=b+8|0;rC(c[n>>2]|0,o+(0-p)|0,p|0)|0;if((a[b+98|0]|0)!=0){q=c[n>>2]|0;r=nb(q+p|0,1,(c[k>>2]|0)-p-q|0,c[h>>2]|0)|0;if((r|0)==0){s=n;t=-1;break}q=c[n>>2]|0;u=q+p|0;c[l>>2]=u;c[k>>2]=q+(r+p);s=n;t=d[u]|0;break}u=b+32|0;r=b+36|0;q=c[r>>2]|0;v=b+40|0;rC(c[u>>2]|0,q|0,(c[v>>2]|0)-q|0)|0;q=c[u>>2]|0;w=q+((c[v>>2]|0)-(c[r>>2]|0))|0;c[r>>2]=w;if((q|0)==(b+44|0)){x=8}else{x=c[b+52>>2]|0}y=q+x|0;c[v>>2]=y;q=b+60|0;z=(c[q>>2]|0)-p|0;A=y-w|0;y=b+72|0;B=y;C=c[B+4>>2]|0;D=b+80|0;c[D>>2]=c[B>>2];c[D+4>>2]=C;C=nb(w|0,1,(A>>>0<z>>>0?A:z)|0,c[h>>2]|0)|0;if((C|0)==0){s=n;t=-1;break}z=c[b+68>>2]|0;if((z|0)==0){A=xc(4)|0;wB(A);Md(A|0,29328,218)}A=(c[r>>2]|0)+C|0;c[v>>2]=A;C=c[n>>2]|0;if((se[c[(c[z>>2]|0)+16>>2]&15](z,y,c[u>>2]|0,A,r,C+p|0,C+(c[q>>2]|0)|0,g)|0)==3){q=c[u>>2]|0;u=c[v>>2]|0;c[n>>2]=q;c[l>>2]=q;c[k>>2]=u;s=n;t=d[q]|0;break}q=c[g>>2]|0;u=c[n>>2]|0;v=u+p|0;if((q|0)==(v|0)){s=n;t=-1;break}c[n>>2]=u;c[l>>2]=v;c[k>>2]=q;s=n;t=d[v]|0}else{s=b+8|0;t=d[o]|0}}while(0);if((c[s>>2]|0)!=(f|0)){j=t;i=e;return j|0}c[s>>2]=0;c[l>>2]=0;c[k>>2]=0;j=t;i=e;return j|0}function mf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;do{if((c[b+64>>2]|0)==0){f=-1}else{g=b+12|0;h=c[g>>2]|0;if(!((c[b+8>>2]|0)>>>0<h>>>0)){f=-1;break}if((d|0)==-1){c[g>>2]=h+ -1;f=0;break}if((c[b+88>>2]&16|0)==0){j=d&255;k=h+ -1|0;if(j<<24>>24==(a[k]|0)){l=j;m=k}else{f=-1;break}}else{l=d&255;m=h+ -1|0}c[g>>2]=m;a[m]=l;f=d}}while(0);i=e;return f|0}function nf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+24|0;f=e;g=e+8|0;h=e+16|0;j=b+64|0;if((c[j>>2]|0)==0){k=-1;i=e;return k|0}of(b);l=b+20|0;m=c[l>>2]|0;n=b+28|0;o=c[n>>2]|0;p=(d|0)==-1;q=b+24|0;r=c[q>>2]|0;if(p){s=r;t=m}else{if((r|0)==0){c[q>>2]=f;c[l>>2]=f;c[n>>2]=f+1;u=f}else{u=r}a[u]=d;u=(c[q>>2]|0)+1|0;c[q>>2]=u;s=u;t=c[l>>2]|0}u=b+24|0;if((s|0)!=(t|0)){a:do{if((a[b+98|0]|0)==0){q=b+32|0;r=c[q>>2]|0;c[g>>2]=r;f=b+68|0;v=c[f>>2]|0;if((v|0)==0){w=xc(4)|0;x=w;wB(x);Md(w|0,29328,218)}y=b+72|0;z=b+52|0;A=r;r=s;B=t;C=v;while(1){v=se[c[(c[C>>2]|0)+12>>2]&15](C,y,B,r,h,A,A+(c[z>>2]|0)|0,g)|0;D=c[l>>2]|0;if((c[h>>2]|0)==(D|0)){k=-1;E=22;break}if((v|0)==3){E=14;break}if(!(v>>>0<2)){k=-1;E=22;break}F=c[q>>2]|0;G=(c[g>>2]|0)-F|0;if((mc(F|0,1,G|0,c[j>>2]|0)|0)!=(G|0)){k=-1;E=22;break}if((v|0)!=1){break a}v=c[h>>2]|0;G=c[u>>2]|0;c[l>>2]=v;c[n>>2]=G;F=v+(G-v)|0;c[u>>2]=F;G=c[f>>2]|0;if((G|0)==0){E=11;break}A=c[q>>2]|0;r=F;B=v;C=G}if((E|0)==11){w=xc(4)|0;x=w;wB(x);Md(w|0,29328,218)}else if((E|0)==14){C=(c[u>>2]|0)-D|0;if((mc(D|0,1,C|0,c[j>>2]|0)|0)==(C|0)){break}else{k=-1}i=e;return k|0}else if((E|0)==22){i=e;return k|0}}else{C=s-t|0;if((mc(t|0,1,C|0,c[j>>2]|0)|0)==(C|0)){break}else{k=-1}i=e;return k|0}}while(0);c[u>>2]=m;c[l>>2]=m;c[n>>2]=o}k=p?0:d;i=e;return k|0}function of(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+92|0;if((c[e>>2]&16|0)!=0){i=d;return}c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;f=c[b+52>>2]|0;do{if(f>>>0>8){if((a[b+98|0]|0)==0){g=c[b+56>>2]|0;h=g+((c[b+60>>2]|0)+ -1)|0;c[b+24>>2]=g;c[b+20>>2]=g;c[b+28>>2]=h;break}else{h=c[b+32>>2]|0;c[b+24>>2]=h;c[b+20>>2]=h;c[b+28>>2]=h+(f+ -1);break}}else{c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0}}while(0);c[e>>2]=16;i=d;return}function pf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+92|0;if((c[e>>2]&8|0)!=0){f=0;i=d;return f|0}c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;if((a[b+98|0]|0)==0){g=c[b+56>>2]|0;h=g+(c[b+60>>2]|0)|0;c[b+8>>2]=g;c[b+12>>2]=h;c[b+16>>2]=h}else{h=c[b+32>>2]|0;g=h+(c[b+52>>2]|0)|0;c[b+8>>2]=h;c[b+12>>2]=g;c[b+16>>2]=g}c[e>>2]=8;f=1;i=d;return f|0}function qf(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0;e=i;i=i+16|0;f=e;g=e+8|0;Tt(d);h=d;c[h>>2]=168;c[d+32>>2]=0;c[d+36>>2]=0;c[d+40>>2]=0;j=d+68|0;k=d+98|0;l=d+4|0;m=d+52|0;n=m+0|0;o=n+44|0;do{c[n>>2]=0;n=n+4|0}while((n|0)<(o|0));b[m+44>>1]=0;a[m+46|0]=0;az(f,l);t=0;m=Ea(21,f|0,21432)|0;n=t;t=0;if(n&1){n=Kb(-1,-1)|0;Yb(n|0)}t=0;ma(230,f|0);f=t;t=0;a:do{if(f&1){p=8}else{do{if(m){az(g,l);t=0;n=Ea(20,g|0,21432)|0;o=t;t=0;if(o&1){o=Kb(-1,-1)|0;q=I;t=0;ma(230,g|0);r=t;t=0;if(!(r&1)){s=q;u=o;break a}v=Kb(-1,-1,0)|0;w=I;Xe(v)}else{c[j>>2]=n;t=0;ma(230,g|0);n=t;t=0;if(n&1){p=8;break a}n=c[j>>2]|0;o=($d[c[(c[n>>2]|0)+28>>2]&127](n)|0)&1;a[k]=o;break}}}while(0);t=0;sa(c[(c[d>>2]|0)+12>>2]|0,d|0,0,4096)|0;o=t;t=0;if(o&1){p=8;break}i=e;return}}while(0);if((p|0)==8){p=Kb(-1,-1)|0;s=I;u=p}c[h>>2]=18632;t=0;ma(230,l|0);l=t;t=0;if(l&1){v=Kb(-1,-1,0)|0;w=I;Xe(v)}else{Wb(u|0)}}function rf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=(c[a+4>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823){Uy(0)}j=(c[a+8>>2]|0)-f|0;if(j>>2>>>0<536870911){f=j>>1;k=f>>>0<h>>>0?h:f}else{k=1073741823}uf(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;if((k|0)!=0){c[k>>2]=c[b>>2]}c[g>>2]=k+4;sf(a,e);tf(e);i=d;return}function sf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=b+4|0;j=(c[g>>2]|0)-f|0;k=(c[h>>2]|0)+(0-(j>>2)<<2)|0;c[h>>2]=k;qC(k|0,f|0,j|0)|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=b+8|0;e=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=e;e=a+8|0;a=b+12|0;j=c[e>>2]|0;c[e>>2]=c[a>>2];c[a>>2]=j;c[b>>2]=c[h>>2];i=d;return}function tf(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function uf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b<<2)|0}c[a>>2]=h;e=h+(d<<2)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b<<2);i=f;return}function vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;h=(c[a+4>>2]|0)-f>>2;j=h+1|0;if(j>>>0>1073741823){Uy(0)}k=(c[a+8>>2]|0)-f|0;if(k>>2>>>0<536870911){f=k>>1;l=f>>>0<j>>>0?j:f}else{l=1073741823}yf(e,l,h,a+8|0);h=e+8|0;l=c[h>>2]|0;if((l|0)!=0){g[l>>2]=+g[b>>2]}c[h>>2]=l+4;wf(a,e);xf(e);i=d;return}function wf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=b+4|0;j=(c[g>>2]|0)-f|0;k=(c[h>>2]|0)+(0-(j>>2)<<2)|0;c[h>>2]=k;qC(k|0,f|0,j|0)|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=b+8|0;e=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=e;e=a+8|0;a=b+12|0;j=c[e>>2]|0;c[e>>2]=c[a>>2];c[a>>2]=j;c[b>>2]=c[h>>2];i=d;return}function xf(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function yf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b<<2)|0}c[a>>2]=h;e=h+(d<<2)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b<<2);i=f;return}function zf(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;c[b>>2]=c[e>>2];if((b|0)==(e|0)){g=b+40|0;h=e+40|0;j=h;k=g;l=d[j]|d[j+1|0]<<8;a[k]=l;a[k+1|0]=l>>8;i=f;return b|0}Af(b+4|0,c[e+4>>2]|0,c[e+8>>2]|0);Af(b+16|0,c[e+16>>2]|0,c[e+20>>2]|0);Af(b+28|0,c[e+28>>2]|0,c[e+32>>2]|0);g=b+40|0;h=e+40|0;j=h;k=g;l=d[j]|d[j+1|0]<<8;a[k]=l;a[k+1|0]=l>>8;i=f;return b|0}function Af(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=b;g=d-f>>2;h=a+8|0;j=a;k=c[j>>2]|0;l=k;if(g>>>0>(c[h>>2]|0)-l>>2>>>0){Cf(a);if(g>>>0>1073741823){Uy(0)}m=(c[h>>2]|0)-(c[j>>2]|0)|0;if(m>>2>>>0<536870911){j=m>>1;n=j>>>0<g>>>0?g:j}else{n=1073741823}Df(a,n);Bf(a,b,d);i=e;return}n=a+4|0;j=(c[n>>2]|0)-l|0;l=j>>2;if(g>>>0>l>>>0){rC(k|0,b|0,j|0)|0;Bf(a,b+(l<<2)|0,d);i=e;return}l=d-f|0;rC(k|0,b|0,l|0)|0;b=k+(l>>2<<2)|0;l=c[n>>2]|0;if((l|0)==(b|0)){i=e;return}c[n>>2]=l+(~((l+ -4+(0-b)|0)>>>2)<<2);i=e;return}function Bf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((b|0)==(d|0)){i=e;return}f=a+4|0;a=c[f>>2]|0;g=((d+ -4+(0-b)|0)>>>2)+1|0;h=b;b=a;while(1){if((b|0)!=0){c[b>>2]=c[h>>2]}j=h+4|0;if((j|0)==(d|0)){break}else{h=j;b=b+4|0}}c[f>>2]=a+(g<<2);i=e;return}function Cf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;g=c[f>>2]|0;if((g|0)!=(e|0)){c[f>>2]=g+(~((g+ -4+(0-e)|0)>>>2)<<2)}_B(e);c[a+8>>2]=0;c[f>>2]=0;c[d>>2]=0;i=b;return}function Df(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if(b>>>0>1073741823){Uy(0)}else{e=YB(b<<2)|0;c[a+4>>2]=e;c[a>>2]=e;c[a+8>>2]=e+(b<<2);i=d;return}}function Ef(a){a=a|0;var b=0;b=i;Jf(a+28|0);Jf(a+16|0);Jf(a+4|0);i=b;return}function Ff(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}_B(d);i=b;return}function Gf(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~(((a+ -12+(0-d)|0)>>>0)/12|0)*12|0)}_B(d);i=b;return}function Hf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;while(1){a=c[f>>2]|0;if((a|0)==(e|0)){break}g=a+ -44|0;c[f>>2]=g;t=0;ma(229,g|0);g=t;t=0;if(g&1){h=5;break}}if((h|0)==5){h=Kb(-1,-1)|0;Yb(h|0)}_B(c[d>>2]|0);i=b;return}function If(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~(((a+ -12+(0-d)|0)>>>0)/12|0)*12|0)}_B(d);i=b;return}function Jf(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}_B(d);i=b;return}function Kf(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+216|0;if((c[d>>2]|0)!=0){Ye(16632,288)|0}if((c[a+220>>2]|0)==1){e=Ze(2)|0;c[d>>2]=e;tr(e);wr(c[d>>2]|0,96,a,25,376,5121,35044);xr(c[d>>2]|0,0,3,5126,12,0,0);e=c[d>>2]|0;c[e+4>>2]=25;ur(e);i=b;return}else{e=Ze(4)|0;c[d>>2]=e;tr(e);wr(c[d>>2]|0,96,a,36,336,5121,35044);xr(c[d>>2]|0,0,3,5126,12,0,0);a=c[d>>2]|0;c[a+4>>2]=36;ur(a);i=b;return}}function Lf(b,d,e,f,h,j,l){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=i;n=b+16|0;o=b+0|0;p=o+16|0;do{a[o]=0;o=o+1|0}while((o|0)<(p|0));g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+20|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+24|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+28|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+32|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+36|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+40|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+44|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+48|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+52|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+56|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+60|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+64|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+68|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+72|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+76|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+80|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+84|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+88|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+92|0;g[k>>2]=0.0;a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+120|0;q=b+136|0;o=n+0|0;p=o+16|0;do{a[o]=0;o=o+1|0}while((o|0)<(p|0));g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+140|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+144|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+148|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+152|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+156|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+160|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+164|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+168|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+172|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+176|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+180|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+184|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+188|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+192|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+196|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+200|0;g[k>>2]=0.0;a[q]=a[k];a[q+1|0]=a[k+1|0];a[q+2|0]=a[k+2|0];a[q+3|0]=a[k+3|0];q=b+96|0;g[q>>2]=+g[d>>2];o=b+100|0;g[o>>2]=+g[e>>2];p=b+104|0;g[p>>2]=+g[f>>2];r=b+108|0;g[r>>2]=+g[h>>2];s=b+112|0;g[s>>2]=+g[j>>2];t=b+116|0;g[t>>2]=+g[l>>2];_q(n,0.0,0.0,0.0);n=b;g[k>>2]=+g[d>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+4|0;g[k>>2]=+g[h>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+8|0;g[k>>2]=+g[j>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+12|0;g[k>>2]=+g[e>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+16|0;g[k>>2]=+g[h>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+20|0;g[k>>2]=+g[j>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+24|0;g[k>>2]=+g[e>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+28|0;g[k>>2]=+g[h>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+32|0;g[k>>2]=+g[l>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+36|0;g[k>>2]=+g[d>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+40|0;g[k>>2]=+g[h>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+44|0;g[k>>2]=+g[l>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+48|0;g[k>>2]=+g[d>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+52|0;g[k>>2]=+g[f>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+56|0;g[k>>2]=+g[j>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+60|0;g[k>>2]=+g[e>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+64|0;g[k>>2]=+g[f>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+68|0;g[k>>2]=+g[j>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+72|0;g[k>>2]=+g[e>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+76|0;g[k>>2]=+g[f>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+80|0;g[k>>2]=+g[l>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+84|0;g[k>>2]=+g[d>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+88|0;g[k>>2]=+g[f>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];n=b+92|0;g[k>>2]=+g[l>>2];a[n]=a[k];a[n+1|0]=a[k+1|0];a[n+2|0]=a[k+2|0];a[n+3|0]=a[k+3|0];c[b+220>>2]=1;g[b+204>>2]=+g[o>>2]- +g[q>>2];g[b+208>>2]=+g[r>>2]- +g[p>>2];g[b+212>>2]=+g[t>>2]- +g[s>>2];c[b+216>>2]=0;Kf(b);i=m;return}function Mf(a){a=a|0;i=i;return}function Nf(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if(b>>>0>357913941){Uy(0)}else{e=YB(b*12|0)|0;c[a+4>>2]=e;c[a>>2]=e;c[a+8>>2]=e+(b*12|0);i=d;return}}function Of(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0;e=i;i=i+24|0;f=e;h=c[b>>2]|0;j=((c[b+4>>2]|0)-h|0)/12|0;l=j+1|0;if(l>>>0>357913941){Uy(0)}m=((c[b+8>>2]|0)-h|0)/12|0;if(m>>>0<178956970){h=m<<1;n=h>>>0<l>>>0?l:h}else{n=357913941}Rf(f,n,j,b+8|0);j=f+8|0;n=c[j>>2]|0;if((n|0)==0){o=n+12|0;c[j>>2]=o;Pf(b,f);Qf(f);i=e;return}h=n;l=d;a[k]=a[l];a[k+1|0]=a[l+1|0];a[k+2|0]=a[l+2|0];a[k+3|0]=a[l+3|0];g[k>>2]=+g[k>>2];a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=n+4|0;l=d+4|0;a[k]=a[l];a[k+1|0]=a[l+1|0];a[k+2|0]=a[l+2|0];a[k+3|0]=a[l+3|0];g[k>>2]=+g[k>>2];a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=n+8|0;l=d+8|0;a[k]=a[l];a[k+1|0]=a[l+1|0];a[k+2|0]=a[l+2|0];a[k+3|0]=a[l+3|0];g[k>>2]=+g[k>>2];a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];o=n+12|0;c[j>>2]=o;Pf(b,f);Qf(f);i=e;return}function Pf(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;f=b;h=c[f>>2]|0;j=b+4|0;l=c[j>>2]|0;m=d+4|0;if((l|0)==(h|0)){n=c[m>>2]|0;o=h;c[f>>2]=n;c[m>>2]=o;p=d+8|0;q=c[j>>2]|0;r=c[p>>2]|0;c[j>>2]=r;c[p>>2]=q;s=b+8|0;t=d+12|0;u=c[s>>2]|0;v=c[t>>2]|0;c[s>>2]=v;c[t>>2]=u;w=c[m>>2]|0;x=d;c[x>>2]=w;i=e;return}y=c[m>>2]|0;z=((l+ -12+(0-h)|0)>>>0)/12|0;A=l;l=y;while(1){B=A+ -12|0;C=l+ -12|0;D=B;a[k]=a[D];a[k+1|0]=a[D+1|0];a[k+2|0]=a[D+2|0];a[k+3|0]=a[D+3|0];g[k>>2]=+g[k>>2];a[C]=a[k];a[C+1|0]=a[k+1|0];a[C+2|0]=a[k+2|0];a[C+3|0]=a[k+3|0];C=l+ -8|0;D=A+ -8|0;a[k]=a[D];a[k+1|0]=a[D+1|0];a[k+2|0]=a[D+2|0];a[k+3|0]=a[D+3|0];g[k>>2]=+g[k>>2];a[C]=a[k];a[C+1|0]=a[k+1|0];a[C+2|0]=a[k+2|0];a[C+3|0]=a[k+3|0];C=l+ -4|0;D=A+ -4|0;a[k]=a[D];a[k+1|0]=a[D+1|0];a[k+2|0]=a[D+2|0];a[k+3|0]=a[D+3|0];g[k>>2]=+g[k>>2];a[C]=a[k];a[C+1|0]=a[k+1|0];a[C+2|0]=a[k+2|0];a[C+3|0]=a[k+3|0];if((B|0)==(h|0)){break}else{l=l+ -12|0;A=B}}A=y+(~z*12|0)|0;c[m>>2]=A;n=A;o=c[f>>2]|0;c[f>>2]=n;c[m>>2]=o;p=d+8|0;q=c[j>>2]|0;r=c[p>>2]|0;c[j>>2]=r;c[p>>2]=q;s=b+8|0;t=d+12|0;u=c[s>>2]|0;v=c[t>>2]|0;c[s>>2]=v;c[t>>2]=u;w=c[m>>2]|0;x=d;c[x>>2]=w;i=e;return}function Qf(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~(((f+ -12+(0-d)|0)>>>0)/12|0)*12|0)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function Rf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b*12|0)|0}c[a>>2]=h;e=h+(d*12|0)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b*12|0);i=f;return}function Sf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0,m=0,n=0;f=i;if((d|0)==(e|0)){i=f;return}h=b+4|0;b=c[h>>2]|0;j=(((e+ -12+(0-d)|0)>>>0)/12|0)+1|0;l=d;d=b;while(1){if((d|0)!=0){m=d;n=l;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];g[k>>2]=+g[k>>2];a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];m=d+4|0;n=l+4|0;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];g[k>>2]=+g[k>>2];a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0];m=d+8|0;n=l+8|0;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];g[k>>2]=+g[k>>2];a[m]=a[k];a[m+1|0]=a[k+1|0];a[m+2|0]=a[k+2|0];a[m+3|0]=a[k+3|0]}m=l+12|0;if((m|0)==(e|0)){break}else{l=m;d=d+12|0}}c[h>>2]=b+(j*12|0);i=f;return}function Tf(a){a=a|0;var b=0,c=0,d=0,e=0;b=i;i=i+48|0;c=b;d=b+16|0;e=b+32|0;rr(a+48|0,1.0)|0;rr(a+64|0,0.0)|0;kr(a+80|0,0.0,1.0,0.0,1.0);g[a+108>>2]=9999999747378752.0e-20;g[a+112>>2]=350.0;g[a+104>>2]=1.25;g[a+116>>2]=45.0;Uf(a,45.0,1.25,9999999747378752.0e-20,350.0);g[c>>2]=5.0;g[c+4>>2]=5.0;g[c+8>>2]=5.0;g[d>>2]=0.0;g[d+4>>2]=0.0;g[d+8>>2]=0.0;g[e>>2]=0.0;g[e+4>>2]=1.0;g[e+8>>2]=0.0;Vf(a,c,d,e);i=b;return}function Uf(a,b,d,e,f){a=a|0;b=+b;d=+d;e=+e;f=+f;var h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,u=0,v=0,w=0,x=0;h=i;i=i+16|0;j=h;k=h+8|0;l=b>180.0?180.0:b;a:do{if(!(f>e)){m=Ye(Ye(Ye(Ye(Ku(Ye(Ye(Ye(16720,408)|0,432)|0,448)|0,138)|0,480)|0,504)|0,512)|0,528)|0;Ot(k,m+(c[(c[m>>2]|0)+ -12>>2]|0)|0);t=0;n=Ea(20,k|0,21368)|0;o=t;t=0;do{if(!(o&1)){t=0;p=Ea(c[(c[n>>2]|0)+28>>2]|0,n|0,10)|0;q=t;t=0;if(q&1){break}bz(k);Nu(m,p)|0;xu(m)|0;break a}}while(0);m=Kb(-1,-1)|0;t=0;ma(230,k|0);n=t;t=0;if(n&1){n=Kb(-1,-1,0)|0;Xe(n)}else{Wb(m|0)}}}while(0);if(e>9999999747378752.0e-21){r=e<9999999747378752.0e-21;s=r?9999999747378752.0e-21:e;u=a+116|0;g[u>>2]=l;v=a+104|0;g[v>>2]=d;w=a+108|0;g[w>>2]=s;x=a+112|0;g[x>>2]=f;_f(a);i=h;return}k=Ye(Ye(Ye(Ye(Ku(Ye(Ye(Ye(16720,408)|0,536)|0,448)|0,139)|0,480)|0,504)|0,512)|0,528)|0;Ot(j,k+(c[(c[k>>2]|0)+ -12>>2]|0)|0);t=0;m=Ea(20,j|0,21368)|0;n=t;t=0;do{if(!(n&1)){t=0;o=Ea(c[(c[m>>2]|0)+28>>2]|0,m|0,10)|0;p=t;t=0;if(p&1){break}bz(j);Nu(k,o)|0;xu(k)|0;r=e<9999999747378752.0e-21;s=r?9999999747378752.0e-21:e;u=a+116|0;g[u>>2]=l;v=a+104|0;g[v>>2]=d;w=a+108|0;g[w>>2]=s;x=a+112|0;g[x>>2]=f;_f(a);i=h;return}}while(0);h=Kb(-1,-1)|0;t=0;ma(230,j|0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{Wb(h|0)}}function Vf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+48|0;f=e;g=e+16|0;h=e+32|0;j=a+48|0;qr(j,b)|0;b=a+64|0;qr(b,c)|0;c=a+80|0;qr(c,d)|0;d=a+32|0;nr(f,j,b);pr(d,f)|0;f=a;mr(g,c,d);pr(f,g)|0;g=a+16|0;mr(h,d,f);pr(g,h)|0;lr(f)|0;lr(g)|0;lr(d)|0;Wf(a);i=e;return}function Wf(b){b=b|0;var c=0,d=0,e=0,f=0,h=0.0;c=i;d=b;a[k]=a[d];a[k+1|0]=a[d+1|0];a[k+2|0]=a[d+2|0];a[k+3|0]=a[d+3|0];g[b+120>>2]=+g[k>>2];d=b+16|0;e=d;a[k]=a[e];a[k+1|0]=a[e+1|0];a[k+2|0]=a[e+2|0];a[k+3|0]=a[e+3|0];g[b+124>>2]=+g[k>>2];e=b+32|0;f=e;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+128>>2]=+g[k>>2];g[b+132>>2]=0.0;f=b+4|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+136>>2]=+g[k>>2];f=b+20|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+140>>2]=+g[k>>2];f=b+36|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+144>>2]=+g[k>>2];g[b+148>>2]=0.0;f=b+8|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+152>>2]=+g[k>>2];f=b+24|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+156>>2]=+g[k>>2];f=b+40|0;a[k]=a[f];a[k+1|0]=a[f+1|0];a[k+2|0]=a[f+2|0];a[k+3|0]=a[f+3|0];g[b+160>>2]=+g[k>>2];g[b+164>>2]=0.0;f=b+48|0;h=-+jr(f,b);g[b+168>>2]=h;h=-+jr(f,d);g[b+172>>2]=h;h=-+jr(f,e);g[b+176>>2]=h;g[b+180>>2]=1.0;Yf(b);i=c;return}function Xf(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0;f=i;h=b;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+4|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+8|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+12|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+16|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+20|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+24|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+28|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+32|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+36|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+40|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+44|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+48|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+52|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+56|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+60|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+64|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+68|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+72|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+76|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+80|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+84|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+88|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+92|0;g[k>>2]=1.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];Zi(b+120|0);h=b+184|0;j=b+352|0;l=h;while(1){t=0;ma(234,l|0);m=t;t=0;if(m&1){n=8;break}m=l+28|0;if((m|0)==(j|0)){break}else{l=m}}if((n|0)==8){m=Kb(-1,-1)|0;o=I;if((h|0)==(l|0)){p=o;q=m;Wb(q|0)}else{r=l}while(1){l=r+ -28|0;t=0;s=t;t=0;if(s&1){break}if((l|0)==(h|0)){p=o;q=m;n=14;break}else{r=l}}if((n|0)==14){Wb(q|0)}r=Kb(-1,-1,0)|0;u=r;Xe(u)}r=b+448|0;m=b+352|0;o=m+96|0;do{a[m]=0;m=m+1|0}while((m|0)<(o|0));t=0;ma(235,r|0);r=t;t=0;do{if(!(r&1)){t=0;ma(236,b|0);m=t;t=0;if(m&1){break}t=0;Oa(13,b|0,c|0,d|0,e|0);m=t;t=0;if(m&1){break}i=f;return}}while(0);f=Kb(-1,-1)|0;e=I;d=j;while(1){j=d+ -28|0;t=0;c=t;t=0;if(c&1){break}if((j|0)==(h|0)){p=e;q=f;n=14;break}else{d=j}}if((n|0)==14){Wb(q|0)}q=Kb(-1,-1,0)|0;u=q;Xe(u)}function Yf(b){b=b|0;var c=0,d=0,e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0.0,oa=0,pa=0,qa=0.0;c=i;i=i+864|0;d=c;e=c+16|0;f=c+32|0;h=c+48|0;j=c+64|0;l=c+80|0;m=c+96|0;n=c+112|0;o=c+128|0;p=c+144|0;q=c+160|0;r=c+176|0;s=c+192|0;t=c+208|0;u=c+224|0;v=c+240|0;w=c+256|0;x=c+272|0;y=c+288|0;z=c+304|0;A=c+320|0;B=c+336|0;C=c+352|0;D=c+368|0;E=c+384|0;F=c+400|0;G=c+416|0;H=c+432|0;I=c+448|0;J=c+464|0;K=c+480|0;L=c+496|0;M=c+512|0;N=c+528|0;O=c+544|0;P=c+560|0;Q=c+576|0;R=c+592|0;S=c+608|0;T=c+624|0;U=c+640|0;V=c+656|0;W=c+672|0;X=c+688|0;Z=c+704|0;_=c+720|0;$=c+736|0;aa=c+752|0;ba=c+768|0;ca=c+784|0;da=c+800|0;ea=c+816|0;fa=c+832|0;ga=c+848|0;ha=+Y(+(+Yq(+g[b+116>>2])*.5));ia=+g[b+108>>2];ja=ia*ha;ka=+g[b+104>>2];la=ja*ka;ma=b+112|0;na=ha*+g[ma>>2];ha=ka*na;oa=b+48|0;pa=b+32|0;or(e,pa,ia);nr(f,oa,e);ia=+g[f+4>>2];ka=+g[f+8>>2];g[d>>2]=+g[f>>2];g[d+4>>2]=ia;g[d+8>>2]=ka;or(j,pa,+g[ma>>2]);nr(l,oa,j);ka=+g[l+4>>2];ia=+g[l+8>>2];g[h>>2]=+g[l>>2];g[h+4>>2]=ka;g[h+8>>2]=ia;l=b+352|0;j=b+16|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];ia=+g[k>>2];oa=b+20|0;a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];ma=b+24|0;a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[o>>2]=ia;g[o+4>>2]=ka;g[o+8>>2]=qa;dr(n,o,ja);br(p,d,n);n=b;a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];o=b+4|0;a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];pa=b+8|0;a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];ia=+g[k>>2];g[r>>2]=qa;g[r+4>>2]=ka;g[r+8>>2]=ia;dr(q,r,la);cr(m,p,q);er(l,m)|0;m=b+364|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];ia=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[u>>2]=ia;g[u+4>>2]=ka;g[u+8>>2]=qa;dr(t,u,ja);br(v,d,t);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];ia=+g[k>>2];g[x>>2]=qa;g[x+4>>2]=ka;g[x+8>>2]=ia;dr(w,x,la);br(s,v,w);er(m,s)|0;s=b+376|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];ia=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[A>>2]=ia;g[A+4>>2]=ka;g[A+8>>2]=qa;dr(z,A,ja);cr(B,d,z);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];ia=+g[k>>2];g[D>>2]=qa;g[D+4>>2]=ka;g[D+8>>2]=ia;dr(C,D,la);cr(y,B,C);er(s,y)|0;y=b+388|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];ia=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[G>>2]=ia;g[G+4>>2]=ka;g[G+8>>2]=qa;dr(F,G,ja);cr(H,d,F);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];ja=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];qa=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];ka=+g[k>>2];g[J>>2]=ja;g[J+4>>2]=qa;g[J+8>>2]=ka;dr(I,J,la);br(E,H,I);er(y,E)|0;E=b+400|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];la=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[M>>2]=la;g[M+4>>2]=ka;g[M+8>>2]=qa;dr(L,M,na);br(N,h,L);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];la=+g[k>>2];g[P>>2]=qa;g[P+4>>2]=ka;g[P+8>>2]=la;dr(O,P,ha);cr(K,N,O);er(E,K)|0;K=b+412|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];la=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[S>>2]=la;g[S+4>>2]=ka;g[S+8>>2]=qa;dr(R,S,na);br(T,h,R);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];la=+g[k>>2];g[V>>2]=qa;g[V+4>>2]=ka;g[V+8>>2]=la;dr(U,V,ha);br(Q,T,U);er(K,Q)|0;Q=b+424|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];la=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[Z>>2]=la;g[Z+4>>2]=ka;g[Z+8>>2]=qa;dr(X,Z,na);cr(_,h,X);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];qa=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];ka=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];la=+g[k>>2];g[aa>>2]=qa;g[aa+4>>2]=ka;g[aa+8>>2]=la;dr($,aa,ha);cr(W,_,$);er(Q,W)|0;W=b+436|0;a[k]=a[j];a[k+1|0]=a[j+1|0];a[k+2|0]=a[j+2|0];a[k+3|0]=a[j+3|0];la=+g[k>>2];a[k]=a[oa];a[k+1|0]=a[oa+1|0];a[k+2|0]=a[oa+2|0];a[k+3|0]=a[oa+3|0];ka=+g[k>>2];a[k]=a[ma];a[k+1|0]=a[ma+1|0];a[k+2|0]=a[ma+2|0];a[k+3|0]=a[ma+3|0];qa=+g[k>>2];g[da>>2]=la;g[da+4>>2]=ka;g[da+8>>2]=qa;dr(ca,da,na);cr(ea,h,ca);a[k]=a[n];a[k+1|0]=a[n+1|0];a[k+2|0]=a[n+2|0];a[k+3|0]=a[n+3|0];na=+g[k>>2];a[k]=a[o];a[k+1|0]=a[o+1|0];a[k+2|0]=a[o+2|0];a[k+3|0]=a[o+3|0];qa=+g[k>>2];a[k]=a[pa];a[k+1|0]=a[pa+1|0];a[k+2|0]=a[pa+2|0];a[k+3|0]=a[pa+3|0];ka=+g[k>>2];g[ga>>2]=na;g[ga+4>>2]=qa;g[ga+8>>2]=ka;dr(fa,ga,ha);br(ba,ea,fa);er(W,ba)|0;kn(b+184|0,m,l,E);kn(b+212|0,s,y,W);kn(b+240|0,l,s,Q);kn(b+268|0,y,m,W);kn(b+296|0,l,m,y);kn(b+324|0,K,E,Q);i=c;return}function Zf(a){a=a|0;var b=0,c=0.0,d=0,e=0.0,f=0.0;b=i;c=1.0/+Y(+(+Yq(+g[a+116>>2])*.5));d=a+448|0;bj(d)|0;g[d>>2]=c/+g[a+104>>2];g[a+468>>2]=c;c=+g[a+112>>2];e=+g[a+108>>2];f=e-c;g[a+488>>2]=(c+e)/f;g[a+504>>2]=c*2.0*e/f;g[a+492>>2]=-1.0;g[a+508>>2]=1.0;i=b;return}function _f(a){a=a|0;var b=0;b=i;aj(a+448|0)|0;Zf(a);i=b;return}function $f(){var a=0,b=0,d=0,e=0,f=0;a=i;b=c[140]|0;if((b|0)!=0){d=b;i=a;return d|0}b=YB(52)|0;e=b;t=0;ma(237,e|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;_B(b);Wb(f|0)}c[140]=e;d=e;i=a;return d|0}function ag(a){a=a|0;var b=0,d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;g[a>>2]=1.0;g[a+16>>2]=1.0;g[a+32>>2]=1.0;i=b;return}function bg(a,b){a=a|0;b=b|0;g[a>>2]=+g[b>>2];g[a+4>>2]=+g[b+4>>2];g[a+8>>2]=+g[b+8>>2];g[a+12>>2]=+g[b+16>>2];g[a+16>>2]=+g[b+20>>2];g[a+20>>2]=+g[b+24>>2];g[a+24>>2]=+g[b+32>>2];g[a+28>>2]=+g[b+36>>2];g[a+32>>2]=+g[b+40>>2];i=i;return}function cg(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+0|0;a=b+0|0;b=e+36|0;do{c[e>>2]=c[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0));i=d;return}function dg(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0,h=0.0;b=+g[a+16>>2];c=+g[a+32>>2];d=+g[a+28>>2];e=+g[a+20>>2];f=+g[a+12>>2];h=+g[a+24>>2];i=i;return+(+g[a+8>>2]*(d*f-b*h)+(+g[a>>2]*(b*c-d*e)- +g[a+4>>2]*(c*f-e*h)))}function eg(a){a=a|0;var b=0,c=0.0,d=0.0,e=0,f=0,h=0.0,j=0,k=0.0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0,u=0.0,v=0,w=0.0;b=i;c=+dg(a);if(c==0.0){Ye(16720,568)|0;i=b;return}else{d=1.0/c;e=a+16|0;c=+g[e>>2];f=a+32|0;h=+g[f>>2];j=a+28|0;k=+g[j>>2];l=a+20|0;m=+g[l>>2];n=a+12|0;o=+g[n>>2];p=a+24|0;q=+g[p>>2];r=a+4|0;s=+g[r>>2];t=a+8|0;u=+g[t>>2];v=a;w=+g[v>>2];g[v>>2]=d*(c*h-k*m);g[r>>2]=-(d*(h*o-m*q));g[t>>2]=d*(k*o-c*q);g[n>>2]=-(d*(h*s-k*u));g[e>>2]=d*(h*w-q*u);g[l>>2]=-(d*(k*w-q*s));g[p>>2]=d*(m*s-c*u);g[j>>2]=-(d*(m*w-o*u));g[f>>2]=d*(c*w-o*s);i=b;return}}function fg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+32|0;f=e;g=e+16|0;h=d+4|0;j=d;if((c[h>>2]|0)==(c[j>>2]|0)){it(b,d+40|0);i=e;return}k=c[d+28>>2]|0;l=c[d+32>>2]|0;do{if((k|0)<(l|0)){if((a[d+52|0]&2)==0){break}c[f>>2]=720;c[f+4>>2]=k;c[f+8>>2]=l;t=0;ma(238,f|0);m=t;t=0;m=Kb(-1,-1)|0;n=I;ub(f|0);o=m;p=n;Wb(o|0)}}while(0);f=g;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;l=ig(d)|0;t=0;na(45,g|0,l|0);l=t;t=0;a:do{if(l&1){q=24}else{k=d+40|0;n=a[k]|0;if((n&1)==0){r=k+1|0;s=(n&255)>>>1}else{r=c[d+48>>2]|0;s=c[d+44>>2]|0}t=0;sa(26,g|0,r|0,s|0)|0;n=t;t=0;if(n&1){q=24;break}n=c[j>>2]|0;b:do{if((c[h>>2]|0)!=(n|0)){k=g+4|0;m=n;u=0;c:while(1){v=m+(u*68|0)+4|0;w=a[v]|0;if((w&1)==0){x=v+1|0;y=(w&255)>>>1}else{x=c[m+(u*68|0)+12>>2]|0;y=c[m+(u*68|0)+8>>2]|0}t=0;sa(26,g|0,x|0,y|0)|0;w=t;t=0;if(w&1){q=23;break}do{if((c[m+(u*68|0)>>2]|0)==-2){if((c[m+(u*68|0)+64>>2]&8|0)==0){break c}w=c[m+(u*68|0)+28>>2]|0;v=a[f]|0;z=(v&1)==0;if(z){A=(v&255)>>>1}else{A=c[k>>2]|0}if(!(w>>>0>A>>>0)){break}if(z){B=(v&255)>>>1}else{B=c[k>>2]|0}t=0;sa(27,g|0,w-B|0,a[m+(u*68|0)+36|0]|0)|0;w=t;t=0;if(w&1){q=23;break c}}}while(0);w=m+(u*68|0)+16|0;v=a[w]|0;if((v&1)==0){C=w+1|0;D=(v&255)>>>1}else{C=c[m+(u*68|0)+24>>2]|0;D=c[m+(u*68|0)+20>>2]|0}t=0;sa(26,g|0,C|0,D|0)|0;v=t;t=0;if(v&1){q=23;break}u=u+1|0;m=c[j>>2]|0;if(!(u>>>0<(((c[h>>2]|0)-m|0)/68|0)>>>0)){break b}}if((q|0)==23){m=Kb(-1,-1)|0;E=m;F=I;break a}t=0;Oa(14,592,640,234,704);m=t;t=0;if(m&1){q=24;break a}}}while(0);a[d+36|0]=1;t=0;na(46,b|0,g|0);n=t;t=0;if(n&1){q=24;break}mt(g);i=e;return}}while(0);if((q|0)==24){q=Kb(-1,-1)|0;E=q;F=I}mt(g);o=E;p=F;Wb(o|0)}function gg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b;b=xc(36)|0;e=a+4|0;a=c[e+4>>2]|0;f=d+4|0;c[f>>2]=c[e>>2];c[f+4>>2]=a;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=-1;c[d>>2]=1336;c[d+12>>2]=1356;t=0;na(47,b|0,d|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;f=I;ng(d);Jb(b|0);g=a;h=f;Wb(g|0)}t=0;La(13,b|0,1192,7);b=t;t=0;b=Kb(-1,-1)|0;f=I;ng(d);g=b;h=f;Wb(g|0)}function hg(a){a=a|0;var b=0;b=i;ub(a|0);i=b;return}function ig(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a[b+40|0]|0;if((e&1)==0){f=(e&255)>>>1}else{f=c[b+44>>2]|0}e=c[b+4>>2]|0;g=c[b>>2]|0;if((e|0)==(g|0)){h=f;i=d;return h|0}b=(e-g|0)/68|0;e=f;f=0;while(1){j=a[g+(f*68|0)+4|0]|0;if((j&1)==0){k=(j&255)>>>1}else{k=c[g+(f*68|0)+8>>2]|0}j=k+e|0;if((c[g+(f*68|0)>>2]|0)==-2){l=c[g+(f*68|0)+28>>2]|0;m=j>>>0<l>>>0?l:j}else{m=j}j=a[g+(f*68|0)+16|0]|0;if((j&1)==0){n=(j&255)>>>1}else{n=c[g+(f*68|0)+20>>2]|0}j=n+m|0;l=f+1|0;if(l>>>0<b>>>0){e=j;f=l}else{h=j;break}}i=d;return h|0}function jg(a){a=a|0;var b=0;b=i;ub(a|0);_B(a);i=b;return}function kg(a){a=a|0;i=i;return 832}function lg(a){a=a|0;var b=0;b=i;ng(a);i=b;return}function mg(a){a=a|0;var b=0;b=i;ng(a);i=b;return}function ng(a){a=a|0;var b=0;b=i;pg(a+12|0);ub(a|0);i=b;return}function og(a){a=a|0;var b=0;b=i;ng(a+ -12|0);i=b;return}function pg(a){a=a|0;var b=0;b=i;c[a>>2]=1232;t=0;ma(239,a+4|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Yb(a|0)}else{i=b;return}}function qg(a){a=a|0;var b=0,d=0;b=i;d=a;a=c[d>>2]|0;do{if((a|0)!=0){if(!($d[c[(c[a>>2]|0)+16>>2]&127](a)|0)){break}c[d>>2]=0}}while(0);i=b;return}function rg(a){a=a|0;var b=0;b=i;ng(a+ -12|0);i=b;return}function sg(a){a=a|0;var b=0;b=i;ng(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function tg(a){a=a|0;var b=0;b=i;ng(a);_B(a);i=b;return}function ug(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=YB(36)|0;g=f;t=0;h=e;j=d+8|0;a[h+0|0]=a[j+0|0]|0;La(14,g|0,b|0,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;_B(f);Wb(e|0)}if((f|0)==0){k=0;i=d;return k|0}k=f+(c[(c[f>>2]|0)+ -12>>2]|0)|0;i=d;return k|0}function vg(a){a=a|0;var b=0;b=xc(36)|0;t=0;na(48,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,1192,7)}}function wg(a){a=a|0;var b=0;b=i;tg(a+ -12|0);i=b;return}function xg(a){a=a|0;var b=0,d=0;b=i;d=ug(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0)|0;i=b;return d|0}function yg(a){a=a|0;vg(a+(c[(c[a>>2]|0)+ -16>>2]|0)|0)}function zg(a){a=a|0;var b=0;b=i;tg(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function Ag(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+32|0;c[e>>2]=1376;Bg(a,b);c[a>>2]=1252;c[a+12>>2]=1280;c[e>>2]=1308;i=d;return}function Bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;c[e>>2]=720;f=b+4|0;g=c[f+4>>2]|0;h=a+4|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;t=0;na(49,a+12|0,b+12|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;ub(a|0);Wb(b|0)}else{c[e>>2]=1336;c[a+12>>2]=1356;i=d;return}}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[a>>2]=1232;e=a+4|0;c[e>>2]=c[b+4>>2];Fg(e);e=a+8|0;a=b+8|0;c[e+0>>2]=c[a+0>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];i=d;return}function Dg(a){a=a|0;var b=0;b=i;ng(a);_B(a);i=b;return}function Eg(a){a=a|0;var b=0;b=i;Dg(a+ -12|0);i=b;return}function Fg(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}Zd[c[(c[d>>2]|0)+12>>2]&511](d);i=b;return}function Gg(a){a=a|0;i=i;return}function Hg(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Ig(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(50,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=1252;g=a+12|0;c[g>>2]=1280;c[e>>2]=1308;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;ng(f);h=b;j=d;Wb(j|0)}function Jg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d;f=d+8|0;g=e;c[g>>2]=0;h=c[b+4>>2]|0;do{if((h|0)==0){j=0;k=8}else{t=0;na(c[(c[h>>2]|0)+20>>2]|0,f|0,h|0);l=t;t=0;if(l&1){k=6;break}t=0;na(52,e|0,c[f>>2]|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;m=I;t=0;ma(239,f|0);n=t;t=0;if(!(n&1)){o=m;p=l;break}q=Kb(-1,-1,0)|0;r=I;Xe(q)}else{t=0;ma(239,f|0);l=t;t=0;if(l&1){k=6;break}j=c[g>>2]|0;k=8;break}}}while(0);do{if((k|0)==8){c[a+12>>2]=c[b+12>>2];c[a+16>>2]=c[b+16>>2];c[a+8>>2]=c[b+8>>2];t=0;na(52,a+4|0,j|0);g=t;t=0;if(g&1){k=6;break}qg(e);i=d;return}}while(0);if((k|0)==6){k=Kb(-1,-1)|0;o=I;p=k}t=0;ma(239,e|0);e=t;t=0;if(e&1){q=Kb(-1,-1,0)|0;r=I;Xe(q)}else{Wb(p|0)}}function Kg(a,b){a=a|0;b=b|0;var d=0;d=i;qg(a);c[a>>2]=b;Fg(a);i=d;return}function Lg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(50,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=1252;g=a+12|0;c[g>>2]=1280;c[e>>2]=1308;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;ng(f);h=b;j=d;Wb(j|0)}function Mg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=b+12|0;f=b+16|0;g=c[f>>2]|0;do{if((g|0)!=0){if((c[b+32>>2]|0)==(g|0)){break}Xa(2664,640,135,2736)}}while(0);h=b+4|0;j=c[h>>2]|0;k=b;l=c[k>>2]|0;if((j|0)==(l|0)){m=g}else{n=e;o=g;g=j;j=l;l=0;while(1){do{if((o|0)==0){p=9}else{q=c[j+(l*68|0)>>2]|0;if((q|0)<0){p=9;break}if((c[(c[n>>2]|0)+(q>>>5<<2)>>2]&1<<(q&31)|0)==0){p=9}else{r=j;s=g}}}while(0);if((p|0)==9){p=0;qt(j+(l*68|0)+4|0,0,0);r=c[k>>2]|0;s=c[h>>2]|0}q=l+1|0;t=c[f>>2]|0;if(q>>>0<((s-r|0)/68|0)>>>0){o=t;g=s;j=r;l=q}else{m=t;break}}}l=b+28|0;c[l>>2]=0;a[b+36|0]=0;if((m|0)==0){i=d;return b|0}m=c[b+32>>2]|0;if((m|0)<=0){i=d;return b|0}r=c[e>>2]|0;e=0;while(1){if((c[r+(e>>>5<<2)>>2]&1<<(e&31)|0)==0){p=16;break}j=e+1|0;c[l>>2]=j;if((j|0)<(m|0)){e=j}else{p=16;break}}if((p|0)==16){i=d;return b|0}return 0}function Ng(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b;b=xc(36)|0;e=a+4|0;a=c[e+4>>2]|0;f=d+4|0;c[f>>2]=c[e>>2];c[f+4>>2]=a;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=-1;c[d>>2]=2632;c[d+12>>2]=2652;t=0;na(53,b|0,d|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;f=I;mh(d);Jb(b|0);g=a;h=f;Wb(g|0)}t=0;La(13,b|0,2504,35);b=t;t=0;b=Kb(-1,-1)|0;f=I;mh(d);g=b;h=f;Wb(g|0)}function Og(a){a=a|0;var b=0;b=i;ub(a|0);i=b;return}function Pg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e;g=b+12|0;h=g;c[h>>2]=18616;j=b+4|0;c[j>>2]=d;k=b+8|0;t=0;l=f;m=e+8|0;a[l+0|0]=a[m+0|0]|0;La(15,k|0,d|0,f|0);f=t;t=0;do{if(f&1){d=Kb(-1,-1)|0;n=I;o=d}else{d=b;m=c[j>>2]|0;c[d>>2]=1700;c[b+12>>2]=1720;t=0;na(54,b+12|0,m|0);m=t;t=0;if(!(m&1)){c[b+84>>2]=0;c[b+88>>2]=-1;c[d>>2]=1404;c[h>>2]=1424;i=e;return}d=Kb(-1,-1)|0;m=I;t=0;ma(240,k|0);l=t;t=0;if(!(l&1)){n=m;o=d;break}p=Kb(-1,-1,0)|0;q=I;Xe(p)}}while(0);t=0;ma(155,g|0);g=t;t=0;if(g&1){p=Kb(-1,-1,0)|0;q=I;Xe(p)}else{Wb(o|0)}}function Qg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=c[b>>2]|0;if(!((n|0)==-1)){c[d+12>>2]=n}n=c[b+4>>2]|0;if(!((n|0)==-1)){c[d+8>>2]=n}n=a[b+8|0]|0;if(!(n<<24>>24==0)){c[d+76>>2]=n<<24>>24}n=d;c[d+4>>2]=c[b+12>>2];Kt(n,c[b+16>>2]|0);c[d+20>>2]=c[b+20>>2];Kt(n,c[d+16>>2]|0);o=b+24|0;b=(a[o]|0)!=0;if(((b?0:0)&1|(b?92:0)|0)!=0){b=$g(o)|0;Ot(l,n);t=0;La(16,g|0,n|0,b|0);o=t;t=0;do{if(!(o&1)){t=0;ma(230,g|0);p=t;t=0;if(p&1){break}p=c[d+24>>2]|0;if((p|0)!=0){t=0;na(c[(c[p>>2]|0)+8>>2]|0,p|0,b|0);q=t;t=0;if(q&1){break}q=p+4|0;az(h,q);cz(q,b)|0;t=0;ma(230,h|0);q=t;t=0;if(q&1){break}}bz(l);i=f;return}}while(0);h=Kb(-1,-1)|0;t=0;ma(230,l|0);l=t;t=0;if(l&1){l=Kb(-1,-1,0)|0;Xe(l)}else{Wb(h|0)}}if((e|0)==0){i=f;return}Ot(m,n);t=0;La(16,j|0,n|0,e|0);n=t;t=0;do{if(!(n&1)){t=0;ma(230,j|0);h=t;t=0;if(h&1){break}h=c[d+24>>2]|0;if((h|0)!=0){t=0;na(c[(c[h>>2]|0)+8>>2]|0,h|0,e|0);l=t;t=0;if(l&1){break}l=h+4|0;az(k,l);cz(l,e)|0;t=0;ma(230,k|0);l=t;t=0;if(l&1){break}}bz(m);i=f;return}}while(0);f=Kb(-1,-1)|0;t=0;ma(230,m|0);m=t;t=0;if(m&1){m=Kb(-1,-1,0)|0;Xe(m)}else{Wb(f|0)}}function Rg(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;qt(a,0,0);if(!((d|0)>0&d>>>0>c>>>0)){k=g<<24>>24!=0;st(a,(k&1)+c|0);if(k){rt(a,1,g)|0}if((c|0)==0){i=j;return}vt(a,b,c)|0;i=j;return}k=g<<24>>24!=0;l=(k<<31>>31)+(d-c)|0;st(a,d);if(h){h=(l|0)/2|0;m=h;n=l-h|0}else{h=(f&32|0)==0;m=h?0:l;n=h?l:0}if((n|0)!=0){rt(a,n,e)|0}if(k){rt(a,1,g)|0}if((c|0)!=0){vt(a,b,c)|0}if((m|0)==0){i=j;return}rt(a,m,e)|0;i=j;return}function Sg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+96|0;d=b;e=b+16|0;f=b+32|0;g=b+64|0;h=b+80|0;j=c[a+24>>2]|0;if(!((j|0)==0|(j|0)==(c[a+20>>2]|0))){j=c[(c[a>>2]|0)+20>>2]|0;k=f;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;k=e;l=f;c[k+0>>2]=c[l+0>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];ze[j&31](b+48|0,a,e,16);}e=c[a+12>>2]|0;if((e|0)==0|(e|0)==(c[a+8>>2]|0)){i=b;return}e=c[(c[a>>2]|0)+20>>2]|0;j=g;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;j=d;l=g;c[j+0>>2]=c[l+0>>2];c[j+4>>2]=c[l+4>>2];c[j+8>>2]=c[l+8>>2];c[j+12>>2]=c[l+12>>2];ze[e&31](h,a,d,8);i=b;return}function Tg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+48|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;a[h]=d;t=0;na(41,j|0,b|0);d=t;t=0;a:do{if(d&1){m=14}else{b:do{if((a[j]|0)!=0){n=b;o=c[(c[n>>2]|0)+ -12>>2]|0;p=b;c[k>>2]=c[p+(o+24)>>2];q=p+o|0;r=c[p+(o+4)>>2]|0;s=h+1|0;u=p+(o+76)|0;o=c[u>>2]|0;c:do{if((o|0)==-1){t=0;na(42,g|0,q|0);v=t;t=0;if(v&1){m=15;break}t=0;v=Ea(20,g|0,21368)|0;w=t;t=0;do{if(!(w&1)){t=0;x=Ea(c[(c[v>>2]|0)+28>>2]|0,v|0,32)|0;y=t;t=0;if(y&1){break}t=0;ma(230,g|0);y=t;t=0;if(y&1){m=15;break c}y=x<<24>>24;c[u>>2]=y;z=y;m=11;break c}}while(0);v=Kb(-1,-1,0)|0;t=0;ma(230,g|0);w=t;t=0;if(!(w&1)){A=v;break}v=Kb(-1,-1,0)|0;Xe(v)}else{z=o;m=11}}while(0);do{if((m|0)==11){o=z&255;u=(r&176|0)==32?s:h;t=0;v=f;w=k;c[v+0>>2]=c[w+0>>2];Aa(40,l|0,f|0,h|0,u|0,s|0,q|0,o|0);o=t;t=0;if(o&1){m=15;break}if((c[l>>2]|0)!=0){break b}o=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,p+o|0,c[p+(o+16)>>2]|5|0);o=t;t=0;if(o&1){m=15}else{break b}}}while(0);if((m|0)==15){q=Kb(-1,-1,0)|0;A=q}t=0;ma(231,j|0);q=t;t=0;if(!(q&1)){B=A;C=p;D=n;break a}E=Kb(-1,-1,0)|0;F=I;Xe(E)}}while(0);t=0;ma(231,j|0);q=t;t=0;if(q&1){m=14;break}i=e;return b|0}}while(0);if((m|0)==14){m=Kb(-1,-1,0)|0;B=m;C=b;D=b}hb(B|0)|0;t=0;ma(232,C+(c[(c[D>>2]|0)+ -12>>2]|0)|0);D=t;t=0;if(!(D&1)){Ic();i=e;return b|0}b=Kb(-1,-1)|0;t=0;Ma(2);e=t;t=0;if(e&1){E=Kb(-1,-1,0)|0;F=I;Xe(E)}else{Wb(b|0)}return 0}function Ug(a){a=a|0;var b=0,c=0;b=i;t=0;ma(240,a+8|0);c=t;t=0;if(!(c&1)){Lt(a+12|0);i=b;return}b=Kb(-1,-1)|0;t=0;ma(155,a+12|0);a=t;t=0;if(a&1){a=Kb(-1,-1,0)|0;Xe(a)}else{Wb(b|0)}}function Vg(a){a=a|0;var b=0;b=i;Ug(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function Wg(a){a=a|0;var b=0,c=0;b=i;t=0;ma(21,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function Xg(a){a=a|0;var b=0;b=i;Wg(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function Yg(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}Zg(d);i=b;return}function Zg(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+4|0;e=c[d>>2]|0;c[d>>2]=e+ -1;if((e|0)!=1){i=b;return}Zd[c[(c[a>>2]|0)+8>>2]&511](a);_g(a);i=b;return}function _g(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+8|0;e=c[d>>2]|0;c[d>>2]=e+ -1;if((e|0)!=1){i=b;return}Zd[c[(c[a>>2]|0)+12>>2]&511](a);i=b;return}function $g(b){b=b|0;var c=0;c=i;if((a[b]|0)==0){Xa(1728,1752,630,1800)}else{i=c;return b+4|0}return 0}function ah(b){b=b|0;i=i;return(a[b]|0)!=0|0}function bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;d=i;e=a;c[e>>2]=0;t=0;a=oa(93,20)|0;f=t;t=0;if(!(f&1)){c[a+4>>2]=1;c[a+8>>2]=1;c[a>>2]=1816;c[a+12>>2]=b;c[e>>2]=a;i=d;return}d=Kb(-1,-1,0)|0;hb(d|0)|0;t=0;Ma(3);d=t;t=0;d=Kb(-1,-1)|0;t=0;Ma(2);a=t;t=0;if(a&1){a=Kb(-1,-1,0)|0;Xe(a)}else{Wb(d|0)}}function ch(a){a=a|0;i=i;return}function dh(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function eh(a){a=a|0;i=i;return}function fh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Zd[c[(c[a>>2]|0)+4>>2]&511](a);i=b;return}function gh(a,b){a=a|0;b=b|0;i=i;return((c[b+4>>2]|0)==2064?a+16|0:0)|0}function hh(a){a=a|0;i=i;return a+16|0}function ih(a){a=a|0;var b=0;b=i;ub(a|0);_B(a);i=b;return}function jh(a){a=a|0;i=i;return 2224}function kh(a){a=a|0;var b=0;b=i;mh(a);i=b;return}function lh(a){a=a|0;var b=0;b=i;mh(a);i=b;return}function mh(a){a=a|0;var b=0;b=i;pg(a+12|0);ub(a|0);i=b;return}function nh(a){a=a|0;var b=0;b=i;mh(a+ -12|0);i=b;return}function oh(a){a=a|0;var b=0;b=i;mh(a+ -12|0);i=b;return}function ph(a){a=a|0;var b=0;b=i;mh(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function qh(a){a=a|0;var b=0;b=i;mh(a);_B(a);i=b;return}function rh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=YB(36)|0;g=f;t=0;h=e;j=d+8|0;a[h+0|0]=a[j+0|0]|0;La(17,g|0,b|0,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;_B(f);Wb(e|0)}if((f|0)==0){k=0;i=d;return k|0}k=f+(c[(c[f>>2]|0)+ -12>>2]|0)|0;i=d;return k|0}function sh(a){a=a|0;var b=0;b=xc(36)|0;t=0;na(55,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,2504,35)}}function th(a){a=a|0;var b=0;b=i;qh(a+ -12|0);i=b;return}function uh(a){a=a|0;var b=0,d=0;b=i;d=rh(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0)|0;i=b;return d|0}function vh(a){a=a|0;sh(a+(c[(c[a>>2]|0)+ -16>>2]|0)|0)}function wh(a){a=a|0;var b=0;b=i;qh(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function xh(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+32|0;c[e>>2]=1376;yh(a,b);c[a>>2]=2548;c[a+12>>2]=2576;c[e>>2]=2604;i=d;return}function yh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;c[e>>2]=2160;f=b+4|0;g=c[f+4>>2]|0;h=a+4|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;t=0;na(49,a+12|0,b+12|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;ub(a|0);Wb(b|0)}else{c[e>>2]=2632;c[a+12>>2]=2652;i=d;return}}function zh(a){a=a|0;var b=0;b=i;mh(a);_B(a);i=b;return}function Ah(a){a=a|0;var b=0;b=i;zh(a+ -12|0);i=b;return}function Bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(56,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=2548;g=a+12|0;c[g>>2]=2576;c[e>>2]=2604;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;mh(f);h=b;j=d;Wb(j|0)}function Ch(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(56,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=2548;g=a+12|0;c[g>>2]=2576;c[e>>2]=2604;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;mh(f);h=b;j=d;Wb(j|0)}function Dh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e;g=b+12|0;h=b+40|0;j=h;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;j=b+52|0;k=b;l=k+0|0;m=l+36|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));a[k+36|0]=0;a[j]=-1;j=b+56|0;Xi(j,24);k=b+104|0;a[k]=0;if((d|0)==0){i=e;return}l=sC(d|0)|0;t=0;La(18,f|0,d|0,l|0);l=t;t=0;do{if(l&1){d=Kb(-1,-1)|0;n=I;o=d}else{t=0;Ea(22,b|0,f|0)|0;d=t;t=0;if(d&1){d=Kb(-1,-1)|0;m=I;mt(f);n=m;o=d;break}mt(f);i=e;return}}while(0);t=0;ma(241,k|0);k=t;t=0;if(k&1){p=Kb(-1,-1,0)|0;q=I;Xe(p)}t=0;ma(242,j|0);j=t;t=0;if(j&1){p=Kb(-1,-1,0)|0;q=I;Xe(p)}else{mt(h);Ih(g);Gh(b);Wb(o|0)}}function Eh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Fa=0,Ga=0;e=i;i=i+112|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+40|0;Sh(f,b);t=0;l=Ea(20,f|0,21368)|0;m=t;t=0;if(m&1){m=Kb(-1,-1)|0;n=I;t=0;ma(230,f|0);o=t;t=0;if(o&1){p=Kb(-1,-1,0)|0;q=I;Xe(p)}else{r=m;s=n;Wb(r|0)}}n=l;bz(f);f=l;l=pe[c[(c[f>>2]|0)+28>>2]&63](n,37)|0;m=b+52|0;Uh(b,Th(d,l,n,a[m]|0)|0);o=zt(d,l,0)|0;do{if((o|0)==-1){u=0;v=-1;w=1;x=0;y=29}else{z=b+40|0;A=d;B=d;C=B+1|0;D=b+4|0;E=b;F=g;G=h;H=d+8|0;J=d+4|0;K=o;L=0;M=0;N=-1;O=1;P=0;a:while(1){Q=(L|0)==0;R=L+ -1|0;S=K;T=M;b:while(1){if(Q){U=z}else{U=(c[E>>2]|0)+(R*68|0)+16|0}V=S+1|0;W=a[A]|0;if((W&1)==0){X=B+V+1|0;Y=C}else{Z=c[H>>2]|0;X=Z+V|0;Y=Z}do{if((a[X]|0)==(a[Y+S|0]|0)){Vh(U,d,T,V);Z=S+2|0;_=Z;$=Z}else{if(!(L>>>0<(((c[D>>2]|0)-(c[E>>2]|0)|0)/68|0)>>>0|Q)){y=15;break a}if((S|0)==(T|0)){aa=W}else{Vh(U,d,T,S);aa=a[A]|0}if((aa&1)==0){c[F>>2]=B+V+1;ba=C;ca=(aa&255)>>>1}else{c[F>>2]=(c[H>>2]|0)+V;ba=c[H>>2]|0;ca=c[J>>2]|0}c[G>>2]=ba+ca;Z=Wh(g,h,(c[E>>2]|0)+(L*68|0)|0,n,V,a[m]|0)|0;if((a[A]&1)==0){da=C}else{da=c[H>>2]|0}ea=(c[F>>2]|0)-da|0;if(!Z){_=S;$=ea;break}Xh((c[E>>2]|0)+(L*68|0)|0);fa=c[(c[E>>2]|0)+(L*68|0)>>2]|0;if((fa|0)==-1){y=26;break b}else if((fa|0)==-2){ga=N;ha=O;ia=1;break b}else if((fa|0)==-3){_=ea;$=ea}else{y=25;break b}}}while(0);V=zt(d,l,$)|0;if((V|0)==-1){ja=L;ka=_;la=N;na=O;oa=P;break a}else{S=V;T=_}}if((y|0)==25){y=0;ga=(fa|0)>(N|0)?fa:N;ha=O;ia=P}else if((y|0)==26){y=0;ga=N;ha=0;ia=P}T=L+1|0;S=zt(d,l,ea)|0;if((S|0)==-1){ja=T;ka=ea;la=ga;na=ha;oa=ia;break}else{K=S;L=T;M=ea;N=ga;O=ha;P=ia}}if((y|0)==15){Xa(2976,3048,441,3096)}if((ja|0)==0){u=ka;v=la;w=na;x=oa;y=29;break}pa=(c[b>>2]|0)+((ja+ -1|0)*68|0)+16|0;qa=ja;ra=ka;sa=la;ta=na;ua=oa}}while(0);if((y|0)==29){pa=b+40|0;qa=0;ra=u;sa=v;ta=w;ua=x}x=a[d]|0;if((x&1)==0){va=(x&255)>>>1}else{va=c[d+4>>2]|0}Vh(pa,d,ra,va);if(ta){wa=sa}else{do{if((sa|0)>-1){if((a[m]&1)==0){break}c[j>>2]=3112;c[j+4>>2]=sa;c[j+8>>2]=0;t=0;ma(243,j|0);va=t;t=0;va=Kb(-1,-1)|0;ra=I;ub(j|0);r=va;s=ra;Wb(r|0)}}while(0);if((qa|0)>0){j=c[b>>2]|0;sa=0;m=0;while(1){ra=j+(sa*68|0)|0;if((c[ra>>2]|0)==-1){c[ra>>2]=m;xa=m+1|0}else{xa=m}ra=sa+1|0;if((ra|0)==(qa|0)){ya=xa;break}else{sa=ra;m=xa}}}else{ya=0}wa=ya+ -1|0}$h(k,pe[c[(c[f>>2]|0)+28>>2]&63](n,32)|0);t=0;La(19,b|0,qa|0,k|0);qa=t;t=0;if(qa&1){qa=Kb(-1,-1)|0;n=I;t=0;ma(244,k|0);f=t;t=0;if(f&1){p=Kb(-1,-1,0)|0;q=I;Xe(p)}else{r=qa;s=n;Wb(r|0)}}Hh(k);k=b+24|0;r=c[k>>2]|0;if(!ua){za=r;Aa=wa+1|0;Ba=b+32|0;c[Ba>>2]=Aa;Ca=b+24|0;Da=za&-2;Fa=za|1;Ga=ta?Fa:Da;c[Ca>>2]=Ga;i=e;return b|0}ua=r|4;c[k>>2]=ua;za=ua;Aa=wa+1|0;Ba=b+32|0;c[Ba>>2]=Aa;Ca=b+24|0;Da=za&-2;Fa=za|1;Ga=ta?Fa:Da;c[Ca>>2]=Ga;i=e;return b|0}function Fh(a){a=a|0;var b=0;b=i;Jh(a);i=b;return}function Gh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;while(1){a=c[f>>2]|0;if((a|0)==(e|0)){break}g=a+ -68|0;c[f>>2]=g;t=0;ma(244,g|0);g=t;t=0;if(g&1){h=5;break}}if((h|0)==5){h=Kb(-1,-1)|0;Yb(h|0)}_B(c[d>>2]|0);i=b;return}function Hh(a){a=a|0;var b=0,c=0;b=i;t=0;ma(241,a+52|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;mt(a+16|0);mt(a+4|0);Wb(c|0)}else{mt(a+16|0);mt(a+4|0);i=b;return}}function Ih(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;if((d|0)!=0){_B(d)}i=b;return}function Jh(a){a=a|0;var b=0,d=0;b=i;d=a;c[d>>2]=2752;Kh(a);c[d>>2]=18632;bz(a+4|0);i=b;return}function Kh(b){b=b|0;var d=0,e=0,f=0;d=i;e=b+36|0;f=b+8|0;if((a[e]|0)!=0){_B(c[f>>2]|0)}a[e]=0;c[f>>2]=0;f=b+12|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;i=d;return}function Lh(a){a=a|0;var b=0,c=0;b=i;t=0;ma(242,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function Mh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;j=b+24|0;k=c[j>>2]|0;l=(k|0)==0;do{if(!l){m=b+32|0;if(!((c[m>>2]|0)>>>0<k>>>0)){break}c[m>>2]=k}}while(0);do{if((g&8|0)==0){n=15}else{m=b+12|0;o=c[m>>2]|0;if((o|0)==0){n=15;break}if((f|0)==1){if((g&16|0)==0){p=d;q=e}else{n=10}}else if((f|0)==2){r=(c[b+32>>2]|0)-o|0;s=wC(r|0,((r|0)<0)<<31>>31|0,d|0,e|0)|0;p=s;q=I}else if((f|0)==0){s=(c[b+8>>2]|0)-o|0;r=wC(s|0,((s|0)<0)<<31>>31|0,d|0,e|0)|0;p=r;q=I}else{n=10}if((n|0)==10){r=a;c[r>>2]=0;c[r+4>>2]=0;r=a+8|0;c[r>>2]=-1;c[r+4>>2]=-1;i=h;return}r=o+p|0;if((c[b+8>>2]|0)>>>0>r>>>0){t=-1;u=-1;break}if(r>>>0>(c[b+32>>2]|0)>>>0){t=-1;u=-1;break}c[m>>2]=r;if((g&16|0)==0|l){t=p;u=q;break}c[j>>2]=k+(r-k);t=p;u=q}}while(0);do{if((n|0)==15){if((g&16|0)==0|l){t=-1;u=-1;break}if((f|0)==2){v=(c[b+32>>2]|0)-k|0;w=c[b+20>>2]|0}else if((f|0)==0){q=c[b+20>>2]|0;v=q-k|0;w=q}else{q=a;c[q>>2]=0;c[q+4>>2]=0;q=a+8|0;c[q>>2]=-1;c[q+4>>2]=-1;i=h;return}q=wC(v|0,((v|0)<0)<<31>>31|0,d|0,e|0)|0;p=k+q|0;if(w>>>0>p>>>0){t=-1;u=-1;break}if(p>>>0>(c[b+32>>2]|0)>>>0){t=-1;u=-1;break}c[j>>2]=p;t=q;u=I}}while(0);j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=t;c[j+4>>2]=u;i=h;return}function Nh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;g=d+8|0;d=c[g>>2]|0;h=c[g+4>>2]|0;g=b+24|0;j=c[g>>2]|0;k=(j|0)==0;do{if(!k){l=b+32|0;if(!((c[l>>2]|0)>>>0<j>>>0)){break}c[l>>2]=j}}while(0);if((d|0)==-1&(h|0)==-1){Xa(2904,2912,176,2968)}do{if((e&8|0)==0){m=11}else{l=b+12|0;n=c[l>>2]|0;if((n|0)==0){m=11;break}if(!((h|0)>-1|(h|0)==-1&d>>>0>4294967295)){o=-1;p=-1;break}q=c[b+8>>2]|0;r=(c[b+32>>2]|0)-q|0;s=((r|0)<0)<<31>>31;if((h|0)>(s|0)|(h|0)==(s|0)&d>>>0>r>>>0){o=-1;p=-1;break}r=wC(q-n|0,0,d|0,h|0)|0;q=n+r|0;c[l>>2]=q;if((e&16|0)==0|k){o=d;p=h;break}c[g>>2]=j+(q-j);o=d;p=h}}while(0);do{if((m|0)==11){if((e&16|0)==0){o=-1;p=-1;break}if(!((j|0)!=0&((h|0)>-1|(h|0)==-1&d>>>0>4294967295))){o=-1;p=-1;break}k=c[b+8>>2]|0;q=(c[b+32>>2]|0)-k|0;l=((q|0)<0)<<31>>31;if((h|0)>(l|0)|(h|0)==(l|0)&d>>>0>q>>>0){o=-1;p=-1;break}q=wC(k-j|0,0,d|0,h|0)|0;c[g>>2]=j+q;o=d;p=h}}while(0);h=a;c[h>>2]=0;c[h+4>>2]=0;h=a+8|0;c[h>>2]=o;c[h+4>>2]=p;i=f;return}function Oh(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;e=a+12|0;f=c[e>>2]|0;do{if((f|0)==0){g=-1}else{h=a+16|0;if(f>>>0<(c[h>>2]|0)>>>0){g=d[f]|0;break}if((c[a+40>>2]&8|0)==0){g=-1;break}j=c[a+24>>2]|0;if((j|0)==0){g=-1;break}k=c[a+32>>2]|0;if(!(f>>>0<j>>>0|f>>>0<k>>>0)){g=-1;break}if(k>>>0<j>>>0){c[a+32>>2]=j;l=j}else{l=k}c[e>>2]=f;c[h>>2]=l;g=d[f]|0}}while(0);i=b;return g|0}function Ph(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=b+12|0;g=c[f>>2]|0;if((g|0)==0){h=-1;i=e;return h|0}if(!((c[b+8>>2]|0)>>>0<g>>>0)){h=-1;i=e;return h|0}j=(d|0)==-1;do{if((c[b+40>>2]&16|0)!=0|j){k=g+ -1|0}else{l=g+ -1|0;if((d&255)<<24>>24==(a[l]|0)){k=l;break}else{h=-1}i=e;return h|0}}while(0);c[f>>2]=k;if(!j){a[k]=d}h=j?0:d;i=e;return h|0}function Qh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;if((d|0)==-1){f=0;i=e;return f|0}g=b;h=b+24|0;j=c[h>>2]|0;k=(j|0)==0;do{if(!k){l=c[b+28>>2]|0;if(!(j>>>0<l>>>0)){break}if((j|0)==(l|0)){pe[c[(c[b>>2]|0)+52>>2]&63](g,d&255)|0;f=d;i=e;return f|0}else{c[h>>2]=j+1;a[j]=d;f=d;i=e;return f|0}}}while(0);j=b+40|0;if((c[j>>2]&16|0)==0){f=-1;i=e;return f|0}if(k){m=256;n=b+8|0;o=0;p=c[b+8>>2]|0;q=11}else{k=c[b+8>>2]|0;l=(c[b+28>>2]|0)-k|0;r=l>>>1;s=r>>>0<256?256:r;r=b+8|0;if((s|0)==0){t=r;u=l;v=k;w=l;x=0}else{m=s;n=r;o=l;p=k;q=11}}a:do{if((q|0)==11){k=m;while(1){l=k>>>1;if(!(o>>>0>~k>>>0)){break}if((l|0)==0){t=n;u=o;v=p;w=o;x=0;break a}else{k=l}}l=k+o|0;t=n;u=o;v=p;w=l;x=YB(l)|0}}while(0);p=(u|0)==0;if(!p){qC(x|0,v|0,u|0)|0}u=b+36|0;if((a[u]|0)!=0){_B(v)}a[u]=1;u=b+32|0;do{if(p){c[u>>2]=x;o=x+w|0;c[h>>2]=x;c[b+20>>2]=x;c[b+28>>2]=o;if((c[j>>2]&8|0)==0){c[t>>2]=x;c[b+12>>2]=0;c[b+16>>2]=x;y=o;z=x;break}else{c[t>>2]=x;c[b+12>>2]=x;c[b+16>>2]=x+1;y=o;z=x;break}}else{o=v;c[u>>2]=x+((c[u>>2]|0)-o);n=b+20|0;m=c[n>>2]|0;q=(c[h>>2]|0)-m|0;l=b+12|0;r=c[l>>2]|0;s=c[t>>2]|0;A=m-o|0;o=x+w|0;c[n>>2]=x+A;c[b+28>>2]=o;n=x+(A+q)|0;c[h>>2]=n;if((c[j>>2]&8|0)==0){c[t>>2]=x;c[l>>2]=0;c[b+16>>2]=x;y=o;z=n;break}else{c[t>>2]=x;c[l>>2]=x+(r-s);c[b+16>>2]=x+(A+(q+1));y=o;z=n;break}}}while(0);if((z|0)==(y|0)){pe[c[(c[b>>2]|0)+52>>2]&63](g,d&255)|0;f=d;i=e;return f|0}else{c[h>>2]=z+1;a[z]=d;f=d;i=e;return f|0}return 0}function Rh(b){b=b|0;var c=0,d=0;c=i;d=b;if((a[d]|0)==0){i=c;return}bz(b+4|0);a[d]=0;i=c;return}function Sh(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=c+104|0;c=(a[e]|0)!=0;if(((c?0:0)&1|(c?92:0)|0)==0){$y(b);i=d;return}else{az(b,$g(e)|0);i=d;return}}function Th(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=i;i=i+56|0;h=g;j=g+8|0;k=g+16|0;l=g+32|0;m=g+40|0;n=g+48|0;o=zt(b,d,0)|0;if((o|0)==-1){p=0;i=g;return p|0}q=b;r=b;s=r+1|0;u=b+8|0;v=b+4|0;w=m;x=n;y=l;z=a[q]|0;A=o;o=0;a:while(1){B=(z&1)==0;C=(z&255)>>>1;D=A;while(1){E=D+1|0;if(B){F=C}else{F=c[v>>2]|0}if(!(E>>>0<F>>>0)){G=8;break a}if(B){H=r+E+1|0;I=s}else{J=c[u>>2]|0;H=J+E|0;I=J}if((a[H]|0)!=(a[I+D|0]|0)){break}J=zt(b,d,D+2|0)|0;if((J|0)==-1){p=o;G=30;break a}else{D=J}}if(B){c[w>>2]=r+E+1;K=s;L=C}else{c[w>>2]=(c[u>>2]|0)+E;K=c[u>>2]|0;L=c[v>>2]|0}c[x>>2]=K+L;J=j;M=m;c[J+0>>2]=c[M+0>>2];M=h;J=n;c[M+0>>2]=c[J+0>>2];Gi(l,e,j,h);J=a[q]|0;M=(J&1)==0;if(M){N=(c[y>>2]|0)-s|0;O=(J&255)>>>1}else{N=(c[y>>2]|0)-(c[u>>2]|0)|0;O=c[v>>2]|0}if(N>>>0<O>>>0){if(M){P=s}else{P=c[u>>2]|0}Q=((a[P+N|0]|0)==d<<24>>24)+N|0}else{Q=N}M=o+1|0;R=zt(b,d,Q)|0;if((R|0)==-1){p=M;G=30;break}else{z=J;A=R;o=M}}if((G|0)==8){if((f&1)==0){p=o+1|0;i=g;return p|0}if(B){S=C}else{S=c[v>>2]|0}c[k>>2]=3112;c[k+4>>2]=D;c[k+8>>2]=S;t=0;ma(243,k|0);S=t;t=0;if(S&1){S=Kb(-1,-1)|0;ub(k|0);Wb(S|0)}}else if((G|0)==30){i=g;return p|0}return 0}function Uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+152|0;e=d;f=d+8|0;g=d+80|0;Sh(e,a);t=0;h=Ea(20,e|0,21368)|0;j=t;t=0;do{if(!(j&1)){t=0;k=Ea(c[(c[h>>2]|0)+28>>2]|0,h|0,32)|0;l=t;t=0;if(l&1){break}bz(e);l=a;m=c[a+4>>2]|0;n=a;o=c[n>>2]|0;if((m|0)==(o|0)){$h(f,k);t=0;La(20,l|0,b|0,f|0);p=t;t=0;if(!(p&1)){Hh(f);q=a+40|0;qt(q,0,0);i=d;return}p=Kb(-1,-1)|0;r=I;t=0;ma(244,f|0);s=t;t=0;if(s&1){u=Kb(-1,-1,0)|0;v=I;Xe(u)}else{w=r;x=p;Wb(x|0)}}do{if(((m-o|0)/68|0)>>>0<b>>>0){$h(g,k);t=0;La(19,l|0,b|0,g|0);p=t;t=0;if(!(p&1)){Hh(g);break}p=Kb(-1,-1)|0;r=I;t=0;ma(244,g|0);s=t;t=0;if(s&1){u=Kb(-1,-1,0)|0;v=I;Xe(u)}else{w=r;x=p;Wb(x|0)}}}while(0);Ji(a+12|0,0,0);if((b|0)==0){q=a+40|0;qt(q,0,0);i=d;return}else{y=0}do{Ki((c[n>>2]|0)+(y*68|0)|0,k);y=y+1|0;}while((y|0)!=(b|0));q=a+40|0;qt(q,0,0);i=d;return}}while(0);d=Kb(-1,-1)|0;q=I;t=0;ma(230,e|0);e=t;t=0;if(e&1){u=Kb(-1,-1,0)|0;v=I;Xe(u)}else{w=q;x=d;Wb(x|0)}}function Vh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;h=g;j=g+8|0;k=g+16|0;l=g+24|0;if((a[d]&1)==0){c[k>>2]=d+e+1;m=d+1|0}else{c[k>>2]=(c[d+8>>2]|0)+e;m=c[d+8>>2]|0}c[l>>2]=m+f;f=j;m=k;c[f+0>>2]=c[m+0>>2];m=h;f=l;c[m+0>>2]=c[f+0>>2];Hi(b,j,h)|0;i=g;return}function Wh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;j=i;i=i+112|0;k=j;l=j+8|0;m=j+16|0;n=j+24|0;o=j+32|0;p=j+40|0;q=j+48|0;r=j+56|0;s=j+64|0;t=j+72|0;u=j+80|0;v=j+88|0;w=j+96|0;x=j+104|0;y=e;c[y>>2]=-1;z=b;A=c[z>>2]|0;B=d;C=c[B>>2]|0;D=A;E=C-D+g|0;if(!(A>>>0<C>>>0)){Ci(h,g,E);F=0;i=j;return F|0}C=a[A]|0;A=f;G=C<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,124)|0)<<24>>24;C=c[z>>2]|0;do{if(G){H=C+1|0;c[z>>2]=H;if(H>>>0<(c[B>>2]|0)>>>0){I=H;J=1;break}Ci(h,g-D+H|0,E);F=0;i=j;return F|0}else{I=C;J=0}}while(0);C=a[I]|0;I=C<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,48)|0)<<24>>24;C=c[z>>2]|0;do{if(I){K=C;L=7}else{if(!(Di(f,a[C]|0)|0)){K=C;L=7;break}Ei(p,b,d,o,f);G=c[p>>2]|0;c[z>>2]=G;if(!(G>>>0<(c[B>>2]|0)>>>0)){Ci(h,g-D+G|0,E);F=0;i=j;return F|0}H=a[G]|0;G=H<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,37)|0)<<24>>24;H=c[o>>2]|0;do{if(G){c[y>>2]=H+ -1;M=(c[z>>2]|0)+1|0;c[z>>2]=M;if(J){Ci(h,g-D+M|0,E);break}else{F=1;i=j;return F|0}}}while(0);G=a[c[z>>2]|0]|0;if(G<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,36)|0)<<24>>24){c[y>>2]=H+ -1;G=(c[z>>2]|0)+1|0;c[z>>2]=G;K=G;L=7;break}else{c[e+28>>2]=H;c[y>>2]=-1;N=c[z>>2]|0;break}}}while(0);a:do{if((L|0)==7){b:do{if((K|0)==(c[B>>2]|0)){O=K}else{o=f;p=e+40|0;C=e+64|0;I=K;c:while(1){switch((de[c[(c[o>>2]|0)+36>>2]&63](f,a[I]|0,0)|0)<<24>>24|0){case 95:{c[p>>2]=c[p>>2]|16;break};case 32:{c[C>>2]=c[C>>2]|2;break};case 43:{c[p>>2]=c[p>>2]|2048;break};case 48:{c[C>>2]=c[C>>2]|1;break};case 35:{c[p>>2]=c[p>>2]|1536;break};case 104:case 108:case 39:{break};case 45:{c[p>>2]=c[p>>2]|32;break};case 61:{c[C>>2]=c[C>>2]|4;break};default:{break c}}G=(c[z>>2]|0)+1|0;c[z>>2]=G;if((G|0)==(c[B>>2]|0)){O=G;break b}else{I=G}}I=a[c[z>>2]|0]|0;C=I<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,42)|0)<<24>>24;I=c[z>>2]|0;if(C){c[r>>2]=I;c[s>>2]=c[B>>2];C=n;p=r;c[C+0>>2]=c[p+0>>2];p=m;C=s;c[p+0>>2]=c[C+0>>2];Fi(q,n,m,f);C=c[q>>2]|0;c[z>>2]=C;P=C}else{P=I}if((P|0)==(c[B>>2]|0)){N=P;break a}if(!(Di(f,a[P]|0)|0)){N=P;break a}Ei(t,b,d,e+28|0,f);I=c[t>>2]|0;c[z>>2]=I;N=I;break a}}while(0);Ci(h,g-D+O|0,E);F=1;i=j;return F|0}}while(0);if(!(N>>>0<(c[B>>2]|0)>>>0)){Ci(h,g-D+N|0,E);F=1;i=j;return F|0}O=a[N]|0;N=O<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,46)|0)<<24>>24;O=c[z>>2]|0;d:do{if(N){t=O+1|0;c[z>>2]=t;do{if((t|0)==(c[B>>2]|0)){Q=t}else{P=a[t]|0;q=P<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,42)|0)<<24>>24;P=c[z>>2]|0;if(!q){Q=P;break}c[v>>2]=P;c[w>>2]=c[B>>2];P=l;q=v;c[P+0>>2]=c[q+0>>2];q=k;P=w;c[q+0>>2]=c[P+0>>2];Fi(u,l,k,f);P=c[u>>2]|0;c[z>>2]=P;Q=P}}while(0);do{if((Q|0)!=(c[B>>2]|0)){if(!(Di(f,a[Q]|0)|0)){break}Ei(x,b,d,e+32|0,f);t=c[x>>2]|0;c[z>>2]=t;R=t;S=1;break d}}while(0);c[e+32>>2]=0;R=Q;S=0}else{R=O;S=0}}while(0);e:do{if((R|0)==(c[B>>2]|0)){T=R}else{O=R;f:while(1){Q=a[O]|0;do{if(!(Q<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,108)|0)<<24>>24)){x=a[c[z>>2]|0]|0;if(x<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,76)|0)<<24>>24){break}x=a[c[z>>2]|0]|0;if(!(x<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,104)|0)<<24>>24)){break f}}}while(0);Q=(c[z>>2]|0)+1|0;c[z>>2]=Q;if((Q|0)==(c[B>>2]|0)){T=Q;break e}else{O=Q}}O=c[z>>2]|0;if(!(O>>>0<(c[B>>2]|0)>>>0)){T=O;break}do{if(J){Q=a[O]|0;x=Q<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,124)|0)<<24>>24;Q=c[z>>2]|0;if(!x){U=Q;break}c[z>>2]=Q+1;F=1;i=j;return F|0}else{U=O}}while(0);switch((de[c[(c[f>>2]|0)+36>>2]&63](f,a[U]|0,0)|0)<<24>>24|0){case 101:{V=c[e+40>>2]|0;L=59;break};case 88:{O=e+40|0;c[O>>2]=c[O>>2]|16384;L=56;break};case 120:case 112:{L=56;break};case 111:{O=e+40|0;c[O>>2]=c[O>>2]&-75|64;break};case 69:{O=e+40|0;Q=c[O>>2]|16384;c[O>>2]=Q;V=Q;L=59;break};case 102:{Q=e+40|0;c[Q>>2]=c[Q>>2]&-261|4;L=61;break};case 105:case 100:case 117:{L=61;break};case 84:{Q=(c[z>>2]|0)+1|0;c[z>>2]=Q;if(Q>>>0<(c[B>>2]|0)>>>0){a[e+36|0]=a[Q]|0}else{Ci(h,g-D+Q|0,E)}Q=e+64|0;c[Q>>2]=c[Q>>2]|8;c[y>>2]=-2;break};case 116:{Q=pe[c[(c[A>>2]|0)+28>>2]&63](f,32)|0;a[e+36|0]=Q;Q=e+64|0;c[Q>>2]=c[Q>>2]|8;c[y>>2]=-2;break};case 71:{Q=e+40|0;c[Q>>2]=c[Q>>2]|16384;break};case 103:{Q=e+40|0;c[Q>>2]=c[Q>>2]&-335|2;break};case 99:case 67:{c[e+60>>2]=1;break};case 115:case 83:{Q=e+32|0;if(S){c[e+60>>2]=c[Q>>2]}c[Q>>2]=6;break};case 110:{c[y>>2]=-3;break};default:{Ci(h,g-D+(c[z>>2]|0)|0,E)}}if((L|0)==56){Q=e+40|0;c[Q>>2]=c[Q>>2]&-75|8}else if((L|0)==59){c[e+40>>2]=V&-335|258}else if((L|0)==61){Q=e+40|0;c[Q>>2]=c[Q>>2]&-75|2}Q=(c[z>>2]|0)+1|0;c[z>>2]=Q;if(!J){F=1;i=j;return F|0}do{if((Q|0)==(c[B>>2]|0)){W=Q}else{O=a[Q]|0;x=O<<24>>24==(pe[c[(c[A>>2]|0)+28>>2]&63](f,124)|0)<<24>>24;O=c[z>>2]|0;if(!x){W=O;break}c[z>>2]=O+1;F=1;i=j;return F|0}}while(0);Ci(h,g-D+W|0,E);F=1;i=j;return F|0}}while(0);Ci(h,g-D+T|0,E);F=1;i=j;return F|0}function Xh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=b+64|0;f=c[e>>2]|0;do{if((f&1|0)==0){g=f}else{h=b+40|0;j=c[h>>2]|0;if((j&32|0)==0){k=f&-3;c[e>>2]=k;a[b+36|0]=48;c[h>>2]=j&-177|16;g=k;break}if((j&144|0)==0){j=f&-2;c[e>>2]=j;g=j;break}else{Xa(3600,3672,179,3720)}}}while(0);if((g&2|0)==0){i=d;return}if((c[b+40>>2]&2048|0)==0){i=d;return}c[e>>2]=g&-3;i=d;return}function Yh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b;b=xc(36)|0;e=a+4|0;a=c[e+4>>2]|0;f=d+4|0;c[f>>2]=c[e>>2];c[f+4>>2]=a;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=-1;c[d>>2]=3568;c[d+12>>2]=3588;t=0;na(57,b|0,d|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;f=I;li(d);Jb(b|0);g=a;h=f;Wb(g|0)}t=0;La(13,b|0,3440,51);b=t;t=0;b=Kb(-1,-1)|0;f=I;li(d);g=b;h=f;Wb(g|0)}function Zh(a){a=a|0;var b=0;b=i;ub(a|0);i=b;return}function _h(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=a+4|0;g=c[f>>2]|0;h=c[a>>2]|0;j=(g-h|0)/68|0;if(j>>>0<b>>>0){ai(a,b-j|0,d);i=e;return}if(!(j>>>0>b>>>0)){i=e;return}j=h+(b*68|0)|0;b=g;while(1){if((b|0)==(j|0)){k=9;break}g=b+ -68|0;c[f>>2]=g;t=0;ma(244,g|0);g=t;t=0;if(g&1){k=8;break}b=c[f>>2]|0}if((k|0)==8){f=Kb(-1,-1)|0;Yb(f|0)}else if((k|0)==9){i=e;return}}function $h(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;c[b>>2]=-1;a[b+52|0]=0;f=b+32|0;g=b+4|0;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[g+24>>2]=0;c[f>>2]=6;a[b+36|0]=d;c[b+40>>2]=4098;c[b+48>>2]=0;c[b+44>>2]=0;c[b+60>>2]=2147483647;c[b+64>>2]=0;i=e;return}function ai(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+24|0;f=e;g=a+4|0;h=c[g>>2]|0;j=c[a+8>>2]|0;k=h;if(!(((j-k|0)/68|0)>>>0<b>>>0)){l=b;m=h;do{if((m|0)==0){n=0}else{ei(m,d);n=c[g>>2]|0}m=n+68|0;c[g>>2]=m;l=l+ -1|0;}while((l|0)!=0);i=e;return}l=c[a>>2]|0;m=(k-l|0)/68|0;k=m+b|0;if(k>>>0>63161283){Uy(0)}g=(j-l|0)/68|0;if(g>>>0<31580641){l=g<<1;o=l>>>0<k>>>0?k:l}else{o=63161283}gi(f,o,m,a+8|0);t=0;La(21,f|0,b|0,d|0);d=t;t=0;if(d&1){p=Kb(-1,-1)|0;q=I;di(f);Wb(p|0)}t=0;na(58,a|0,f|0);a=t;t=0;if(a&1){p=Kb(-1,-1)|0;q=I;di(f);Wb(p|0)}di(f);i=e;return}function bi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+8|0;a=b;b=c[f>>2]|0;do{if((b|0)==0){g=0}else{ei(b,d);g=c[f>>2]|0}b=g+68|0;c[f>>2]=b;a=a+ -1|0;}while((a|0)!=0);i=e;return}function ci(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=c[g>>2]|0;j=b+4|0;k=c[j>>2]|0;if((h|0)==(f|0)){l=k;m=f}else{n=h;h=k;do{n=n+ -68|0;ei(h+ -68|0,n);h=(c[j>>2]|0)+ -68|0;c[j>>2]=h;}while((n|0)!=(f|0));l=h;m=c[e>>2]|0}c[e>>2]=l;c[j>>2]=m;m=b+8|0;l=c[g>>2]|0;c[g>>2]=c[m>>2];c[m>>2]=l;l=a+8|0;a=b+12|0;m=c[l>>2]|0;c[l>>2]=c[a>>2];c[a>>2]=m;c[b>>2]=c[j>>2];i=d;return}function di(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=c[a+4>>2]|0;e=a+8|0;while(1){f=c[e>>2]|0;if((f|0)==(d|0)){break}g=f+ -68|0;c[e>>2]=g;t=0;ma(244,g|0);g=t;t=0;if(g&1){h=4;break}}if((h|0)==4){h=Kb(-1,-1)|0;Yb(h|0)}h=c[a>>2]|0;if((h|0)==0){i=b;return}_B(h);i=b;return}function ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;f=b;c[e>>2]=c[f>>2];g=a+4|0;it(g,b+4|0);c[e>>2]=c[f>>2];t=0;na(46,a+16|0,b+16|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;mt(g);Wb(h|0)}else{c[e>>2]=c[f>>2];f=a+28|0;e=b+28|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];c[f+16>>2]=c[e+16>>2];c[f+20>>2]=c[e+20>>2];fi(a+52|0,b+52|0);e=b+60|0;b=c[e+4>>2]|0;f=a+60|0;c[f>>2]=c[e>>2];c[f+4>>2]=b;i=d;return}}function fi(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=b;a[e]=0;if((a[c]|0)==0){i=d;return}az(b+4|0,c+4|0);a[e]=1;i=d;return}function gi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b*68|0)|0}c[a>>2]=h;e=h+(d*68|0)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b*68|0);i=f;return}function hi(a){a=a|0;var b=0;b=i;ub(a|0);_B(a);i=b;return}function ii(a){a=a|0;i=i;return 3176}function ji(a){a=a|0;var b=0;b=i;li(a);i=b;return}function ki(a){a=a|0;var b=0;b=i;li(a);i=b;return}function li(a){a=a|0;var b=0;b=i;pg(a+12|0);ub(a|0);i=b;return}function mi(a){a=a|0;var b=0;b=i;li(a+ -12|0);i=b;return}function ni(a){a=a|0;var b=0;b=i;li(a+ -12|0);i=b;return}function oi(a){a=a|0;var b=0;b=i;li(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function pi(a){a=a|0;var b=0;b=i;li(a);_B(a);i=b;return}function qi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=YB(36)|0;g=f;t=0;h=e;j=d+8|0;a[h+0|0]=a[j+0|0]|0;La(22,g|0,b|0,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;_B(f);Wb(e|0)}if((f|0)==0){k=0;i=d;return k|0}k=f+(c[(c[f>>2]|0)+ -12>>2]|0)|0;i=d;return k|0}function ri(a){a=a|0;var b=0;b=xc(36)|0;t=0;na(59,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,3440,51)}}function si(a){a=a|0;var b=0;b=i;pi(a+ -12|0);i=b;return}function ti(a){a=a|0;var b=0,d=0;b=i;d=qi(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0)|0;i=b;return d|0}function ui(a){a=a|0;ri(a+(c[(c[a>>2]|0)+ -16>>2]|0)|0)}function vi(a){a=a|0;var b=0;b=i;pi(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function wi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+32|0;c[e>>2]=1376;xi(a,b);c[a>>2]=3484;c[a+12>>2]=3512;c[e>>2]=3540;i=d;return}function xi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;c[e>>2]=3112;f=b+4|0;g=c[f+4>>2]|0;h=a+4|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;t=0;na(49,a+12|0,b+12|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;ub(a|0);Wb(b|0)}else{c[e>>2]=3568;c[a+12>>2]=3588;i=d;return}}function yi(a){a=a|0;var b=0;b=i;li(a);_B(a);i=b;return}function zi(a){a=a|0;var b=0;b=i;yi(a+ -12|0);i=b;return}function Ai(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(60,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=3484;g=a+12|0;c[g>>2]=3512;c[e>>2]=3540;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;li(f);h=b;j=d;Wb(j|0)}function Bi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(60,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=3484;g=a+12|0;c[g>>2]=3512;c[e>>2]=3540;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;li(f);h=b;j=d;Wb(j|0)}function Ci(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;if((a&1)==0){i=e;return}c[f>>2]=3112;c[f+4>>2]=b;c[f+8>>2]=d;t=0;ma(243,f|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;ub(f|0);Wb(d|0)}}function Di(a,d){a=a|0;d=d|0;var e=0,f=0;e=i;if(!(d<<24>>24>-1)){f=0;i=e;return f|0}f=(b[(c[a+8>>2]|0)+(d<<24>>24<<1)>>1]&2048)!=0;i=e;return f|0}function Ei(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;c[f>>2]=0;j=c[d>>2]|0;d=b;c[d>>2]=j;b=e;if((j|0)==(c[b>>2]|0)){i=h;return}e=g;k=j;while(1){j=a[k]|0;if(!(Di(g,j)|0)){l=5;break}m=de[c[(c[e>>2]|0)+36>>2]&63](g,j,0)|0;c[f>>2]=(m<<24>>24)+ -48+((c[f>>2]|0)*10|0);m=k+1|0;c[d>>2]=m;if((m|0)==(c[b>>2]|0)){l=5;break}else{k=m}}if((l|0)==5){i=h;return}}function Fi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=d;c[l>>2]=(c[n>>2]|0)+1;d=c[e>>2]|0;c[m>>2]=d;e=j;o=l;c[e+0>>2]=c[o+0>>2];o=h;e=m;c[o+0>>2]=c[e+0>>2];Gi(k,f,j,h);h=c[k>>2]|0;c[n>>2]=h;if((h|0)==(d|0)){p=d;q=b;c[q>>2]=p;i=g;return}d=a[h]|0;if(!(d<<24>>24==(pe[c[(c[f>>2]|0)+28>>2]&63](f,36)|0)<<24>>24)){p=h;q=b;c[q>>2]=p;i=g;return}f=h+1|0;c[n>>2]=f;p=f;q=b;c[q>>2]=p;i=g;return}function Gi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=e;e=c[h>>2]|0;j=c[f>>2]|0;a:do{if((e|0)==(j|0)){k=e}else{f=e;while(1){if(!(Di(d,a[f]|0)|0)){k=f;break a}l=f+1|0;c[h>>2]=l;if((l|0)==(j|0)){k=j;break}else{f=l}}}}while(0);c[b>>2]=k;i=g;return}function Hi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=b;h=a[g]|0;if((h&1)==0){j=(h&255)>>>1;k=h;l=10}else{h=c[b>>2]|0;j=c[b+4>>2]|0;k=h&255;l=(h&-2)+ -1|0}h=d;d=c[h>>2]|0;m=e;e=c[m>>2]|0;n=e-d|0;if((e|0)==(d|0)){i=f;return b|0}if((l-j|0)>>>0<n>>>0){xt(b,l,j-l+n|0,j,j,0,0);o=a[g]|0}else{o=k}if((o&1)==0){p=b+1|0}else{p=c[b+8>>2]|0}o=d;d=p+j|0;do{a[d]=a[o]|0;d=d+1|0;o=(c[h>>2]|0)+1|0;c[h>>2]=o;}while((o|0)!=(c[m>>2]|0));a[d]=0;d=n+j|0;if((a[g]&1)==0){a[g]=d<<1;i=f;return b|0}else{c[b+4>>2]=d;i=f;return b|0}return 0}function Ii(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;f=a+8|0;g=a;h=c[g>>2]|0;j=h;if((((c[f>>2]|0)-j|0)/68|0)>>>0<b>>>0){Ti(a);if(b>>>0>63161283){Uy(0)}k=((c[f>>2]|0)-(c[g>>2]|0)|0)/68|0;if(k>>>0<31580641){f=k<<1;l=f>>>0<b>>>0?b:f}else{l=63161283}Ui(a,l);l=a+4|0;f=b;k=c[l>>2]|0;do{if((k|0)==0){m=0}else{ei(k,d);m=c[l>>2]|0}k=m+68|0;c[l>>2]=k;f=f+ -1|0;}while((f|0)!=0);i=e;return}f=a+4|0;a=((c[f>>2]|0)-j|0)/68|0;j=a>>>0<b>>>0;k=j?a:b;if((k|0)!=0){l=k;k=h;while(1){Vi(k,d)|0;h=l+ -1|0;if((h|0)==0){break}else{k=k+68|0;l=h}}}if(j){j=b-a|0;a=c[f>>2]|0;do{if((a|0)==0){n=0}else{ei(a,d);n=c[f>>2]|0}a=n+68|0;c[f>>2]=a;j=j+ -1|0;}while((j|0)!=0);i=e;return}else{j=(c[g>>2]|0)+(b*68|0)|0;while(1){b=c[f>>2]|0;if((b|0)==(j|0)){o=21;break}g=b+ -68|0;c[f>>2]=g;t=0;ma(244,g|0);g=t;t=0;if(g&1){o=12;break}}if((o|0)==12){f=Kb(-1,-1)|0;Yb(f|0)}else if((o|0)==21){i=e;return}}}function Ji(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0;e=i;i=i+80|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+72|0;p=o;q=a+4|0;r=c[q>>2]|0;if(!(r>>>0<b>>>0)){c[q>>2]=b;i=e;return}s=a+8|0;u=c[s>>2]|0;v=u<<5;w=b-r|0;do{if(w>>>0>v>>>0|r>>>0>(v-w|0)>>>0){x=n;c[x>>2]=0;y=n+4|0;c[y>>2]=0;z=n+8|0;c[z>>2]=0;if((b|0)<0){t=0;ma(245,0);A=t;t=0;if(A&1){B=Kb(-1,-1)|0;C=I;Ih(n);Wb(B|0)}}if(v>>>0>1073741822){D=2147483647}else{A=u<<6;E=b+31&-32;D=A>>>0<E>>>0?E:A}t=0;na(61,n|0,D|0);A=t;t=0;if(A&1){B=Kb(-1,-1)|0;C=I;Ih(n);Wb(B|0)}else{A=c[q>>2]|0;E=A+w|0;F=a;G=c[F>>2]|0;H=c[x>>2]|0;J=j;K=h;c[K>>2]=G;c[K+4>>2]=0;K=j;c[K>>2]=G+(A>>>5<<2);c[K+4>>2]=A&31;c[k>>2]=H;c[k+4>>2]=0;A=g;K=h;c[A+0>>2]=c[K+0>>2];c[A+4>>2]=c[K+4>>2];K=f;A=J;c[K+0>>2]=c[A+0>>2];c[K+4>>2]=c[A+4>>2];Oi(p,g,f,k);A=o;K=c[A+4>>2]|0;J=c[A>>2]|0;A=c[F>>2]|0;c[F>>2]=H;c[x>>2]=A;A=c[q>>2]|0;c[q>>2]=E;c[y>>2]=A;A=c[s>>2]|0;c[s>>2]=c[z>>2];c[z>>2]=A;Ih(n);L=K;M=J;break}}else{J=(c[a>>2]|0)+(r>>>5<<2)|0;c[q>>2]=b;L=r&31;M=J}}while(0);if((r|0)==(b|0)){i=e;return}if(d){c[l>>2]=M;c[l+4>>2]=L;Mi(l,w);i=e;return}else{c[m>>2]=M;c[m+4>>2]=L;Ni(m,w);i=e;return}}function Ki(b,d){b=b|0;d=d|0;var e=0;e=i;c[b>>2]=-1;c[b+60>>2]=2147483647;c[b+64>>2]=0;qt(b+4|0,0,0);qt(b+16|0,0,0);c[b+28>>2]=0;c[b+32>>2]=6;a[b+36|0]=d;c[b+40>>2]=4098;c[b+48>>2]=0;c[b+44>>2]=0;i=e;return}function Li(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d;f=d+16|0;g=d+24|0;h=a+8|0;if(!(c[h>>2]<<5>>>0<b>>>0)){i=d;return}j=e;c[j>>2]=0;k=e+4|0;c[k>>2]=0;l=e+8|0;c[l>>2]=0;t=0;na(62,e|0,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Ih(e);Wb(b|0)}b=a;m=c[b>>2]|0;c[f>>2]=m;c[f+4>>2]=0;n=a+4|0;a=c[n>>2]|0;c[g>>2]=m+(a>>>5<<2);c[g+4>>2]=a&31;Qi(e,f,g);g=c[b>>2]|0;c[b>>2]=c[j>>2];c[j>>2]=g;g=c[n>>2]|0;c[n>>2]=c[k>>2];c[k>>2]=g;g=c[h>>2]|0;c[h>>2]=c[l>>2];c[l>>2]=g;Ih(e);i=d;return}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=c[a+4>>2]|0;if((e|0)==0){f=c[a>>2]|0;g=b}else{h=32-e|0;j=h>>>0>b>>>0?b:h;k=a;l=c[k>>2]|0;c[l>>2]=c[l>>2]|-1>>>(h-j|0)&-1<<e;e=l+4|0;c[k>>2]=e;f=e;g=b-j|0}j=g>>>5;b=a;tC(f|0,-1,j<<2|0)|0;f=j<<5;if((g|0)==(f|0)){i=d;return}a=(c[b>>2]|0)+(j<<2)|0;c[b>>2]=a;c[a>>2]=c[a>>2]|-1>>>(32-g+f|0);i=d;return}function Ni(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=c[a+4>>2]|0;if((e|0)==0){f=c[a>>2]|0;g=b}else{h=32-e|0;j=h>>>0>b>>>0?b:h;k=a;l=c[k>>2]|0;c[l>>2]=c[l>>2]&~(-1>>>(h-j|0)&-1<<e);e=l+4|0;c[k>>2]=e;f=e;g=b-j|0}j=g>>>5;b=a;tC(f|0,0,j<<2|0)|0;f=j<<5;if((g|0)==(f|0)){i=d;return}a=(c[b>>2]|0)+(j<<2)|0;c[b>>2]=a;c[a>>2]=c[a>>2]&~(-1>>>(32-g+f|0));i=d;return}function Oi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;g=b;h=c[g>>2]|0;j=c[b+4>>2]|0;b=(c[d+4>>2]|0)-j+((c[d>>2]|0)-h<<3)|0;if((b|0)<=0){k=c[e>>2]|0;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}if((j|0)==0){p=c[e>>2]|0;q=h;r=b}else{d=32-j|0;s=(b|0)<(d|0)?b:d;t=-1>>>(d-s|0)&-1<<j;j=e;d=c[j>>2]|0;c[d>>2]=c[d>>2]&~t|c[h>>2]&t;t=e+4|0;u=(c[t>>2]|0)+s|0;v=d+(u>>>5<<2)|0;c[j>>2]=v;c[t>>2]=u&31;u=h+4|0;c[g>>2]=u;p=v;q=u;r=b-s|0}s=r>>>5;b=e;rC(p|0,q|0,s<<2|0)|0;p=r-(s<<5)|0;r=(c[b>>2]|0)+(s<<2)|0;c[b>>2]=r;if((p|0)<=0){k=r;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}b=q+(s<<2)|0;c[g>>2]=b;g=-1>>>(32-p|0);c[r>>2]=c[r>>2]&~g|c[b>>2]&g;c[e+4>>2]=p;k=r;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}function Pi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((b|0)<0){Uy(0)}else{e=((b+ -1|0)>>>5)+1|0;b=YB(e<<2)|0;c[a>>2]=b;c[a+4>>2]=0;c[a+8>>2]=e;i=d;return}}function Qi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+56|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=a+4|0;o=c[n>>2]|0;p=c[b>>2]|0;q=b+4|0;b=c[d>>2]|0;r=d+4|0;c[n>>2]=o-(c[q>>2]|0)+(c[r>>2]|0)+(b-p<<3);n=c[q>>2]|0;q=c[r>>2]|0;r=(c[a>>2]|0)+(o>>>5<<2)|0;a=o&31;if((n|0)==(a|0)){c[f>>2]=p;c[f+4>>2]=n;c[g>>2]=b;c[g+4>>2]=q;c[h>>2]=r;c[h+4>>2]=n;Ri(m,f,g,h);i=e;return}else{c[j>>2]=p;c[j+4>>2]=n;c[k>>2]=b;c[k+4>>2]=q;c[l>>2]=r;c[l+4>>2]=a;Si(m,j,k,l);i=e;return}}function Ri(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;g=b;h=c[g>>2]|0;j=c[b+4>>2]|0;b=(c[d+4>>2]|0)-j+((c[d>>2]|0)-h<<3)|0;if((b|0)<=0){k=c[e>>2]|0;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}if((j|0)==0){p=e;q=h;r=b}else{d=32-j|0;s=(b|0)<(d|0)?b:d;t=-1>>>(d-s|0)&-1<<j;j=e;d=c[j>>2]|0;c[d>>2]=c[d>>2]&~t|c[h>>2]&t;t=e+4|0;h=(c[t>>2]|0)+s|0;c[j>>2]=d+(h>>>5<<2);c[t>>2]=h&31;h=(c[g>>2]|0)+4|0;c[g>>2]=h;p=j;q=h;r=b-s|0}s=r>>>5;rC(c[p>>2]|0,q|0,s<<2|0)|0;q=r-(s<<5)|0;r=(c[p>>2]|0)+(s<<2)|0;c[p>>2]=r;if((q|0)<=0){k=r;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}r=(c[g>>2]|0)+(s<<2)|0;c[g>>2]=r;g=-1>>>(32-q|0);s=c[p>>2]|0;c[s>>2]=c[s>>2]&~g|c[r>>2]&g;c[e+4>>2]=q;k=s;l=a;c[l>>2]=k;m=a+4|0;n=e+4|0;o=c[n>>2]|0;c[m>>2]=o;i=f;return}function Si(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=b;h=c[g>>2]|0;j=b+4|0;b=c[j>>2]|0;k=(c[d+4>>2]|0)-b+((c[d>>2]|0)-h<<3)|0;if((k|0)<=0){l=e+4|0;m=a;n=e;o=c[n>>2]|0;c[m>>2]=o;p=a+4|0;q=c[l>>2]|0;c[p>>2]=q;i=f;return}if((b|0)==0){r=c[e+4>>2]|0;s=h;t=k}else{d=32-b|0;u=(k|0)<(d|0)?k:d;v=-1>>>(d-u|0)&-1<<b&c[h>>2];h=e+4|0;b=c[h>>2]|0;d=32-b|0;w=d>>>0<u>>>0?d:u;x=e;y=c[x>>2]|0;z=c[y>>2]&~(-1>>>(d-w|0)&-1<<b);c[y>>2]=z;b=c[h>>2]|0;d=c[j>>2]|0;if(b>>>0>d>>>0){A=v<<b-d}else{A=v>>>(d-b|0)}c[y>>2]=z|A;A=(c[h>>2]|0)+w|0;z=y+(A>>>5<<2)|0;c[x>>2]=z;x=A&31;c[h>>2]=x;A=u-w|0;if((A|0)>0){y=c[z>>2]&~(-1>>>(32-A|0));c[z>>2]=y;c[z>>2]=y|v>>>((c[j>>2]|0)+w|0);c[h>>2]=A;B=A}else{B=x}x=(c[g>>2]|0)+4|0;c[g>>2]=x;r=B;s=x;t=k-u|0}u=e+4|0;k=32-r|0;x=-1<<r;if(t>>>0>31){r=~x;B=e;A=s;h=t;while(1){w=c[A>>2]|0;j=c[B>>2]|0;v=c[j>>2]&r;c[j>>2]=v;c[j>>2]=v|w<<c[u>>2];v=j+4|0;c[B>>2]=v;c[v>>2]=c[v>>2]&x|w>>>k;w=h+ -32|0;v=(c[g>>2]|0)+4|0;c[g>>2]=v;if(w>>>0>31){h=w;A=v}else{C=w;D=v;break}}}else{C=t;D=s}if((C|0)<=0){l=u;m=a;n=e;o=c[n>>2]|0;c[m>>2]=o;p=a+4|0;q=c[l>>2]|0;c[p>>2]=q;i=f;return}s=c[D>>2]&-1>>>(32-C|0);D=(k|0)<(C|0)?k:C;t=e;A=c[t>>2]|0;h=c[A>>2]&~(-1<<c[u>>2]&-1>>>(k-D|0));c[A>>2]=h;c[A>>2]=h|s<<c[u>>2];h=(c[u>>2]|0)+D|0;k=A+(h>>>5<<2)|0;c[t>>2]=k;c[u>>2]=h&31;h=C-D|0;if((h|0)<=0){l=u;m=a;n=e;o=c[n>>2]|0;c[m>>2]=o;p=a+4|0;q=c[l>>2]|0;c[p>>2]=q;i=f;return}c[k>>2]=c[k>>2]&~(-1>>>(32-h|0))|s>>>D;c[u>>2]=h;l=u;m=a;n=e;o=c[n>>2]|0;c[m>>2]=o;p=a+4|0;q=c[l>>2]|0;c[p>>2]=q;i=f;return}function Ti(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;while(1){g=c[f>>2]|0;if((g|0)==(e|0)){break}h=g+ -68|0;c[f>>2]=h;t=0;ma(244,h|0);h=t;t=0;if(h&1){j=5;break}}if((j|0)==5){j=Kb(-1,-1)|0;Yb(j|0)}_B(c[d>>2]|0);c[a+8>>2]=0;c[f>>2]=0;c[d>>2]=0;i=b;return}function Ui(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if(b>>>0>63161283){Uy(0)}else{e=YB(b*68|0)|0;c[a+4>>2]=e;c[a>>2]=e;c[a+8>>2]=e+(b*68|0);i=d;return}}function Vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;c[a>>2]=c[b>>2];nt(a+4|0,b+4|0)|0;nt(a+16|0,b+16|0)|0;e=a+28|0;f=b+28|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];Wi(a+52|0,b+52|0);f=b+60|0;b=c[f+4>>2]|0;e=a+60|0;c[e>>2]=c[f>>2];c[e+4>>2]=b;i=d;return a|0}function Wi(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=b;f=(a[c]|0)!=0;if((a[e]|0)==0){if(!f){i=d;return}az(b+4|0,c+4|0);a[e]=1;i=d;return}if(f){cz(b+4|0,c+4|0)|0;i=d;return}else{Rh(b);i=d;return}}function Xi(b,d){b=b|0;d=d|0;var e=0;e=i;Tt(b);c[b>>2]=2752;c[b+32>>2]=0;a[b+36|0]=0;c[b+40>>2]=d;i=e;return}function Yi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=i;t=0;ma(241,a+104|0);c=t;t=0;do{if(c&1){d=Kb(-1,-1)|0;e=I;t=0;ma(242,a+56|0);f=t;t=0;if(!(f&1)){g=e;h=d;break}d=Kb(-1,-1,0)|0;Xe(d)}else{t=0;ma(242,a+56|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;g=I;h=d;break}else{mt(a+40|0);Ih(a+12|0);Gh(a);i=b;return}}}while(0);mt(a+40|0);Ih(a+12|0);Gh(a);Wb(h|0)}function Zi(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+0|0;e=d+60|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));g[a>>2]=1.0;g[a+20>>2]=1.0;g[a+40>>2]=1.0;g[a+60>>2]=1.0;i=b;return}function _i(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+0|0;a=b+0|0;b=e+64|0;do{c[e>>2]=c[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0));i=d;return}function $i(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a+0|0;f=b+0|0;b=e+64|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(b|0));i=d;return a|0}function aj(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+0|0;e=d+64|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));i=b;return a|0}function bj(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+0|0;e=d+60|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));g[a>>2]=1.0;g[a+20>>2]=1.0;g[a+40>>2]=1.0;g[a+60>>2]=1.0;i=b;return a|0}function cj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0,v=0.0,w=0,x=0.0,y=0,z=0.0,A=0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0,H=0.0,I=0,J=0.0,K=0,L=0.0,M=0,N=0.0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0.0;e=i;f=a+0|0;h=f+60|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0));f=a+20|0;g[f>>2]=1.0;h=a+40|0;g[h>>2]=1.0;j=a+60|0;g[j>>2]=1.0;k=+g[b>>2];l=d;m=+g[l>>2];n=+g[b+4>>2];o=d+16|0;p=+g[o>>2];q=+g[b+8>>2];r=d+32|0;s=+g[r>>2];t=+g[b+12>>2];u=d+48|0;v=+g[u>>2];g[a>>2]=k*m+n*p+q*s+t*v;w=d+4|0;x=+g[w>>2];y=d+20|0;z=+g[y>>2];A=d+36|0;B=+g[A>>2];C=d+52|0;D=+g[C>>2];g[a+4>>2]=k*x+n*z+q*B+t*D;E=d+8|0;F=+g[E>>2];G=d+24|0;H=+g[G>>2];I=d+40|0;J=+g[I>>2];K=d+56|0;L=+g[K>>2];g[a+8>>2]=k*F+n*H+q*J+t*L;M=d+12|0;N=+g[M>>2];O=d+28|0;P=+g[O>>2];Q=d+44|0;R=+g[Q>>2];S=d+60|0;T=+g[S>>2];g[a+12>>2]=k*N+n*P+q*R+t*T;t=+g[b+16>>2];q=+g[b+20>>2];n=+g[b+24>>2];k=+g[b+28>>2];g[a+16>>2]=t*m+q*p+n*s+k*v;g[f>>2]=t*x+q*z+n*B+k*D;g[a+24>>2]=t*F+q*H+n*J+k*L;g[a+28>>2]=t*N+q*P+n*R+k*T;T=+g[b+32>>2];k=+g[l>>2];R=+g[b+36>>2];n=+g[o>>2];P=+g[b+40>>2];q=+g[r>>2];N=+g[b+44>>2];t=+g[u>>2];g[a+32>>2]=T*k+R*n+P*q+N*t;L=+g[w>>2];J=+g[y>>2];H=+g[A>>2];F=+g[C>>2];g[a+36>>2]=T*L+R*J+P*H+N*F;D=+g[E>>2];B=+g[G>>2];z=+g[I>>2];x=+g[K>>2];g[h>>2]=T*D+R*B+P*z+N*x;v=+g[M>>2];s=+g[O>>2];p=+g[Q>>2];m=+g[S>>2];g[a+44>>2]=T*v+R*s+P*p+N*m;N=+g[b+48>>2];P=+g[b+52>>2];R=+g[b+56>>2];T=+g[b+60>>2];g[a+48>>2]=N*k+P*n+R*q+T*t;g[a+52>>2]=N*L+P*J+R*H+T*F;g[a+56>>2]=N*D+P*B+R*z+T*x;g[j>>2]=N*v+P*s+R*p+T*m;i=e;return}function dj(a,b){a=a|0;b=+b;var c=0,d=0.0,e=0.0;c=i;d=+Yq(b);b=+X(+d);e=+W(+d);g[a+20>>2]=e;g[a+36>>2]=-b;g[a+24>>2]=b;g[a+40>>2]=e;i=c;return}function ej(a,b){a=a|0;b=+b;var c=0,d=0.0,e=0.0;c=i;d=+Yq(b);b=+X(+d);e=+W(+d);g[a>>2]=e;g[a+32>>2]=b;g[a+8>>2]=-b;g[a+40>>2]=e;i=c;return}function fj(a){a=a|0;var b=0,c=0;b=i;t=0;na(63,a|0,3776);c=t;t=0;if(!(c&1)){Lt(a+108|0);i=b;return}b=Kb(-1,-1)|0;t=0;ma(155,a+108|0);a=t;t=0;if(a&1){a=Kb(-1,-1,0)|0;Xe(a)}else{Wb(b|0)}}function gj(a){a=a|0;var b=0,c=0;b=i;t=0;ma(63,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function hj(a){a=a|0;var b=0;b=i;fj(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function ij(a){a=a|0;var b=0;b=i;gj(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0);i=b;return}function jj(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[b>>2]|0;c[a>>2]=e;c[a+(c[e+ -12>>2]|0)>>2]=c[b+12>>2];df(a+8|0);i=d;return}function kj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+72|0;e=d;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;Tj(j,b+8|0);k=c[b+4>>2]|0;c[h>>2]=c[b>>2];c[g>>2]=k;t=0;k=f;b=h;c[k+0>>2]=c[b+0>>2];b=e;k=g;c[b+0>>2]=c[k+0>>2];Oa(15,a|0,j|0,f|0,e|0);e=t;t=0;if(!(e&1)){ek(j);i=d;return}d=Kb(-1,-1)|0;t=0;ma(246,j|0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{Wb(d|0)}}function lj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}c[b>>2]=f;g=a[e]|0;if((g&1)==0){h=(g&255)>>>1}else{h=c[d+4>>2]|0}c[b+4>>2]=f+h;i=i;return 1}function mj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b;b=xc(36)|0;e=a+4|0;a=c[e+4>>2]|0;f=d+4|0;c[f>>2]=c[e>>2];c[f+4>>2]=a;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=-1;c[d>>2]=4504;c[d+12>>2]=4524;t=0;na(64,b|0,d|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;f=I;sj(d);Jb(b|0);g=a;h=f;Wb(g|0)}t=0;La(13,b|0,4376,73);b=t;t=0;b=Kb(-1,-1)|0;f=I;sj(d);g=b;h=f;Wb(g|0)}function nj(a){a=a|0;var b=0;b=i;yB(a);i=b;return}function oj(a){a=a|0;var b=0;b=i;yB(a);_B(a);i=b;return}function pj(a){a=a|0;i=i;return 4104}function qj(a){a=a|0;var b=0;b=i;sj(a);i=b;return}function rj(a){a=a|0;var b=0;b=i;sj(a);i=b;return}function sj(a){a=a|0;var b=0;b=i;pg(a+12|0);yB(a);i=b;return}function tj(a){a=a|0;var b=0;b=i;sj(a+ -12|0);i=b;return}function uj(a){a=a|0;var b=0;b=i;sj(a+ -12|0);i=b;return}function vj(a){a=a|0;var b=0;b=i;sj(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function wj(a){a=a|0;var b=0;b=i;sj(a);_B(a);i=b;return}function xj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=YB(36)|0;g=f;t=0;h=e;j=d+8|0;a[h+0|0]=a[j+0|0]|0;La(23,g|0,b|0,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;_B(f);Wb(e|0)}if((f|0)==0){k=0;i=d;return k|0}k=f+(c[(c[f>>2]|0)+ -12>>2]|0)|0;i=d;return k|0}function yj(a){a=a|0;var b=0;b=xc(36)|0;t=0;na(65,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,4376,73)}}function zj(a){a=a|0;var b=0;b=i;wj(a+ -12|0);i=b;return}function Aj(a){a=a|0;var b=0,d=0;b=i;d=xj(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0)|0;i=b;return d|0}function Bj(a){a=a|0;yj(a+(c[(c[a>>2]|0)+ -16>>2]|0)|0)}function Cj(a){a=a|0;var b=0;b=i;wj(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function Dj(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+32|0;c[e>>2]=1376;Ej(a,b);c[a>>2]=4420;c[a+12>>2]=4448;c[e>>2]=4476;i=d;return}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;c[e>>2]=4040;f=b+4|0;g=c[f+4>>2]|0;h=a+4|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;t=0;na(49,a+12|0,b+12|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;yB(a);Wb(b|0)}else{c[e>>2]=4504;c[a+12>>2]=4524;i=d;return}}function Fj(a){a=a|0;var b=0;b=i;sj(a);_B(a);i=b;return}function Gj(a){a=a|0;var b=0;b=i;Fj(a+ -12|0);i=b;return}function Hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(66,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=4420;g=a+12|0;c[g>>2]=4448;c[e>>2]=4476;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;sj(f);h=b;j=d;Wb(j|0)}function Ij(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a+32|0;c[e>>2]=1376;f=a;t=0;na(66,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=4420;g=a+12|0;c[g>>2]=4448;c[e>>2]=4476;t=0;na(51,g|0,((b|0)==0?0:b+12|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;sj(f);h=b;j=d;Wb(j|0)}function Jj(b){b=b|0;var c=0;c=i;if((a[b+44|0]|0)==0){Xa(4536,4544,56,4592)}else{i=c;return b+48|0}return 0}function Kj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=d+8|0;g=b+44|0;if((a[g]|0)==0){Xa(4536,4544,51,4608)}else{h=b;j=b+36|0;c[f>>2]=c[b+40>>2];k=b+48|0;b=e;l=f;c[b+0>>2]=c[l+0>>2];l=Lj(h,j,e,k)|0;a[g]=l&1;i=d;return}}function Lj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;i=i+64|0;h=g;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=g+40|0;o=g+48|0;p=g+56|0;q=b+28|0;r=d;d=c[r>>2]|0;s=e;e=c[s>>2]|0;t=(d|0)==(e|0);a:do{if((c[q>>2]|0)==0){b:do{if(t){u=d;v=d}else{w=d;while(1){x=Mj(b,a[w]|0)|0;y=c[r>>2]|0;if(!x){u=e;v=y;break b}x=y+1|0;c[r>>2]=x;if((x|0)==(e|0)){u=e;v=e;break}else{w=x}}}}while(0);w=(v|0)==(u|0);if((c[q>>2]|0)!=0){if(w){z=u;A=15;break}else{B=v;A=17;break}}if(w){C=0;i=g;return C|0}w=Nj(b,a[v]|0)|0;x=c[r>>2]|0;if(w){c[r>>2]=x+1;D=v;break}if((x|0)==(u|0)){D=v;break}else{E=x}while(1){if(Mj(b,a[E]|0)|0){D=v;break a}if(Nj(b,a[c[r>>2]|0]|0)|0){D=v;break a}x=(c[r>>2]|0)+1|0;c[r>>2]=x;if((x|0)==(u|0)){D=v;break}else{E=x}}}else{if(t){z=d;A=15}else{B=d;A=17}}}while(0);if((A|0)==15){d=b+32|0;if((a[d]|0)!=0){C=0;i=g;return C|0}a[d]=1;c[m>>2]=z;c[n>>2]=z;z=l;d=m;c[z+0>>2]=c[d+0>>2];d=k;z=n;c[d+0>>2]=c[z+0>>2];Oj(l,k,f);C=1;i=g;return C|0}c:do{if((A|0)==17){k=Nj(b,a[B]|0)|0;l=b+32|0;z=(a[l]|0)==0;if(k){if(z){a[l]=1;D=B;break}else{c[r>>2]=(c[r>>2]|0)+1;a[l]=0;D=B;break}}do{if(z){if(!(Mj(b,a[c[r>>2]|0]|0)|0)){break}a[l]=1;D=B;break c}}while(0);z=Mj(b,a[c[r>>2]|0]|0)|0;k=c[r>>2]|0;if(z){z=k+1|0;c[r>>2]=z;F=z;G=z}else{F=k;G=B}d:do{if((F|0)!=(c[s>>2]|0)){k=F;do{if(Mj(b,a[k]|0)|0){break d}if(Nj(b,a[c[r>>2]|0]|0)|0){break d}k=(c[r>>2]|0)+1|0;c[r>>2]=k;}while((k|0)!=(c[s>>2]|0))}}while(0);a[l]=1;D=G}}while(0);c[o>>2]=D;c[p>>2]=c[r>>2];r=j;D=o;c[r+0>>2]=c[D+0>>2];D=h;r=p;c[D+0>>2]=c[r+0>>2];Oj(j,h,f);C=1;i=g;return C|0}function Mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=b+12|0;g=a[f]|0;if((g&1)==0){h=(g&255)>>>1}else{h=c[b+16>>2]|0}if((h|0)!=0){j=(zt(f,d,0)|0)!=-1;i=e;return j|0}if((a[b+25|0]|0)==0){j=0;i=e;return j|0}j=Rj(d)|0;i=e;return j|0}function Nj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a[b]|0;if((f&1)==0){g=(f&255)>>>1}else{g=c[b+4>>2]|0}if((g|0)!=0){h=(zt(b,d,0)|0)!=-1;i=e;return h|0}if((a[b+24|0]|0)==0){h=0;i=e;return h|0}h=Qj(d)|0;i=e;return h|0}function Oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;c[h>>2]=c[a>>2];c[j>>2]=c[b>>2];b=g;a=h;c[b+0>>2]=c[a+0>>2];a=f;b=j;c[a+0>>2]=c[b+0>>2];Pj(d,g,f)|0;i=e;return}function Pj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;g=d;d=c[g>>2]|0;h=e;e=c[h>>2]|0;j=e-d|0;k=b;l=a[k]|0;if((l&1)==0){m=l;n=10}else{l=c[b>>2]|0;m=l&255;n=(l&-2)+ -1|0}if(n>>>0<j>>>0){if((m&1)==0){o=(m&255)>>>1}else{o=c[b+4>>2]|0}xt(b,n,j-n|0,o,0,o,0);p=a[k]|0}else{p=m}if((p&1)==0){q=b+1|0}else{q=c[b+8>>2]|0}if((d|0)==(e|0)){r=q}else{e=d;d=q;while(1){a[d]=a[e]|0;q=(c[g>>2]|0)+1|0;c[g>>2]=q;p=d+1|0;if((q|0)==(c[h>>2]|0)){r=p;break}else{d=p;e=q}}}a[r]=0;if((a[k]&1)==0){a[k]=j<<1;i=f;return b|0}else{c[b+4>>2]=j;i=f;return b|0}return 0}function Qj(a){a=a|0;var b=0,c=0;b=i;c=(Fb(a<<24>>24|0)|0)!=0;i=b;return c|0}function Rj(a){a=a|0;var b=0,c=0;b=i;c=(cd(a<<24>>24|0)|0)!=0;i=b;return c|0}function Sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;Tj(f,d);g=b+36|0;h=d+36|0;c[g+0>>2]=c[h+0>>2];c[g+4>>2]=c[h+4>>2];a[g+8|0]=a[h+8|0]|0;t=0;na(46,b+48|0,d+48|0);d=t;t=0;if(!(d&1)){i=e;return}e=Kb(-1,-1)|0;t=0;ma(246,f|0);f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}else{Wb(e|0)}}function Tj(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=b;it(e,c);t=0;na(46,b+12|0,c+12|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;mt(e);Wb(f|0)}else{f=b+24|0;b=c+24|0;c=f+9|0;do{a[f]=a[b]|0;f=f+1|0;b=b+1|0}while((f|0)<(c|0));i=d;return}}function Uj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=b;Tj(h,d);c[b+36>>2]=c[e>>2];c[b+40>>2]=c[f>>2];a[b+44|0]=0;f=b+48|0;e=f;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;t=0;ma(247,b|0);b=t;t=0;if(!(b&1)){i=g;return}g=Kb(-1,-1)|0;mt(f);t=0;ma(246,h|0);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}else{Wb(g|0)}}function Vj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=d;f=d+8|0;g=b+44|0;if((a[g]|0)!=0){i=d;return}h=b+36|0;j=c[b+40>>2]|0;if((c[h>>2]|0)==(j|0)){k=0}else{l=b;c[f>>2]=j;j=b+48|0;b=e;m=f;c[b+0>>2]=c[m+0>>2];m=Lj(l,h,e,j)|0;k=m&1}a[g]=k;i=d;return}function Wj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=d;if((a[g]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}c[b>>2]=h;h=a[g]|0;if((h&1)==0){j=d+1|0;k=(h&255)>>>1}else{j=c[d+8>>2]|0;k=c[d+4>>2]|0}c[b+4>>2]=j+k;Tj(b+8|0,e);i=f;return}function Xj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;h=b;j=b;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;j=b+12|0;k=sC(d|0)|0;t=0;La(18,j|0,d|0,k|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;l=I;m=k;mt(h);Wb(m|0)}a[b+24|0]=0;a[b+25|0]=0;c[b+28>>2]=f;a[b+32|0]=0;if((e|0)==0){i=g;return}t=0;Ea(23,h|0,e|0)|0;e=t;t=0;if(!(e&1)){i=g;return}g=Kb(-1,-1)|0;e=I;mt(j);l=e;m=g;mt(h);Wb(m|0)}function Yj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;e=b+4|0;f=c[e>>2]|0;g=b;b=c[g>>2]|0;if((f|0)==(b|0)){i=d;return}t=0;na(67,a|0,(f-b|0)/12|0|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Gf(a);Wb(b|0)}Sf(a,c[g>>2]|0,c[e>>2]|0);i=d;return}function Zj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+8|0;f=e;g=b;h=c[g>>2]|0;j=c[b+4>>2]|0;if((h|0)==(j|0)){k=0;i=e;return k|0}c[f>>2]=0;b=a[h]|0;if(b<<24>>24==43){l=h+1|0;c[g>>2]=l;m=l;n=5}else if(b<<24>>24==45){b=h+1|0;c[g>>2]=b;g=_j(f,b,j)|0;b=c[f>>2]|0;o=0-b|0;p=g&b>>>0<2147483649}else{m=h;n=5}if((n|0)==5){n=_j(f,m,j)|0;j=c[f>>2]|0;o=j;p=n&(j|0)>-1}c[d>>2]=o;k=p;i=e;return k|0}function _j(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;g=i;i=i+24|0;h=g;j=g+8|0;k=f+ -1|0;c[b>>2]=0;if(k>>>0<e>>>0){l=0;i=g;return l|0}m=a[k]|0;if((m+ -48<<24>>24&255)>9){l=0;i=g;return l|0}c[b>>2]=(m<<24>>24)+ -48;m=f+ -2|0;$y(h);t=0;f=Ia(1)|0;k=t;t=0;a:do{if(k&1){n=24}else{t=0;o=Ea(24,h|0,f|0)|0;p=t;t=0;if(p&1){n=24;break}b:do{if(o){q=m;r=1;s=0;n=37}else{t=0;p=Ea(20,h|0,21512)|0;u=t;t=0;if(u&1){n=24;break a}u=p;t=0;na(c[(c[p>>2]|0)+20>>2]|0,j|0,u|0);v=t;t=0;if(v&1){n=24;break a}v=j;w=a[v]|0;x=(w&1)==0;if(x){y=(w&255)>>>1}else{y=c[j+4>>2]|0}c:do{if((y|0)==0){z=m;A=1;B=0}else{if(x){C=j+1|0}else{C=c[j+8>>2]|0}if((a[C]|0)<=0){z=m;A=1;B=0;break}t=0;w=oa(c[(c[p>>2]|0)+16>>2]|0,u|0)|0;D=t;t=0;if(D&1){D=Kb(-1,-1)|0;E=I;mt(j);F=D;G=E;break a}E=(a[v]&1)==0;if(E){H=j+1|0}else{H=c[j+8>>2]|0}d:do{if(m>>>0<e>>>0){J=1}else{D=y+ -1|0;K=j+1|0;L=j+8|0;M=m;N=0;O=1;P=0;Q=(d[H]|0)+255&255;while(1){if(Q<<24>>24==0){if(!((a[M]|0)==w<<24>>24)){z=M;A=O;B=P;break c}if((M|0)==(e|0)){J=0;break d}R=((N&255)>>>0<D>>>0)+N<<24>>24;S=R;T=O;U=P;V=a[(E?K:c[L>>2]|0)+(R&255)|0]|0}else{R=O*10|0;W=((R>>>0)/10|0|0)==(O|0)?P:1;X=a[M]|0;Y=(X<<24>>24)+ -48|0;Z=ea(Y,R)|0;if((X+ -48<<24>>24&255)>9){J=0;break d}X=(Y|0)!=0;if(X){if(((Z>>>0)/(Y>>>0)|0|0)!=(R|0)){J=0;break d}}Y=c[b>>2]|0;if(Y>>>0>~Z>>>0){J=0;break d}if(!((W&1)==0|X^1)){J=0;break d}c[b>>2]=Y+Z;S=N;T=R;U=W;V=Q+ -1<<24>>24}W=M+ -1|0;if(W>>>0<e>>>0){J=1;break}else{M=W;N=S;O=T;P=U;Q=V}}}}while(0);mt(j);_=J;break b}}while(0);mt(j);q=z;r=A;s=(B&1)!=0;n=37}}while(0);e:do{if((n|0)==37){if(q>>>0<e>>>0){_=1;break}else{$=q;aa=r;ba=s}while(1){o=aa*10|0;v=ba|((o>>>0)/10|0|0)!=(aa|0);u=a[$]|0;p=(u<<24>>24)+ -48|0;x=ea(p,o)|0;if((u+ -48<<24>>24&255)>9){_=0;break e}u=(p|0)!=0;if(u){if(((x>>>0)/(p>>>0)|0|0)!=(o|0)){_=0;break e}}p=c[b>>2]|0;if(p>>>0>~x>>>0|v&u){_=0;break e}c[b>>2]=p+x;x=$+ -1|0;if(x>>>0<e>>>0){_=1;break}else{$=x;ba=v;aa=o}}}}while(0);bz(h);l=_;i=g;return l|0}}while(0);if((n|0)==24){n=Kb(-1,-1)|0;F=n;G=I}t=0;ma(230,h|0);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}else{Wb(F|0)}return 0}function $j(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;f=b+4|0;g=c[f>>2]|0;h=b;b=c[h>>2]|0;if((g|0)==(b|0)){i=d;return}t=0;na(68,a|0,(g-b|0)/44|0|0);b=t;t=0;do{if(!(b&1)){t=0;La(24,a|0,c[h>>2]|0,c[f>>2]|0);g=t;t=0;if(g&1){break}i=d;return}}while(0);d=Kb(-1,-1)|0;Hf(e);Wb(d|0)}function ak(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if(b>>>0>97612893){Uy(0)}else{e=YB(b*44|0)|0;c[a+4>>2]=e;c[a>>2]=e;c[a+8>>2]=e+(b*44|0);i=d;return}}function bk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;if((b|0)==(d|0)){i=e;return}f=a+4|0;a=b;b=c[f>>2]|0;do{if((b|0)==0){g=0}else{ck(b,a);g=c[f>>2]|0}b=g+44|0;c[f>>2]=b;a=a+44|0;}while((a|0)!=(d|0));i=e;return}function ck(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=e;c[g>>2]=c[h>>2];j=b+4|0;dk(j,e+4|0);c[g>>2]=c[h>>2];k=b+16|0;t=0;na(69,k|0,e+16|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;m=I;n=l;o=j;Jf(o);Wb(n|0)}c[g>>2]=c[h>>2];t=0;na(69,b+28|0,e+28|0);h=t;t=0;if(!(h&1)){h=e+40|0;e=b+40|0;b=d[h]|d[h+1|0]<<8;a[e]=b;a[e+1|0]=b>>8;i=f;return}f=Kb(-1,-1)|0;b=I;Jf(k);m=b;n=f;o=j;Jf(o);Wb(n|0)}function dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;e=b+4|0;f=b;b=(c[e>>2]|0)-(c[f>>2]|0)>>2;if((b|0)==0){i=d;return}t=0;na(70,a|0,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Jf(a);Wb(b|0)}Bf(a,c[f>>2]|0,c[e>>2]|0);i=d;return}function ek(a){a=a|0;var b=0;b=i;mt(a+12|0);mt(a);i=b;return}function fk(a){a=a|0;var b=0;b=i;mt(a+48|0);ek(a);i=b;return}function gk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0,u=0,v=0,w=0,x=0;e=i;i=i+96|0;f=e;h=e+16|0;j=e+24|0;l=e+56|0;m=e+80|0;n=f;c[n>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[l+4>>2]=f;hk(j,4904,l);l=f;o=j+16|0;c[o>>2]=0;c[o+4>>2]=l;o=j+24|0;c[o>>2]=0;c[o+4>>2]=l;t=0;na(71,h|0,j|0);j=t;t=0;a:do{if(!(j&1)){t=0;Oa(16,e+64|0,d|0,h|0,4712);l=t;t=0;do{if(!(l&1)){o=c[n>>2]|0;p=+g[o>>2];q=+g[o+4>>2];r=+g[o+8>>2];g[m>>2]=p;g[m+4>>2]=q;g[m+8>>2]=r;o=b+24|0;s=c[o>>2]|0;if((s|0)==(c[b+28>>2]|0)){t=0;na(72,b+20|0,m|0);u=t;t=0;if(u&1){break}}else{if((s|0)!=0){u=s;g[k>>2]=p;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0];u=s+4|0;g[k>>2]=q;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0];u=s+8|0;g[k>>2]=r;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0]}c[o>>2]=s+12}t=0;ma(248,c[h>>2]|0);s=t;t=0;if(s&1){break a}Ff(f);i=e;return}}while(0);l=Kb(-1,-1)|0;s=I;t=0;ma(248,c[h>>2]|0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{v=s;w=l;x=f;Ff(x);Wb(w|0)}}}while(0);h=Kb(-1,-1)|0;v=I;w=h;x=f;Ff(x);Wb(w|0)}function hk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=d;while(1){if((a[g]|0)==0){break}else{g=g+1|0}}h=b;c[h>>2]=d;c[h+4>>2]=g;g=e;e=c[g+4>>2]|0;h=b+8|0;c[h>>2]=c[g>>2];c[h+4>>2]=e;i=f;return}function ik(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=f+8|0;c[g>>2]=d;j=d;while(1){c[h>>2]=j;if((a[j]|0)==0){break}else{j=j+1|0}}_m(b,g,h,e,0);i=f;return}function jk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+96|0;f=e;h=e+16|0;j=e+24|0;l=e+56|0;m=e+80|0;n=f;c[n>>2]=0;o=f+4|0;c[o>>2]=0;c[f+8>>2]=0;c[l+4>>2]=f;hk(j,4912,l);l=f;p=j+16|0;c[p>>2]=0;c[p+4>>2]=l;p=j+24|0;c[p>>2]=0;c[p+4>>2]=l;t=0;na(73,h|0,j|0);j=t;t=0;a:do{if(!(j&1)){t=0;Oa(16,e+64|0,d|0,h|0,4712);l=t;t=0;do{if(!(l&1)){p=c[n>>2]|0;if(((c[o>>2]|0)-p|0)==12){q=+g[p+8>>2]}else{q=0.0}r=+g[p>>2];s=+g[p+4>>2];g[m>>2]=r;g[m+4>>2]=s;g[m+8>>2]=q;p=b+48|0;u=c[p>>2]|0;if((u|0)==(c[b+52>>2]|0)){t=0;na(72,b+44|0,m|0);v=t;t=0;if(v&1){break}}else{if((u|0)!=0){v=u;g[k>>2]=r;a[v]=a[k];a[v+1|0]=a[k+1|0];a[v+2|0]=a[k+2|0];a[v+3|0]=a[k+3|0];v=u+4|0;g[k>>2]=s;a[v]=a[k];a[v+1|0]=a[k+1|0];a[v+2|0]=a[k+2|0];a[v+3|0]=a[k+3|0];v=u+8|0;g[k>>2]=q;a[v]=a[k];a[v+1|0]=a[k+1|0];a[v+2|0]=a[k+2|0];a[v+3|0]=a[k+3|0]}c[p>>2]=u+12}t=0;ma(248,c[h>>2]|0);u=t;t=0;if(u&1){break a}Ff(f);i=e;return}}while(0);l=Kb(-1,-1)|0;u=I;t=0;ma(248,c[h>>2]|0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{w=l;x=u;y=f;Ff(y);Wb(w|0)}}}while(0);h=Kb(-1,-1)|0;w=h;x=I;y=f;Ff(y);Wb(w|0)}function kk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0,u=0,v=0,w=0,x=0;e=i;i=i+96|0;f=e;h=e+16|0;j=e+24|0;l=e+56|0;m=e+80|0;n=f;c[n>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[l+4>>2]=f;hk(j,4920,l);l=f;o=j+16|0;c[o>>2]=0;c[o+4>>2]=l;o=j+24|0;c[o>>2]=0;c[o+4>>2]=l;t=0;na(71,h|0,j|0);j=t;t=0;a:do{if(!(j&1)){t=0;Oa(16,e+64|0,d|0,h|0,4712);l=t;t=0;do{if(!(l&1)){o=c[n>>2]|0;p=+g[o>>2];q=+g[o+4>>2];r=+g[o+8>>2];g[m>>2]=p;g[m+4>>2]=q;g[m+8>>2]=r;o=b+36|0;s=c[o>>2]|0;if((s|0)==(c[b+40>>2]|0)){t=0;na(72,b+32|0,m|0);u=t;t=0;if(u&1){break}}else{if((s|0)!=0){u=s;g[k>>2]=p;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0];u=s+4|0;g[k>>2]=q;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0];u=s+8|0;g[k>>2]=r;a[u]=a[k];a[u+1|0]=a[k+1|0];a[u+2|0]=a[k+2|0];a[u+3|0]=a[k+3|0]}c[o>>2]=s+12}t=0;ma(248,c[h>>2]|0);s=t;t=0;if(s&1){break a}Ff(f);i=e;return}}while(0);l=Kb(-1,-1)|0;s=I;t=0;ma(248,c[h>>2]|0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{v=s;w=l;x=f;Ff(x);Wb(w|0)}}}while(0);h=Kb(-1,-1)|0;v=I;w=h;x=f;Ff(x);Wb(w|0)}function lk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;e=i;i=i+264|0;f=e;g=e+16|0;h=e+32|0;j=e+48|0;k=e+56|0;l=e+96|0;m=e+120|0;n=e+136|0;o=e+144|0;p=e+152|0;q=e+176|0;r=e+192|0;s=e+240|0;u=e+248|0;v=e+256|0;w=f;c[w>>2]=0;x=f+4|0;c[x>>2]=0;c[f+8>>2]=0;y=g;c[y>>2]=0;z=g+4|0;c[z>>2]=0;c[g+8>>2]=0;A=h;c[A>>2]=0;B=h+4|0;c[B>>2]=0;c[h+8>>2]=0;C=n;c[C>>2]=0;c[C+4>>2]=g;nk(m,4928,n);mk(l,m,4928);m=h;n=l;l=k;c[l>>2]=0;c[l+4>>2]=f;l=k+8|0;c[l+0>>2]=c[n+0>>2];c[l+4>>2]=c[n+4>>2];c[l+8>>2]=c[n+8>>2];c[l+12>>2]=c[n+12>>2];c[l+16>>2]=c[n+16>>2];c[l+20>>2]=c[n+20>>2];n=k+32|0;c[n>>2]=0;c[n+4>>2]=m;t=0;na(74,j|0,k|0);k=t;t=0;a:do{if(!(k&1)){ok(p,4936,j);c[p+12>>2]=j;c[p+16>>2]=j;c[p+20>>2]=j;t=0;na(75,o|0,p|0);m=t;t=0;b:do{if(m&1){D=5}else{t=0;Oa(16,q|0,d|0,o|0,4712);n=t;t=0;c:do{if(n&1){D=6}else{l=c[x>>2]|0;C=c[w>>2]|0;E=l-C>>2;F=r+4|0;G=F+36|0;do{c[F>>2]=0;F=F+4|0}while((F|0)<(G|0));c[r>>2]=E+ -1;F=r+40|0;a[F]=0;G=r+41|0;a[G]=0;d:do{if((C|0)==(l|0)){D=21}else{H=r+8|0;J=r+12|0;K=r+4|0;L=0;M=0;N=C;while(1){O=(c[N>>2]|0)+ -1|0;c[s>>2]=O;if((M|0)==(L|0)){t=0;na(76,K|0,s|0);P=t;t=0;if(P&1){break}}else{if((M|0)!=0){c[M>>2]=O}c[H>>2]=M+4}O=N+4|0;if((O|0)==(l|0)){D=21;break d}L=c[J>>2]|0;M=c[H>>2]|0;N=O}N=Kb(-1,-1)|0;Q=N;R=I}}while(0);e:do{if((D|0)==21){l=c[A>>2]|0;C=c[B>>2]|0;do{if((l|0)==(C|0)){D=34}else{if((C-l|0)==((c[x>>2]|0)-(c[w>>2]|0)|0)){S=C;T=l}else{t=0;Ea(25,16720,4944)|0;E=t;t=0;if(E&1){break}S=c[B>>2]|0;T=c[A>>2]|0}f:do{if((T|0)!=(S|0)){E=r+32|0;N=r+36|0;H=r+28|0;M=T;while(1){J=(c[M>>2]|0)+ -1|0;c[u>>2]=J;L=c[E>>2]|0;if((L|0)==(c[N>>2]|0)){t=0;na(76,H|0,u|0);K=t;t=0;if(K&1){break}}else{if((L|0)!=0){c[L>>2]=J}c[E>>2]=L+4}M=M+4|0;if((M|0)==(S|0)){break f}}M=Kb(-1,-1)|0;Q=M;R=I;break e}}while(0);a[G]=1;D=34}}while(0);do{if((D|0)==34){l=c[y>>2]|0;C=c[z>>2]|0;if((l|0)!=(C|0)){if((C-l|0)==((c[x>>2]|0)-(c[w>>2]|0)|0)){U=C;V=l}else{t=0;Ea(25,16720,4944)|0;l=t;t=0;if(l&1){break}U=c[z>>2]|0;V=c[y>>2]|0}g:do{if((V|0)!=(U|0)){l=r+20|0;C=r+24|0;M=r+16|0;E=V;while(1){H=(c[E>>2]|0)+ -1|0;c[v>>2]=H;N=c[l>>2]|0;if((N|0)==(c[C>>2]|0)){t=0;na(76,M|0,v|0);L=t;t=0;if(L&1){break}}else{if((N|0)!=0){c[N>>2]=H}c[l>>2]=N+4}E=E+4|0;if((E|0)==(U|0)){break g}}E=Kb(-1,-1)|0;Q=E;R=I;break e}}while(0);a[F]=1}E=b+60|0;l=c[E>>2]|0;if((l|0)==(c[b+64>>2]|0)){t=0;na(78,b+56|0,r|0);M=t;t=0;if(M&1){break}}else{if((l|0)==0){W=0}else{t=0;na(77,l|0,r|0);l=t;t=0;if(l&1){break}W=c[E>>2]|0}c[E>>2]=W+44}t=0;ma(229,r|0);E=t;t=0;if(E&1){D=6;break c}t=0;ma(248,c[o>>2]|0);E=t;t=0;if(E&1){D=5;break b}t=0;ma(248,c[j>>2]|0);E=t;t=0;if(E&1){break a}gn(h);gn(g);gn(f);i=e;return}}while(0);E=Kb(-1,-1)|0;Q=E;R=I}}while(0);t=0;ma(229,r|0);F=t;t=0;if(!(F&1)){X=Q;Y=R;break}Z=Kb(-1,-1,0)|0;_=I;Xe(Z)}}while(0);if((D|0)==6){n=Kb(-1,-1)|0;X=n;Y=I}t=0;ma(248,c[o>>2]|0);n=t;t=0;if(!(n&1)){$=X;aa=Y;break}Z=Kb(-1,-1,0)|0;_=I;Xe(Z)}}while(0);if((D|0)==5){m=Kb(-1,-1)|0;$=m;aa=I}t=0;ma(248,c[j>>2]|0);m=t;t=0;if(m&1){Z=Kb(-1,-1,0)|0;_=I;Xe(Z)}else{ba=$;ca=aa;da=h;gn(da);ea=g;gn(ea);fa=f;gn(fa);Wb(ba|0)}}}while(0);aa=Kb(-1,-1)|0;ba=aa;ca=I;da=h;gn(da);ea=g;gn(ea);fa=f;gn(fa);Wb(ba|0)}function mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=e;while(1){if((a[g]|0)==0){break}else{g=g+1|0}}h=b;j=d;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];j=b+16|0;c[j>>2]=e;c[j+4>>2]=g;i=f;return}function nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=d;while(1){if((a[g]|0)==0){break}else{g=g+1|0}}h=b;c[h>>2]=d;c[h+4>>2]=g;g=e;e=c[g+4>>2]|0;h=b+8|0;c[h>>2]=c[g>>2];c[h+4>>2]=e;i=f;return}function ok(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=d;while(1){if((a[g]|0)==0){break}else{g=g+1|0}}h=b;c[h>>2]=d;c[h+4>>2]=g;c[b+8>>2]=e;i=f;return}



function Aw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;j=i;i=i+56|0;k=j;l=j+8|0;m=j+24|0;n=j+32|0;o=j+40|0;if((c[f+4>>2]&1|0)==0){p=c[(c[d>>2]|0)+24>>2]|0;c[m>>2]=c[e>>2];q=h&1;r=k;s=m;c[r+0>>2]=c[s+0>>2];he[p&31](b,d,k,f,g,q);i=j;return}Ot(n,f);f=n;n=c[f>>2]|0;if((c[5380]|0)==-1){u=5}else{c[l>>2]=21520;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21520,l|0,280);l=t;t=0;if(!(l&1)){u=5}}do{if((u|0)==5){l=(c[21524>>2]|0)+ -1|0;q=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-q>>2>>>0>l>>>0){g=c[q+(l<<2)>>2]|0;if((g|0)==0){break}k=g;Ks(c[f>>2]|0)|0;d=c[g>>2]|0;if(h){_d[c[d+24>>2]&255](o,k)}else{_d[c[d+28>>2]&255](o,k)}k=o;d=a[k]|0;if((d&1)==0){g=o+4|0;v=g;w=o+8|0;x=g}else{g=o+8|0;v=c[g>>2]|0;w=g;x=o+4|0}g=e;p=d;d=v;a:while(1){if((p&1)==0){y=x;z=(p&255)>>>1}else{y=c[w>>2]|0;z=c[x>>2]|0}if((d|0)==(y+(z<<2)|0)){u=29;break}s=c[d>>2]|0;r=c[g>>2]|0;do{if((r|0)!=0){m=r+24|0;A=c[m>>2]|0;if((A|0)==(c[r+28>>2]|0)){t=0;B=Ea(c[(c[r>>2]|0)+52>>2]|0,r|0,s|0)|0;C=t;t=0;if(C&1){u=28;break a}else{D=B}}else{c[m>>2]=A+4;c[A>>2]=s;D=s}if(!((D|0)==-1)){break}c[g>>2]=0}}while(0);p=a[k]|0;d=d+4|0}if((u|0)==28){d=Kb(-1,-1)|0;k=I;Dt(o);E=d;F=k;Wb(E|0)}else if((u|0)==29){c[b>>2]=c[g>>2];Dt(o);i=j;return}}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){break}}}while(0);j=Kb(-1,-1)|0;o=I;Ks(c[f>>2]|0)|0;E=j;F=o;Wb(E|0)}function Bw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+8|0;m=i;i=i+16|0;n=i;i=i+88|0;o=i;i=i+8|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=l;a[s+0|0]=a[20152|0]|0;a[s+1|0]=a[20153|0]|0;a[s+2|0]=a[20154|0]|0;a[s+3|0]=a[20155|0]|0;a[s+4|0]=a[20156|0]|0;a[s+5|0]=a[20157|0]|0;u=l+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=u}else{a[u]=43;x=l+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}a[y]=108;x=y+1|0;y=w&74;do{if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else if((y|0)==64){a[x]=111}else{a[x]=100}}while(0);x=m;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;y=sa(33,2147483647,21264,0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;rc(21256);Wb(w|0)}else{c[5312]=y;Nb(21256);break}}}while(0);y=c[5312]|0;c[k>>2]=h;h=ow(x,12,y,s,k)|0;k=m+h|0;s=c[v>>2]&176;do{if((s|0)==32){z=k}else if((s|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=m+1|0;break}if(!((h|0)>1&v<<24>>24==48)){A=22;break}v=a[m+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=m+2|0}else{A=22}}while(0);if((A|0)==22){z=x}A=n;Ot(q,f);t=0;Aa(44,x|0,z|0,k|0,A|0,o|0,p|0,q|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;Ks(c[q>>2]|0)|0;Wb(k|0)}else{Ks(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;p=j;q=r;c[p+0>>2]=c[q+0>>2];Dw(b,j,A,e,o,f,g);i=d;return}}function Cw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+48|0;l=k;m=k+16|0;n=k+32|0;o=j;j=c[o>>2]|0;if(!((c[5340]|0)==-1)){c[m>>2]=21360;c[m+4>>2]=279;c[m+8>>2]=0;et(21360,m,280)}m=(c[21364>>2]|0)+ -1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}q=j;r=c[o>>2]|0;if(!((c[5380]|0)==-1)){c[l>>2]=21520;c[l+4>>2]=279;c[l+8>>2]=0;et(21520,l,280)}l=(c[21524>>2]|0)+ -1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}s=r;_d[c[(c[r>>2]|0)+20>>2]&255](n,s);u=n;l=a[u]|0;if((l&1)==0){v=(l&255)>>>1}else{v=c[n+4>>2]|0}a:do{if((v|0)==0){t=0;Ja(c[(c[j>>2]|0)+48>>2]|0,q|0,b|0,e|0,f|0)|0;l=t;t=0;if(l&1){w=18;break}l=f+(e-b<<2)|0;c[h>>2]=l;x=l}else{c[h>>2]=f;l=a[b]|0;if(l<<24>>24==43|l<<24>>24==45){t=0;o=Ea(c[(c[j>>2]|0)+44>>2]|0,q|0,l|0)|0;l=t;t=0;if(l&1){w=18;break}l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;y=b+1|0}else{y=b}do{if((e-y|0)>1){if((a[y]|0)!=48){z=y;break}o=y+1|0;l=a[o]|0;if(!(l<<24>>24==88|l<<24>>24==120)){z=y;break}l=j;t=0;m=Ea(c[(c[l>>2]|0)+44>>2]|0,q|0,48)|0;p=t;t=0;if(p&1){w=18;break a}p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;t=0;m=Ea(c[(c[l>>2]|0)+44>>2]|0,q|0,a[o]|0)|0;o=t;t=0;if(o&1){w=18;break a}o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=m;z=y+2|0}else{z=y}}while(0);do{if((z|0)!=(e|0)){m=e+ -1|0;if(m>>>0>z>>>0){A=z;B=m}else{break}do{m=a[A]|0;a[A]=a[B]|0;a[B]=m;A=A+1|0;B=B+ -1|0;}while(A>>>0<B>>>0)}}while(0);t=0;m=oa(c[(c[r>>2]|0)+16>>2]|0,s|0)|0;o=t;t=0;if(o&1){w=18;break}b:do{if(z>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;C=n+8|0;D=0;E=0;F=z;while(1){G=(a[u]&1)==0;do{if((a[(G?o:c[C>>2]|0)+E|0]|0)==0){H=D;J=E}else{if((D|0)!=(a[(G?o:c[C>>2]|0)+E|0]|0)){H=D;J=E;break}K=c[h>>2]|0;c[h>>2]=K+4;c[K>>2]=m;K=a[u]|0;if((K&1)==0){L=(K&255)>>>1}else{L=c[p>>2]|0}H=0;J=(E>>>0<(L+ -1|0)>>>0)+E|0}}while(0);t=0;G=Ea(c[(c[l>>2]|0)+44>>2]|0,q|0,a[F]|0)|0;K=t;t=0;if(K&1){break}K=c[h>>2]|0;M=K+4|0;c[h>>2]=M;c[K>>2]=G;G=F+1|0;if(G>>>0<e>>>0){D=H+1|0;E=J;F=G}else{N=M;break b}}F=Kb(-1,-1)|0;O=F;P=I;lt(n);Wb(O|0)}else{N=c[h>>2]|0}}while(0);m=f+(z-b<<2)|0;if((m|0)==(N|0)){x=N;break}F=N+ -4|0;if(F>>>0>m>>>0){Q=m;R=F}else{x=N;break}while(1){F=c[Q>>2]|0;c[Q>>2]=c[R>>2];c[R>>2]=F;F=Q+4|0;m=R+ -4|0;if(F>>>0<m>>>0){R=m;Q=F}else{x=N;break}}}}while(0);if((w|0)==18){w=Kb(-1,-1)|0;O=w;P=I;lt(n);Wb(O|0)}if((d|0)==(e|0)){S=x;c[g>>2]=S;lt(n);i=k;return}S=f+(d-b<<2)|0;c[g>>2]=S;lt(n);i=k;return}function Dw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=k;m=d;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((de[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Ct(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}t=0;g=sa(c[(c[d>>2]|0)+48>>2]|0,d|0,r|0,q|0)|0;e=t;t=0;if(e&1){e=Kb(-1,-1)|0;Dt(l);Wb(e|0)}if((g|0)==(q|0)){Dt(l);break}c[m>>2]=0;c[b>>2]=0;Dt(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((de[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Ew(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;k=d;l=d+8|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+168|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=m;m=u+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=m}else{a[m]=43;x=u+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}x=y+2|0;a[y]=108;a[y+1|0]=108;y=w&74;do{if((y|0)==64){a[x]=111}else if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else{a[x]=100}}while(0);x=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;w=sa(33,2147483647,21264,0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1)|0;rc(21256);Wb(y|0)}else{c[5312]=w;Nb(21256);break}}}while(0);w=c[5312]|0;y=l;c[y>>2]=h;c[y+4>>2]=j;j=ow(x,22,w,u,l)|0;l=n+j|0;u=c[v>>2]&176;do{if((u|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=n+1|0;break}if(!((j|0)>1&v<<24>>24==48)){A=22;break}v=a[n+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=n+2|0}else if((u|0)==32){z=l}else{A=22}}while(0);if((A|0)==22){z=x}A=o;Ot(r,f);t=0;Aa(44,x|0,z|0,l|0,A|0,p|0,q|0,r|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;Ks(c[r>>2]|0)|0;Wb(l|0)}else{Ks(c[r>>2]|0)|0;c[s>>2]=c[e>>2];e=c[p>>2]|0;p=c[q>>2]|0;q=k;r=s;c[q+0>>2]=c[r+0>>2];Dw(b,k,A,e,p,f,g);i=d;return}}function Fw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+8|0;m=i;i=i+16|0;n=i;i=i+88|0;o=i;i=i+8|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=l;a[s+0|0]=a[20152|0]|0;a[s+1|0]=a[20153|0]|0;a[s+2|0]=a[20154|0]|0;a[s+3|0]=a[20155|0]|0;a[s+4|0]=a[20156|0]|0;a[s+5|0]=a[20157|0]|0;u=l+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=u}else{a[u]=43;x=l+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}a[y]=108;x=y+1|0;y=w&74;do{if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else if((y|0)==64){a[x]=111}else{a[x]=117}}while(0);x=m;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;y=sa(33,2147483647,21264,0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;rc(21256);Wb(w|0)}else{c[5312]=y;Nb(21256);break}}}while(0);y=c[5312]|0;c[k>>2]=h;h=ow(x,12,y,s,k)|0;k=m+h|0;s=c[v>>2]&176;do{if((s|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=m+1|0;break}if(!((h|0)>1&v<<24>>24==48)){A=22;break}v=a[m+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=m+2|0}else if((s|0)==32){z=k}else{A=22}}while(0);if((A|0)==22){z=x}A=n;Ot(q,f);t=0;Aa(44,x|0,z|0,k|0,A|0,o|0,p|0,q|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;Ks(c[q>>2]|0)|0;Wb(k|0)}else{Ks(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;p=j;q=r;c[p+0>>2]=c[q+0>>2];Dw(b,j,A,e,o,f,g);i=d;return}}function Gw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;k=d;l=d+8|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+176|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=m;m=u+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=m}else{a[m]=43;x=u+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}x=y+2|0;a[y]=108;a[y+1|0]=108;y=w&74;do{if((y|0)==64){a[x]=111}else if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else{a[x]=117}}while(0);x=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;w=sa(33,2147483647,21264,0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1)|0;rc(21256);Wb(y|0)}else{c[5312]=w;Nb(21256);break}}}while(0);w=c[5312]|0;y=l;c[y>>2]=h;c[y+4>>2]=j;j=ow(x,23,w,u,l)|0;l=n+j|0;u=c[v>>2]&176;do{if((u|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=n+1|0;break}if(!((j|0)>1&v<<24>>24==48)){A=22;break}v=a[n+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=n+2|0}else if((u|0)==32){z=l}else{A=22}}while(0);if((A|0)==22){z=x}A=o;Ot(r,f);t=0;Aa(44,x|0,z|0,l|0,A|0,p|0,q|0,r|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;Ks(c[r>>2]|0)|0;Wb(l|0)}else{Ks(c[r>>2]|0)|0;c[s>>2]=c[e>>2];e=c[p>>2]|0;p=c[q>>2]|0;q=k;r=s;c[q+0>>2]=c[r+0>>2];Dw(b,k,A,e,p,f,g);i=d;return}}function Hw(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+24|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+8|0;r=i;i=i+32|0;s=i;i=i+8|0;u=i;i=i+232|0;v=i;i=i+8|0;w=i;i=i+8|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;A=q;c[A>>2]=37;c[A+4>>2]=0;A=q;q=A+1|0;B=f+4|0;C=c[B>>2]|0;if((C&2048|0)==0){D=q}else{a[q]=43;D=A+2|0}if((C&1024|0)==0){E=D}else{a[D]=35;E=D+1|0}D=C&260;q=C>>>14;do{if((D|0)==260){if((q&1|0)==0){a[E]=97;F=0;break}else{a[E]=65;F=0;break}}else{a[E]=46;C=E+2|0;a[E+1|0]=42;if((D|0)==4){if((q&1|0)==0){a[C]=102;F=1;break}else{a[C]=70;F=1;break}}else if((D|0)==256){if((q&1|0)==0){a[C]=101;F=1;break}else{a[C]=69;F=1;break}}else{if((q&1|0)==0){a[C]=103;F=1;break}else{a[C]=71;F=1;break}}}}while(0);q=r;c[s>>2]=q;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;D=t;t=0;if(D&1){D=Kb(-1,-1)|0;rc(21256);Wb(D|0)}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;if(F){c[p>>2]=c[f+8>>2];D=p+4|0;h[k>>3]=j;c[D>>2]=c[k>>2];c[D+4>>2]=c[k+4>>2];G=ow(q,30,r,A,p)|0}else{p=o;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];G=ow(q,30,r,A,o)|0}a:do{if((G|0)>29){o=(a[21256]|0)==0;b:do{if(F){do{if(o){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;p=t;t=0;if(p&1){p=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=p;break b}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;t=0;c[n>>2]=c[f+8>>2];p=n+4|0;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];p=Ja(18,s|0,r|0,A|0,n|0)|0;r=t;t=0;if(r&1){K=36}else{L=p;K=44}}else{do{if(o){if((Va(21256)|0)==0){break}t=0;p=sa(33,2147483647,21264,0)|0;r=t;t=0;if(r&1){r=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=r;break b}else{c[5312]=p;Nb(21256);break}}}while(0);p=c[5312]|0;t=0;c[m>>2]=c[f+8>>2];r=m+4|0;h[k>>3]=j;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];r=Ja(18,s|0,p|0,A|0,m|0)|0;p=t;t=0;if(p&1){K=36}else{L=r;K=44}}}while(0);do{if((K|0)==44){o=c[s>>2]|0;if((o|0)!=0){M=o;N=o;O=L;break a}t=0;Ma(5);o=t;t=0;if(o&1){K=36;break}o=c[s>>2]|0;M=o;N=o;O=L;break a}}while(0);if((K|0)==36){o=Kb(-1,-1)|0;H=I;J=o}P=J;Q=H;Wb(P|0)}else{M=c[s>>2]|0;N=0;O=G}}while(0);G=M+O|0;H=c[B>>2]&176;do{if((H|0)==32){R=G}else if((H|0)==16){B=a[M]|0;if(B<<24>>24==43|B<<24>>24==45){R=M+1|0;break}if(!((O|0)>1&B<<24>>24==48)){K=53;break}B=a[M+1|0]|0;if(!(B<<24>>24==88|B<<24>>24==120)){K=53;break}R=M+2|0}else{K=53}}while(0);if((K|0)==53){R=M}do{if((M|0)==(q|0)){S=q;T=0;U=u;K=59}else{H=TB(O<<3)|0;B=H;if((H|0)!=0){S=M;T=B;U=B;K=59;break}t=0;Ma(5);H=t;t=0;if(H&1){V=0;K=58;break}S=c[s>>2]|0;T=B;U=B;K=59}}while(0);do{if((K|0)==59){t=0;na(42,x|0,f|0);s=t;t=0;if(s&1){V=T;K=58;break}t=0;Aa(45,S|0,R|0,G|0,U|0,v|0,w|0,x|0);s=t;t=0;if(s&1){s=Kb(-1,-1)|0;M=I;Ks(c[x>>2]|0)|0;W=s;X=M;Y=T;break}Ks(c[x>>2]|0)|0;M=e;c[z>>2]=c[M>>2];s=c[v>>2]|0;O=c[w>>2]|0;t=0;u=l;q=z;c[u+0>>2]=c[q+0>>2];Aa(46,y|0,l|0,U|0,s|0,O|0,f|0,g|0);O=t;t=0;if(O&1){V=T;K=58;break}O=c[y>>2]|0;c[M>>2]=O;c[b>>2]=O;if((T|0)!=0){UB(T)}if((N|0)==0){i=d;return}UB(N);i=d;return}}while(0);if((K|0)==58){K=Kb(-1,-1)|0;W=K;X=I;Y=V}if((Y|0)!=0){UB(Y)}if((N|0)==0){P=W;Q=X;Wb(P|0)}UB(N);P=W;Q=X;Wb(P|0)}function Iw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;k=i;i=i+48|0;l=k;m=k+16|0;n=k+32|0;o=j;j=c[o>>2]|0;if(!((c[5340]|0)==-1)){c[m>>2]=21360;c[m+4>>2]=279;c[m+8>>2]=0;et(21360,m,280)}m=(c[21364>>2]|0)+ -1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}q=j;r=c[o>>2]|0;if(!((c[5380]|0)==-1)){c[l>>2]=21520;c[l+4>>2]=279;c[l+8>>2]=0;et(21520,l,280)}l=(c[21524>>2]|0)+ -1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}s=r;_d[c[(c[r>>2]|0)+20>>2]&255](n,s);c[h>>2]=f;u=a[b]|0;do{if(u<<24>>24==43|u<<24>>24==45){t=0;l=Ea(c[(c[j>>2]|0)+44>>2]|0,q|0,u|0)|0;o=t;t=0;if(o&1){break}o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=l;v=b+1|0;w=20}else{v=b;w=20}}while(0);a:do{if((w|0)==20){u=e;b:do{if((u-v|0)>1){if((a[v]|0)!=48){w=21;break}l=v+1|0;o=a[l]|0;if(!(o<<24>>24==88|o<<24>>24==120)){w=21;break}o=j;t=0;m=Ea(c[(c[o>>2]|0)+44>>2]|0,q|0,48)|0;p=t;t=0;if(p&1){break a}p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=v+2|0;t=0;p=Ea(c[(c[o>>2]|0)+44>>2]|0,q|0,a[l]|0)|0;l=t;t=0;if(l&1){break a}l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=p;if(m>>>0<e>>>0){x=m}else{y=m;z=m;break}c:while(1){p=a[x]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;l=sa(33,2147483647,21264,0)|0;o=t;t=0;if(o&1){w=32;break c}c[5312]=l;Nb(21256)}}while(0);t=0;l=Ea(44,p<<24>>24|0,c[5312]|0)|0;o=t;t=0;if(o&1){w=17;break}o=x+1|0;if((l|0)==0){y=m;z=x;break b}if(o>>>0<e>>>0){x=o}else{y=m;z=o;break b}}if((w|0)==17){m=Kb(-1,-1)|0;A=I;B=m;lt(n);Wb(B|0)}else if((w|0)==32){m=Kb(-1,-1)|0;o=I;rc(21256);A=o;B=m;lt(n);Wb(B|0)}}else{w=21}}while(0);d:do{if((w|0)==21){if(v>>>0<e>>>0){C=v}else{y=v;z=v;break}e:while(1){m=a[C]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;o=sa(33,2147483647,21264,0)|0;l=t;t=0;if(l&1){w=40;break e}c[5312]=o;Nb(21256)}}while(0);t=0;p=Ea(45,m<<24>>24|0,c[5312]|0)|0;o=t;t=0;if(o&1){w=16;break}o=C+1|0;if((p|0)==0){y=v;z=C;break d}if(o>>>0<e>>>0){C=o}else{y=v;z=o;break d}}if((w|0)==16){o=Kb(-1,-1)|0;A=I;B=o;lt(n);Wb(B|0)}else if((w|0)==40){o=Kb(-1,-1)|0;p=I;rc(21256);A=p;B=o;lt(n);Wb(B|0)}}}while(0);o=n;p=a[o]|0;if((p&1)==0){D=(p&255)>>>1}else{D=c[n+4>>2]|0}do{if((D|0)==0){t=0;Ja(c[(c[j>>2]|0)+48>>2]|0,q|0,y|0,z|0,c[h>>2]|0)|0;p=t;t=0;if(p&1){break a}p=(c[h>>2]|0)+(z-y<<2)|0;c[h>>2]=p;E=p}else{do{if((y|0)!=(z|0)){p=z+ -1|0;if(p>>>0>y>>>0){F=y;G=p}else{break}do{p=a[F]|0;a[F]=a[G]|0;a[G]=p;F=F+1|0;G=G+ -1|0;}while(F>>>0<G>>>0)}}while(0);t=0;m=oa(c[(c[r>>2]|0)+16>>2]|0,s|0)|0;p=t;t=0;if(p&1){break a}f:do{if(y>>>0<z>>>0){p=n+1|0;l=n+4|0;H=n+8|0;J=j;K=0;L=0;M=y;while(1){N=(a[o]&1)==0;do{if((a[(N?p:c[H>>2]|0)+L|0]|0)>0){if((K|0)!=(a[(N?p:c[H>>2]|0)+L|0]|0)){O=K;P=L;break}Q=c[h>>2]|0;c[h>>2]=Q+4;c[Q>>2]=m;Q=a[o]|0;if((Q&1)==0){R=(Q&255)>>>1}else{R=c[l>>2]|0}O=0;P=(L>>>0<(R+ -1|0)>>>0)+L|0}else{O=K;P=L}}while(0);t=0;N=Ea(c[(c[J>>2]|0)+44>>2]|0,q|0,a[M]|0)|0;Q=t;t=0;if(Q&1){break}Q=c[h>>2]|0;S=Q+4|0;c[h>>2]=S;c[Q>>2]=N;N=M+1|0;if(N>>>0<z>>>0){K=O+1|0;L=P;M=N}else{T=S;break f}}M=Kb(-1,-1)|0;A=I;B=M;lt(n);Wb(B|0)}else{T=c[h>>2]|0}}while(0);m=f+(y-b<<2)|0;if((m|0)==(T|0)){E=T;break}M=T+ -4|0;if(M>>>0>m>>>0){U=m;V=M}else{E=T;break}while(1){M=c[U>>2]|0;c[U>>2]=c[V>>2];c[V>>2]=M;M=U+4|0;m=V+ -4|0;if(M>>>0<m>>>0){V=m;U=M}else{E=T;break}}}}while(0);g:do{if(z>>>0<e>>>0){o=j;M=z;while(1){m=a[M]|0;if(m<<24>>24==46){w=70;break}t=0;L=Ea(c[(c[o>>2]|0)+44>>2]|0,q|0,m|0)|0;m=t;t=0;if(m&1){w=14;break}m=c[h>>2]|0;K=m+4|0;c[h>>2]=K;c[m>>2]=L;L=M+1|0;if(L>>>0<e>>>0){M=L}else{W=K;X=L;break g}}if((w|0)==14){o=Kb(-1,-1)|0;A=I;B=o;lt(n);Wb(B|0)}else if((w|0)==70){t=0;o=oa(c[(c[r>>2]|0)+12>>2]|0,s|0)|0;L=t;t=0;if(L&1){break a}L=c[h>>2]|0;K=L+4|0;c[h>>2]=K;c[L>>2]=o;W=K;X=M+1|0;break}}else{W=E;X=z}}while(0);t=0;Ja(c[(c[j>>2]|0)+48>>2]|0,q|0,X|0,e|0,W|0)|0;K=t;t=0;if(K&1){break}K=(c[h>>2]|0)+(u-X<<2)|0;c[h>>2]=K;if((d|0)==(e|0)){Y=K;c[g>>2]=Y;lt(n);i=k;return}Y=f+(d-b<<2)|0;c[g>>2]=Y;lt(n);i=k;return}}while(0);k=Kb(-1,-1)|0;A=I;B=k;lt(n);Wb(B|0)}function Jw(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+16|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+8|0;r=i;i=i+32|0;s=i;i=i+8|0;u=i;i=i+232|0;v=i;i=i+8|0;w=i;i=i+8|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;A=q;c[A>>2]=37;c[A+4>>2]=0;A=q;q=A+1|0;B=f+4|0;C=c[B>>2]|0;if((C&2048|0)==0){D=q}else{a[q]=43;D=A+2|0}if((C&1024|0)==0){E=D}else{a[D]=35;E=D+1|0}D=C&260;q=C>>>14;do{if((D|0)==260){a[E]=76;C=E+1|0;if((q&1|0)==0){a[C]=97;F=0;break}else{a[C]=65;F=0;break}}else{a[E]=46;a[E+1|0]=42;a[E+2|0]=76;C=E+3|0;if((D|0)==256){if((q&1|0)==0){a[C]=101;F=1;break}else{a[C]=69;F=1;break}}else if((D|0)==4){if((q&1|0)==0){a[C]=102;F=1;break}else{a[C]=70;F=1;break}}else{if((q&1|0)==0){a[C]=103;F=1;break}else{a[C]=71;F=1;break}}}}while(0);q=r;c[s>>2]=q;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;D=t;t=0;if(D&1){D=Kb(-1,-1)|0;rc(21256);Wb(D|0)}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;if(F){c[p>>2]=c[f+8>>2];D=p+4|0;h[k>>3]=j;c[D>>2]=c[k>>2];c[D+4>>2]=c[k+4>>2];G=ow(q,30,r,A,p)|0}else{p=o;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];G=ow(q,30,r,A,o)|0}a:do{if((G|0)>29){o=(a[21256]|0)==0;b:do{if(F){do{if(o){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;p=t;t=0;if(p&1){p=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=p;break b}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;t=0;c[n>>2]=c[f+8>>2];p=n+4|0;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];p=Ja(18,s|0,r|0,A|0,n|0)|0;r=t;t=0;if(r&1){K=36}else{L=p;K=44}}else{do{if(o){if((Va(21256)|0)==0){break}t=0;p=sa(33,2147483647,21264,0)|0;r=t;t=0;if(r&1){r=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=r;break b}else{c[5312]=p;Nb(21256);break}}}while(0);p=c[5312]|0;t=0;r=m;h[k>>3]=j;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];r=Ja(18,s|0,p|0,A|0,m|0)|0;p=t;t=0;if(p&1){K=36}else{L=r;K=44}}}while(0);do{if((K|0)==44){o=c[s>>2]|0;if((o|0)!=0){M=o;N=o;O=L;break a}t=0;Ma(5);o=t;t=0;if(o&1){K=36;break}o=c[s>>2]|0;M=o;N=o;O=L;break a}}while(0);if((K|0)==36){o=Kb(-1,-1)|0;H=I;J=o}P=J;Q=H;Wb(P|0)}else{M=c[s>>2]|0;N=0;O=G}}while(0);G=M+O|0;H=c[B>>2]&176;do{if((H|0)==32){R=G}else if((H|0)==16){B=a[M]|0;if(B<<24>>24==43|B<<24>>24==45){R=M+1|0;break}if(!((O|0)>1&B<<24>>24==48)){K=53;break}B=a[M+1|0]|0;if(!(B<<24>>24==88|B<<24>>24==120)){K=53;break}R=M+2|0}else{K=53}}while(0);if((K|0)==53){R=M}do{if((M|0)==(q|0)){S=q;T=0;U=u;K=59}else{H=TB(O<<3)|0;B=H;if((H|0)!=0){S=M;T=B;U=B;K=59;break}t=0;Ma(5);H=t;t=0;if(H&1){V=0;K=58;break}S=c[s>>2]|0;T=B;U=B;K=59}}while(0);do{if((K|0)==59){t=0;na(42,x|0,f|0);s=t;t=0;if(s&1){V=T;K=58;break}t=0;Aa(45,S|0,R|0,G|0,U|0,v|0,w|0,x|0);s=t;t=0;if(s&1){s=Kb(-1,-1)|0;M=I;Ks(c[x>>2]|0)|0;W=s;X=M;Y=T;break}Ks(c[x>>2]|0)|0;M=e;c[z>>2]=c[M>>2];s=c[v>>2]|0;O=c[w>>2]|0;t=0;u=l;q=z;c[u+0>>2]=c[q+0>>2];Aa(46,y|0,l|0,U|0,s|0,O|0,f|0,g|0);O=t;t=0;if(O&1){V=T;K=58;break}O=c[y>>2]|0;c[M>>2]=O;c[b>>2]=O;if((T|0)!=0){UB(T)}if((N|0)==0){i=d;return}UB(N);i=d;return}}while(0);if((K|0)==58){K=Kb(-1,-1)|0;W=K;X=I;Y=V}if((Y|0)!=0){UB(Y)}if((N|0)==0){P=W;Q=X;Wb(P|0)}UB(N);P=W;Q=X;Wb(P|0)}function Kw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+16|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+152|0;p=i;i=i+8|0;q=i;i=i+8|0;r=m;a[r+0|0]=a[20160|0]|0;a[r+1|0]=a[20161|0]|0;a[r+2|0]=a[20162|0]|0;a[r+3|0]=a[20163|0]|0;a[r+4|0]=a[20164|0]|0;a[r+5|0]=a[20165|0]|0;m=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;s=sa(33,2147483647,21264,0)|0;u=t;t=0;if(u&1){u=Kb(-1,-1)|0;rc(21256);Wb(u|0)}else{c[5312]=s;Nb(21256);break}}}while(0);s=c[5312]|0;c[k>>2]=h;h=ow(m,20,s,r,k)|0;k=n+h|0;r=c[f+4>>2]&176;do{if((r|0)==16){s=a[m]|0;if(s<<24>>24==43|s<<24>>24==45){v=n+1|0;break}if(!((h|0)>1&s<<24>>24==48)){w=12;break}s=a[n+1|0]|0;if(!(s<<24>>24==88|s<<24>>24==120)){w=12;break}v=n+2|0}else if((r|0)==32){v=k}else{w=12}}while(0);if((w|0)==12){v=m}Ot(p,f);w=p;p=c[w>>2]|0;do{if(!((c[5340]|0)==-1)){c[l>>2]=21360;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21360,l|0,280);r=t;t=0;if(!(r&1)){break}x=Kb(-1,-1)|0;y=I;z=c[w>>2]|0;A=z;Ks(A)|0;Wb(x|0)}}while(0);l=(c[21364>>2]|0)+ -1|0;r=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-r>>2>>>0>l>>>0){s=c[r+(l<<2)>>2]|0;if((s|0)==0){break}Ks(c[w>>2]|0)|0;u=o;ue[c[(c[s>>2]|0)+48>>2]&31](s,m,k,u)|0;s=o+(h<<2)|0;if((v|0)==(k|0)){B=s;C=e;D=c[C>>2]|0;E=q;c[E>>2]=D;F=j;G=j;H=q;c[G+0>>2]=c[H+0>>2];Dw(b,j,u,B,s,f,g);J=j;i=d;return}B=o+(v-n<<2)|0;C=e;D=c[C>>2]|0;E=q;c[E>>2]=D;F=j;G=j;H=q;c[G+0>>2]=c[H+0>>2];Dw(b,j,u,B,s,f,g);J=j;i=d;return}}while(0);d=xc(4)|0;wB(d);t=0;La(13,d|0,29328,218);d=t;t=0;if(d&1){x=Kb(-1,-1)|0;y=I;z=c[w>>2]|0;A=z;Ks(A)|0;Wb(x|0)}}function Lw(e,f,g,h,j,k,l,m,n){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0;o=i;i=i+64|0;p=o;q=o+8|0;r=o+16|0;s=o+32|0;u=o+40|0;v=o+48|0;w=o+56|0;Ot(s,j);x=s;s=c[x>>2]|0;do{if(!((c[5342]|0)==-1)){c[r>>2]=21368;c[r+4>>2]=279;c[r+8>>2]=0;t=0;La(55,21368,r|0,280);y=t;t=0;if(!(y&1)){break}z=Kb(-1,-1)|0;A=I;B=c[x>>2]|0;C=B;Ks(C)|0;Wb(z|0)}}while(0);r=(c[21372>>2]|0)+ -1|0;y=c[s+8>>2]|0;do{if((c[s+12>>2]|0)-y>>2>>>0>r>>>0){D=c[y+(r<<2)>>2]|0;if((D|0)==0){break}E=D;Ks(c[x>>2]|0)|0;c[k>>2]=0;F=g;a:do{if((m|0)==(n|0)){G=67}else{H=h;J=D;K=D+8|0;L=D;M=f;N=v;O=w;P=u;Q=m;R=0;b:while(1){S=R;while(1){if((S|0)!=0){G=67;break a}T=c[F>>2]|0;do{if((T|0)==0){U=0}else{if((c[T+12>>2]|0)!=(c[T+16>>2]|0)){U=T;break}if(!(($d[c[(c[T>>2]|0)+36>>2]&127](T)|0)==-1)){U=T;break}c[F>>2]=0;U=0}}while(0);T=(U|0)==0;V=c[H>>2]|0;c:do{if((V|0)==0){G=20}else{do{if((c[V+12>>2]|0)==(c[V+16>>2]|0)){if(!(($d[c[(c[V>>2]|0)+36>>2]&127](V)|0)==-1)){break}c[H>>2]=0;G=20;break c}}while(0);if(T){W=V}else{G=21;break b}}}while(0);if((G|0)==20){G=0;if(T){G=21;break b}else{W=0}}if((de[c[(c[J>>2]|0)+36>>2]&63](E,a[Q]|0,0)|0)<<24>>24==37){G=24;break}V=a[Q]|0;if(V<<24>>24>-1){X=c[K>>2]|0;if(!((b[X+(V<<24>>24<<1)>>1]&8192)==0)){Y=Q;G=35;break}}Z=U+12|0;V=c[Z>>2]|0;_=U+16|0;if((V|0)==(c[_>>2]|0)){$=$d[c[(c[U>>2]|0)+36>>2]&127](U)|0}else{$=d[V]|0}V=pe[c[(c[L>>2]|0)+12>>2]&63](E,$&255)|0;if(V<<24>>24==(pe[c[(c[L>>2]|0)+12>>2]&63](E,a[Q]|0)|0)<<24>>24){G=62;break}c[k>>2]=4;S=4}d:do{if((G|0)==24){G=0;S=Q+1|0;if((S|0)==(n|0)){G=25;break b}V=de[c[(c[J>>2]|0)+36>>2]&63](E,a[S]|0,0)|0;if(V<<24>>24==48|V<<24>>24==69){aa=Q+2|0;if((aa|0)==(n|0)){G=28;break b}ba=aa;ca=de[c[(c[J>>2]|0)+36>>2]&63](E,a[aa]|0,0)|0;da=V}else{ba=S;ca=V;da=0}V=c[(c[M>>2]|0)+36>>2]|0;c[N>>2]=U;c[O>>2]=W;S=q;aa=v;c[S+0>>2]=c[aa+0>>2];aa=p;S=w;c[aa+0>>2]=c[S+0>>2];ne[V&3](u,f,q,p,j,k,l,ca,da);c[F>>2]=c[P>>2];ea=ba+1|0}else if((G|0)==35){while(1){G=0;V=Y+1|0;if((V|0)==(n|0)){fa=n;break}S=a[V]|0;if(!(S<<24>>24>-1)){fa=V;break}if((b[X+(S<<24>>24<<1)>>1]&8192)==0){fa=V;break}else{Y=V;G=35}}T=U;V=W;S=W;while(1){do{if((T|0)==0){ga=0}else{if((c[T+12>>2]|0)!=(c[T+16>>2]|0)){ga=T;break}if(!(($d[c[(c[T>>2]|0)+36>>2]&127](T)|0)==-1)){ga=T;break}c[F>>2]=0;ga=0}}while(0);aa=(ga|0)==0;do{if((S|0)==0){ha=V;G=48}else{if((c[S+12>>2]|0)!=(c[S+16>>2]|0)){if(aa){ia=V;ja=S;break}else{ea=fa;break d}}if(($d[c[(c[S>>2]|0)+36>>2]&127](S)|0)==-1){c[H>>2]=0;ha=0;G=48;break}else{if(aa^(V|0)==0){ia=V;ja=V;break}else{ea=fa;break d}}}}while(0);if((G|0)==48){G=0;if(aa){ea=fa;break d}else{ia=ha;ja=0}}ka=ga+12|0;la=c[ka>>2]|0;ma=ga+16|0;if((la|0)==(c[ma>>2]|0)){na=$d[c[(c[ga>>2]|0)+36>>2]&127](ga)|0}else{na=d[la]|0}if(!((na&255)<<24>>24>-1)){ea=fa;break d}if((b[(c[K>>2]|0)+(na<<24>>24<<1)>>1]&8192)==0){ea=fa;break d}la=c[ka>>2]|0;if((la|0)==(c[ma>>2]|0)){$d[c[(c[ga>>2]|0)+40>>2]&127](ga)|0;T=ga;V=ia;S=ja;continue}else{c[ka>>2]=la+1;T=ga;V=ia;S=ja;continue}}}else if((G|0)==62){G=0;S=c[Z>>2]|0;if((S|0)==(c[_>>2]|0)){$d[c[(c[U>>2]|0)+40>>2]&127](U)|0}else{c[Z>>2]=S+1}ea=Q+1|0}}while(0);if((ea|0)==(n|0)){G=67;break a}Q=ea;R=c[k>>2]|0}if((G|0)==21){c[k>>2]=4;oa=U;break}else if((G|0)==25){c[k>>2]=4;oa=U;break}else if((G|0)==28){c[k>>2]=4;oa=U;break}}}while(0);if((G|0)==67){oa=c[F>>2]|0}E=g;do{if((oa|0)==0){pa=0}else{if((c[oa+12>>2]|0)!=(c[oa+16>>2]|0)){pa=oa;break}if(!(($d[c[(c[oa>>2]|0)+36>>2]&127](oa)|0)==-1)){pa=oa;break}c[E>>2]=0;pa=0}}while(0);E=(pa|0)==0;F=h;D=c[F>>2]|0;e:do{if((D|0)==0){G=77}else{do{if((c[D+12>>2]|0)==(c[D+16>>2]|0)){if(!(($d[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1)){break}c[F>>2]=0;G=77;break e}}while(0);if(!E){break}qa=e;c[qa>>2]=pa;i=o;return}}while(0);do{if((G|0)==77){if(E){break}qa=e;c[qa>>2]=pa;i=o;return}}while(0);c[k>>2]=c[k>>2]|2;qa=e;c[qa>>2]=pa;i=o;return}}while(0);o=xc(4)|0;wB(o);t=0;La(13,o|0,29328,218);o=t;t=0;if(o&1){z=Kb(-1,-1)|0;A=I;B=c[x>>2]|0;C=B;Ks(C)|0;Wb(z|0)}}function Mw(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Nw(a){a=a|0;i=i;return}function Ow(a){a=a|0;i=i;return 2}function Pw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+32|0;k=j;l=j+8|0;m=j+16|0;n=j+24|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=l;d=m;c[e+0>>2]=c[d+0>>2];d=k;e=n;c[d+0>>2]=c[e+0>>2];Lw(a,b,l,k,f,g,h,20264,20272|0);i=j;return}function Qw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+32|0;l=k;m=k+8|0;n=k+16|0;o=k+24|0;p=d+8|0;q=$d[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q]|0;if((f&1)==0){r=q+1|0;s=q+1|0;t=(f&255)>>>1}else{f=c[q+8>>2]|0;r=f;s=f;t=c[q+4>>2]|0}q=r+t|0;t=m;r=n;c[t+0>>2]=c[r+0>>2];r=l;t=o;c[r+0>>2]=c[t+0>>2];Lw(b,d,m,l,g,h,j,s,q);i=k;return}function Rw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+40|0;k=j;l=j+8|0;m=j+16|0;n=j+32|0;Ot(n,f);f=n;n=c[f>>2]|0;do{if(!((c[5342]|0)==-1)){c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21368,m|0,280);o=t;t=0;if(!(o&1)){break}p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}while(0);m=(c[21372>>2]|0)+ -1|0;o=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-o>>2>>>0>m>>>0){u=c[o+(m<<2)>>2]|0;if((u|0)==0){break}v=u;Ks(c[f>>2]|0)|0;u=c[e>>2]|0;w=b+8|0;x=$d[c[c[w>>2]>>2]&127](w)|0;c[l>>2]=u;u=x+168|0;w=k;y=l;c[w+0>>2]=c[y+0>>2];y=mv(d,k,x,u,v,g,0)|0;v=y-x|0;if((v|0)>=168){z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}c[h+24>>2]=((v|0)/12|0|0)%7|0;z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}function Sw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+40|0;k=j;l=j+8|0;m=j+16|0;n=j+32|0;Ot(n,f);f=n;n=c[f>>2]|0;do{if(!((c[5342]|0)==-1)){c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21368,m|0,280);o=t;t=0;if(!(o&1)){break}p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}while(0);m=(c[21372>>2]|0)+ -1|0;o=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-o>>2>>>0>m>>>0){u=c[o+(m<<2)>>2]|0;if((u|0)==0){break}v=u;Ks(c[f>>2]|0)|0;u=c[e>>2]|0;w=b+8|0;x=$d[c[(c[w>>2]|0)+4>>2]&127](w)|0;c[l>>2]=u;u=x+288|0;w=k;y=l;c[w+0>>2]=c[y+0>>2];y=mv(d,k,x,u,v,g,0)|0;v=y-x|0;if((v|0)>=288){z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}c[h+16>>2]=((v|0)/12|0|0)%12|0;z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}function Tw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;b=i;i=i+40|0;j=b;k=b+8|0;l=b+16|0;m=b+32|0;Ot(m,f);f=m;m=c[f>>2]|0;do{if(!((c[5342]|0)==-1)){c[l>>2]=21368;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21368,l|0,280);n=t;t=0;if(!(n&1)){break}o=Kb(-1,-1)|0;p=I;q=c[f>>2]|0;r=q;Ks(r)|0;Wb(o|0)}}while(0);l=(c[21372>>2]|0)+ -1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){s=c[n+(l<<2)>>2]|0;if((s|0)==0){break}u=s;Ks(c[f>>2]|0)|0;s=h+20|0;c[k>>2]=c[e>>2];v=j;w=k;c[v+0>>2]=c[w+0>>2];w=Xw(d,j,g,u,4)|0;if((c[g>>2]&4|0)!=0){x=d;y=c[x>>2]|0;z=a;c[z>>2]=y;i=b;return}if((w|0)<69){A=w+2e3|0}else{A=(w+ -69|0)>>>0<31?w+1900|0:w}c[s>>2]=A+ -1900;x=d;y=c[x>>2]|0;z=a;c[z>>2]=y;i=b;return}}while(0);b=xc(4)|0;wB(b);t=0;La(13,b|0,29328,218);b=t;t=0;if(b&1){o=Kb(-1,-1)|0;p=I;q=c[f>>2]|0;r=q;Ks(r)|0;Wb(o|0)}}function Uw(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;l=i;i=i+576|0;m=l;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;u=l+56|0;v=l+64|0;w=l+72|0;x=l+80|0;y=l+88|0;z=l+96|0;A=l+104|0;B=l+112|0;C=l+120|0;D=l+128|0;E=l+136|0;F=l+144|0;G=l+152|0;H=l+160|0;J=l+168|0;K=l+176|0;L=l+184|0;M=l+192|0;N=l+200|0;O=l+208|0;P=l+216|0;Q=l+224|0;R=l+232|0;S=l+240|0;T=l+248|0;U=l+256|0;V=l+264|0;W=l+272|0;X=l+280|0;Y=l+288|0;Z=l+296|0;_=l+304|0;$=l+312|0;aa=l+320|0;ba=l+328|0;ca=l+336|0;da=l+344|0;ea=l+352|0;fa=l+368|0;ga=l+376|0;ha=l+384|0;ia=l+392|0;ja=l+400|0;ka=l+408|0;la=l+416|0;ma=l+424|0;na=l+432|0;oa=l+440|0;pa=l+448|0;qa=l+456|0;ra=l+464|0;sa=l+472|0;ta=l+480|0;ua=l+488|0;va=l+496|0;wa=l+504|0;xa=l+512|0;ya=l+520|0;za=l+528|0;Aa=l+536|0;Ba=l+544|0;Ca=l+552|0;Da=l+560|0;Ea=l+568|0;c[h>>2]=0;Ot(fa,g);Fa=fa;fa=c[Fa>>2]|0;do{if(!((c[5342]|0)==-1)){c[ea>>2]=21368;c[ea+4>>2]=279;c[ea+8>>2]=0;t=0;La(55,21368,ea|0,280);Ga=t;t=0;if(!(Ga&1)){break}Ha=Kb(-1,-1)|0;Ia=I;Ja=c[Fa>>2]|0;Ka=Ja;Ks(Ka)|0;Wb(Ha|0)}}while(0);ea=(c[21372>>2]|0)+ -1|0;Ga=c[fa+8>>2]|0;do{if((c[fa+12>>2]|0)-Ga>>2>>>0>ea>>>0){Ma=c[Ga+(ea<<2)>>2]|0;if((Ma|0)==0){break}Na=Ma;Ks(c[Fa>>2]|0)|0;a:do{switch(k<<24>>24|0){case 104:case 66:case 98:{Ma=c[f>>2]|0;Oa=d+8|0;Pa=$d[c[(c[Oa>>2]|0)+4>>2]&127](Oa)|0;c[ca>>2]=Ma;c[R+0>>2]=c[ca+0>>2];Ma=(mv(e,R,Pa,Pa+288|0,Na,h,0)|0)-Pa|0;if((Ma|0)>=288){break a}c[j+16>>2]=((Ma|0)/12|0|0)%12|0;break};case 114:{Ma=e;c[ra>>2]=c[Ma>>2];c[sa>>2]=c[f>>2];c[B+0>>2]=c[ra+0>>2];c[A+0>>2]=c[sa+0>>2];Lw(qa,d,B,A,g,h,j,20288,20299|0);c[Ma>>2]=c[qa>>2];break};case 72:{c[aa>>2]=c[f>>2];c[J+0>>2]=c[aa+0>>2];Ma=Xw(e,J,h,Na,2)|0;Pa=c[h>>2]|0;if((Pa&4|0)==0&(Ma|0)<24){c[j+8>>2]=Ma;break a}else{c[h>>2]=Pa|4;break a}break};case 70:{Pa=e;c[na>>2]=c[Pa>>2];c[oa>>2]=c[f>>2];c[L+0>>2]=c[na+0>>2];c[K+0>>2]=c[oa+0>>2];Lw(ma,d,L,K,g,h,j,20280,20288|0);c[Pa>>2]=c[ma>>2];break};case 99:{Pa=d+8|0;Ma=$d[c[(c[Pa>>2]|0)+12>>2]&127](Pa)|0;Pa=e;c[ha>>2]=c[Pa>>2];c[ia>>2]=c[f>>2];Oa=a[Ma]|0;if((Oa&1)==0){Qa=Ma+1|0;Ra=Ma+1|0;Sa=(Oa&255)>>>1}else{Oa=c[Ma+8>>2]|0;Qa=Oa;Ra=Oa;Sa=c[Ma+4>>2]|0}c[Q+0>>2]=c[ha+0>>2];c[P+0>>2]=c[ia+0>>2];Lw(ga,d,Q,P,g,h,j,Ra,Qa+Sa|0);c[Pa>>2]=c[ga>>2];break};case 112:{Pa=j+8|0;Ma=c[f>>2]|0;Oa=d+8|0;Ta=$d[c[(c[Oa>>2]|0)+8>>2]&127](Oa)|0;Oa=a[Ta]|0;if((Oa&1)==0){Ua=(Oa&255)>>>1}else{Ua=c[Ta+4>>2]|0}Oa=a[Ta+12|0]|0;if((Oa&1)==0){Va=(Oa&255)>>>1}else{Va=c[Ta+16>>2]|0}if((Ua|0)==(0-Va|0)){c[h>>2]=c[h>>2]|4;break a}c[X>>2]=Ma;c[C+0>>2]=c[X+0>>2];Ma=mv(e,C,Ta,Ta+24|0,Na,h,0)|0;Oa=Ma-Ta|0;do{if((Ma|0)==(Ta|0)){if((c[Pa>>2]|0)!=12){break}c[Pa>>2]=0;break a}}while(0);if((Oa|0)!=12){break a}Ta=c[Pa>>2]|0;if((Ta|0)>=12){break a}c[Pa>>2]=Ta+12;break};case 68:{Ta=e;c[ka>>2]=c[Ta>>2];c[la>>2]=c[f>>2];c[N+0>>2]=c[ka+0>>2];c[M+0>>2]=c[la+0>>2];Lw(ja,d,N,M,g,h,j,20272,20280|0);c[Ta>>2]=c[ja>>2];break};case 101:case 100:{Ta=j+12|0;c[ba>>2]=c[f>>2];c[O+0>>2]=c[ba+0>>2];Ma=Xw(e,O,h,Na,2)|0;Wa=c[h>>2]|0;do{if((Wa&4|0)==0){if(!((Ma+ -1|0)>>>0<31)){break}c[Ta>>2]=Ma;break a}}while(0);c[h>>2]=Wa|4;break};case 73:{Ma=j+8|0;c[$>>2]=c[f>>2];c[H+0>>2]=c[$+0>>2];Ta=Xw(e,H,h,Na,2)|0;Pa=c[h>>2]|0;do{if((Pa&4|0)==0){if(!((Ta+ -1|0)>>>0<12)){break}c[Ma>>2]=Ta;break a}}while(0);c[h>>2]=Pa|4;break};case 106:{c[_>>2]=c[f>>2];c[G+0>>2]=c[_+0>>2];Ta=Xw(e,G,h,Na,3)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Ta|0)<366){c[j+28>>2]=Ta;break a}else{c[h>>2]=Ma|4;break a}break};case 109:{c[Z>>2]=c[f>>2];c[F+0>>2]=c[Z+0>>2];Ma=Xw(e,F,h,Na,2)|0;Ta=c[h>>2]|0;if((Ta&4|0)==0&(Ma|0)<13){c[j+16>>2]=Ma+ -1;break a}else{c[h>>2]=Ta|4;break a}break};case 77:{c[Y>>2]=c[f>>2];c[E+0>>2]=c[Y+0>>2];Ta=Xw(e,E,h,Na,2)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Ta|0)<60){c[j+4>>2]=Ta;break a}else{c[h>>2]=Ma|4;break a}break};case 116:case 110:{c[pa>>2]=c[f>>2];c[D+0>>2]=c[pa+0>>2];Vw(0,e,D,h,Na);break};case 82:{Ma=e;c[ua>>2]=c[Ma>>2];c[va>>2]=c[f>>2];c[z+0>>2]=c[ua+0>>2];c[y+0>>2]=c[va+0>>2];Lw(ta,d,z,y,g,h,j,20304,20309|0);c[Ma>>2]=c[ta>>2];break};case 65:case 97:{Ma=c[f>>2]|0;Ta=d+8|0;Wa=$d[c[c[Ta>>2]>>2]&127](Ta)|0;c[da>>2]=Ma;c[S+0>>2]=c[da+0>>2];Ma=(mv(e,S,Wa,Wa+168|0,Na,h,0)|0)-Wa|0;if((Ma|0)>=168){break a}c[j+24>>2]=((Ma|0)/12|0|0)%7|0;break};case 83:{c[W>>2]=c[f>>2];c[x+0>>2]=c[W+0>>2];Ma=Xw(e,x,h,Na,2)|0;Wa=c[h>>2]|0;if((Wa&4|0)==0&(Ma|0)<61){c[j>>2]=Ma;break a}else{c[h>>2]=Wa|4;break a}break};case 84:{Wa=e;c[xa>>2]=c[Wa>>2];c[ya>>2]=c[f>>2];c[w+0>>2]=c[xa+0>>2];c[v+0>>2]=c[ya+0>>2];Lw(wa,d,w,v,g,h,j,20312,20320|0);c[Wa>>2]=c[wa>>2];break};case 119:{c[V>>2]=c[f>>2];c[u+0>>2]=c[V+0>>2];Wa=Xw(e,u,h,Na,1)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Wa|0)<7){c[j+24>>2]=Wa;break a}else{c[h>>2]=Ma|4;break a}break};case 120:{Ma=c[(c[d>>2]|0)+20>>2]|0;c[za>>2]=c[e>>2];c[Aa>>2]=c[f>>2];c[s+0>>2]=c[za+0>>2];c[r+0>>2]=c[Aa+0>>2];le[Ma&63](b,d,s,r,g,h,j);i=l;return};case 88:{Ma=d+8|0;Wa=$d[c[(c[Ma>>2]|0)+24>>2]&127](Ma)|0;Ma=e;c[Ca>>2]=c[Ma>>2];c[Da>>2]=c[f>>2];Ta=a[Wa]|0;if((Ta&1)==0){Xa=Wa+1|0;Ya=Wa+1|0;Za=(Ta&255)>>>1}else{Ta=c[Wa+8>>2]|0;Xa=Ta;Ya=Ta;Za=c[Wa+4>>2]|0}c[q+0>>2]=c[Ca+0>>2];c[p+0>>2]=c[Da+0>>2];Lw(Ba,d,q,p,g,h,j,Ya,Xa+Za|0);c[Ma>>2]=c[Ba>>2];break};case 121:{c[U>>2]=c[f>>2];c[o+0>>2]=c[U+0>>2];Ma=Xw(e,o,h,Na,4)|0;if((c[h>>2]&4|0)!=0){break a}if((Ma|0)<69){_a=Ma+2e3|0}else{_a=(Ma+ -69|0)>>>0<31?Ma+1900|0:Ma}c[j+20>>2]=_a+ -1900;break};case 89:{c[T>>2]=c[f>>2];c[n+0>>2]=c[T+0>>2];Ma=Xw(e,n,h,Na,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=Ma+ -1900;break};case 37:{c[Ea>>2]=c[f>>2];c[m+0>>2]=c[Ea+0>>2];Ww(0,e,m,h,Na);break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){Ha=Kb(-1,-1)|0;Ia=I;Ja=c[Fa>>2]|0;Ka=Ja;Ks(Ka)|0;Wb(Ha|0)}}function Vw(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;j=e;e=f;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if(($d[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)==0){m=12}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){n=l;break}else{o=l;break a}}if(($d[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1){c[e>>2]=0;m=12;break}else{if(h){n=l;break}else{o=l;break a}}}}while(0);if((m|0)==12){m=0;if(h){o=0;break}else{n=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=$d[c[(c[l>>2]|0)+36>>2]&127](l)|0}else{q=d[p]|0}if(!((q&255)<<24>>24>-1)){o=n;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){o=n;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){$d[c[(c[p>>2]|0)+40>>2]&127](p)|0;continue}else{c[l>>2]=r+1;continue}}n=c[j>>2]|0;do{if((n|0)==0){s=0}else{if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){s=n;break}if(($d[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}}while(0);j=(s|0)==0;b:do{if((o|0)==0){m=32}else{do{if((c[o+12>>2]|0)==(c[o+16>>2]|0)){if(!(($d[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1)){break}c[e>>2]=0;m=32;break b}}while(0);if(!j){break}i=a;return}}while(0);do{if((m|0)==32){if(j){break}i=a;return}}while(0);c[g>>2]=c[g>>2]|2;i=a;return}function Ww(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;a=i;h=b;b=c[h>>2]|0;do{if((b|0)==0){j=0}else{if((c[b+12>>2]|0)!=(c[b+16>>2]|0)){j=b;break}if(($d[c[(c[b>>2]|0)+36>>2]&127](b)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);b=(j|0)==0;j=e;e=c[j>>2]|0;a:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!(($d[c[(c[e>>2]|0)+36>>2]&127](e)|0)==-1)){break}c[j>>2]=0;k=11;break a}}while(0);if(b){l=e}else{k=12}}}while(0);if((k|0)==11){if(b){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=a;return}b=c[h>>2]|0;e=c[b+12>>2]|0;if((e|0)==(c[b+16>>2]|0)){m=$d[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{m=d[e]|0}if(!((de[c[(c[g>>2]|0)+36>>2]&63](g,m&255,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=a;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){$d[c[(c[m>>2]|0)+40>>2]&127](m)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){n=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){n=e;break}if(($d[c[(c[e>>2]|0)+36>>2]&127](e)|0)==-1){c[h>>2]=0;n=0;break}else{n=c[h>>2]|0;break}}}while(0);h=(n|0)==0;b:do{if((l|0)==0){k=31}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if(!(($d[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1)){break}c[j>>2]=0;k=31;break b}}while(0);if(!h){break}i=a;return}}while(0);do{if((k|0)==31){if(h){break}i=a;return}}while(0);c[f>>2]=c[f>>2]|2;i=a;return}function Xw(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;j=i;k=a;a=c[k>>2]|0;do{if((a|0)==0){l=0}else{if((c[a+12>>2]|0)!=(c[a+16>>2]|0)){l=a;break}if(($d[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);a=(l|0)==0;l=e;e=c[l>>2]|0;a:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!(($d[c[(c[e>>2]|0)+36>>2]&127](e)|0)==-1)){break}c[l>>2]=0;m=11;break a}}while(0);if(a){n=e}else{m=12}}}while(0);if((m|0)==11){if(a){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}a=c[k>>2]|0;e=c[a+12>>2]|0;if((e|0)==(c[a+16>>2]|0)){p=$d[c[(c[a>>2]|0)+36>>2]&127](a)|0}else{p=d[e]|0}e=p&255;do{if(e<<24>>24>-1){a=g+8|0;if((b[(c[a>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}q=g;r=(de[c[(c[q>>2]|0)+36>>2]&63](g,e,0)|0)<<24>>24;s=c[k>>2]|0;t=s+12|0;u=c[t>>2]|0;if((u|0)==(c[s+16>>2]|0)){$d[c[(c[s>>2]|0)+40>>2]&127](s)|0;v=h;w=n;x=n;y=r}else{c[t>>2]=u+1;v=h;w=n;x=n;y=r}while(1){z=y+ -48|0;r=v+ -1|0;u=c[k>>2]|0;do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(($d[c[(c[u>>2]|0)+36>>2]&127](u)|0)==-1){c[k>>2]=0;A=0;break}else{A=c[k>>2]|0;break}}}while(0);u=(A|0)==0;do{if((x|0)==0){B=w;C=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){B=w;C=x;break}if(!(($d[c[(c[x>>2]|0)+36>>2]&127](x)|0)==-1)){B=w;C=w;break}c[l>>2]=0;B=0;C=0}}while(0);D=c[k>>2]|0;if(!((u^(C|0)==0)&(r|0)>0)){m=40;break}t=c[D+12>>2]|0;if((t|0)==(c[D+16>>2]|0)){E=$d[c[(c[D>>2]|0)+36>>2]&127](D)|0}else{E=d[t]|0}t=E&255;if(!(t<<24>>24>-1)){o=z;m=52;break}if((b[(c[a>>2]|0)+(E<<24>>24<<1)>>1]&2048)==0){o=z;m=52;break}s=((de[c[(c[q>>2]|0)+36>>2]&63](g,t,0)|0)<<24>>24)+(z*10|0)|0;t=c[k>>2]|0;F=t+12|0;G=c[F>>2]|0;if((G|0)==(c[t+16>>2]|0)){$d[c[(c[t>>2]|0)+40>>2]&127](t)|0;H=r;w=B;x=C;y=s;v=H;continue}else{c[F>>2]=G+1;H=r;w=B;x=C;y=s;v=H;continue}}if((m|0)==40){do{if((D|0)==0){I=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){I=D;break}if(($d[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1){c[k>>2]=0;I=0;break}else{I=c[k>>2]|0;break}}}while(0);q=(I|0)==0;b:do{if((B|0)==0){m=50}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if(!(($d[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1)){break}c[l>>2]=0;m=50;break b}}while(0);if(q){o=z}else{break}i=j;return o|0}}while(0);do{if((m|0)==50){if(q){break}else{o=z}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=z;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function Yw(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;l=i;i=i+64|0;m=l;n=l+8|0;o=l+16|0;p=l+32|0;q=l+40|0;r=l+48|0;s=l+56|0;Ot(p,f);u=p;p=c[u>>2]|0;do{if(!((c[5340]|0)==-1)){c[o>>2]=21360;c[o+4>>2]=279;c[o+8>>2]=0;t=0;La(55,21360,o|0,280);v=t;t=0;if(!(v&1)){break}w=Kb(-1,-1)|0;x=I;y=c[u>>2]|0;z=y;Ks(z)|0;Wb(w|0)}}while(0);o=(c[21364>>2]|0)+ -1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>o>>>0){A=c[v+(o<<2)>>2]|0;if((A|0)==0){break}B=A;Ks(c[u>>2]|0)|0;c[g>>2]=0;C=d;a:do{if((j|0)==(k|0)){D=71}else{E=e;F=A;G=A;H=A;J=b;K=r;L=s;M=q;N=j;O=0;b:while(1){P=O;while(1){if((P|0)!=0){D=71;break a}Q=c[C>>2]|0;do{if((Q|0)==0){R=0;S=1}else{T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0)){U=$d[c[(c[Q>>2]|0)+36>>2]&127](Q)|0}else{U=c[T>>2]|0}if(!((U|0)==-1)){R=Q;S=0;break}c[C>>2]=0;R=0;S=1}}while(0);Q=c[E>>2]|0;do{if((Q|0)==0){D=23}else{T=c[Q+12>>2]|0;if((T|0)==(c[Q+16>>2]|0)){V=$d[c[(c[Q>>2]|0)+36>>2]&127](Q)|0}else{V=c[T>>2]|0}if((V|0)==-1){c[E>>2]=0;D=23;break}else{if(S){W=Q;break}else{D=25;break b}}}}while(0);if((D|0)==23){D=0;if(S){D=25;break b}else{W=0}}if((de[c[(c[F>>2]|0)+52>>2]&63](B,c[N>>2]|0,0)|0)<<24>>24==37){D=28;break}if(de[c[(c[G>>2]|0)+12>>2]&63](B,8192,c[N>>2]|0)|0){X=N;D=38;break}Y=R+12|0;Q=c[Y>>2]|0;Z=R+16|0;if((Q|0)==(c[Z>>2]|0)){_=$d[c[(c[R>>2]|0)+36>>2]&127](R)|0}else{_=c[Q>>2]|0}Q=pe[c[(c[H>>2]|0)+28>>2]&63](B,_)|0;if((Q|0)==(pe[c[(c[H>>2]|0)+28>>2]&63](B,c[N>>2]|0)|0)){D=66;break}c[g>>2]=4;P=4}c:do{if((D|0)==28){D=0;P=N+4|0;if((P|0)==(k|0)){D=29;break b}Q=de[c[(c[F>>2]|0)+52>>2]&63](B,c[P>>2]|0,0)|0;if(Q<<24>>24==48|Q<<24>>24==69){T=N+8|0;if((T|0)==(k|0)){D=32;break b}$=T;aa=de[c[(c[F>>2]|0)+52>>2]&63](B,c[T>>2]|0,0)|0;ba=Q}else{$=P;aa=Q;ba=0}Q=c[(c[J>>2]|0)+36>>2]|0;c[K>>2]=R;c[L>>2]=W;P=n;T=r;c[P+0>>2]=c[T+0>>2];T=m;P=s;c[T+0>>2]=c[P+0>>2];ne[Q&3](q,b,n,m,f,g,h,aa,ba);c[C>>2]=c[M>>2];ca=$+4|0}else if((D|0)==38){while(1){D=0;Q=X+4|0;if((Q|0)==(k|0)){da=k;break}if(de[c[(c[G>>2]|0)+12>>2]&63](B,8192,c[Q>>2]|0)|0){X=Q;D=38}else{da=Q;break}}Q=R;P=W;T=W;while(1){do{if((Q|0)==0){ea=0;fa=1}else{ga=c[Q+12>>2]|0;if((ga|0)==(c[Q+16>>2]|0)){ha=$d[c[(c[Q>>2]|0)+36>>2]&127](Q)|0}else{ha=c[ga>>2]|0}if(!((ha|0)==-1)){ea=Q;fa=0;break}c[C>>2]=0;ea=0;fa=1}}while(0);do{if((T|0)==0){ia=P;D=53}else{ga=c[T+12>>2]|0;if((ga|0)==(c[T+16>>2]|0)){ja=$d[c[(c[T>>2]|0)+36>>2]&127](T)|0}else{ja=c[ga>>2]|0}if((ja|0)==-1){c[E>>2]=0;ia=0;D=53;break}else{if(fa^(P|0)==0){ka=P;la=P;break}else{ca=da;break c}}}}while(0);if((D|0)==53){D=0;if(fa){ca=da;break c}else{ka=ia;la=0}}ga=ea+12|0;ma=c[ga>>2]|0;na=ea+16|0;if((ma|0)==(c[na>>2]|0)){oa=$d[c[(c[ea>>2]|0)+36>>2]&127](ea)|0}else{oa=c[ma>>2]|0}if(!(de[c[(c[G>>2]|0)+12>>2]&63](B,8192,oa)|0)){ca=da;break c}ma=c[ga>>2]|0;if((ma|0)==(c[na>>2]|0)){$d[c[(c[ea>>2]|0)+40>>2]&127](ea)|0;Q=ea;P=ka;T=la;continue}else{c[ga>>2]=ma+4;Q=ea;P=ka;T=la;continue}}}else if((D|0)==66){D=0;T=c[Y>>2]|0;if((T|0)==(c[Z>>2]|0)){$d[c[(c[R>>2]|0)+40>>2]&127](R)|0}else{c[Y>>2]=T+4}ca=N+4|0}}while(0);if((ca|0)==(k|0)){D=71;break a}N=ca;O=c[g>>2]|0}if((D|0)==25){c[g>>2]=4;pa=R;break}else if((D|0)==29){c[g>>2]=4;pa=R;break}else if((D|0)==32){c[g>>2]=4;pa=R;break}}}while(0);if((D|0)==71){pa=c[C>>2]|0}B=d;do{if((pa|0)==0){qa=0;ra=1}else{A=c[pa+12>>2]|0;if((A|0)==(c[pa+16>>2]|0)){sa=$d[c[(c[pa>>2]|0)+36>>2]&127](pa)|0}else{sa=c[A>>2]|0}if(!((sa|0)==-1)){qa=pa;ra=0;break}c[B>>2]=0;qa=0;ra=1}}while(0);B=e;C=c[B>>2]|0;do{if((C|0)==0){D=84}else{A=c[C+12>>2]|0;if((A|0)==(c[C+16>>2]|0)){ta=$d[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{ta=c[A>>2]|0}if((ta|0)==-1){c[B>>2]=0;D=84;break}if(!ra){break}ua=a;c[ua>>2]=qa;i=l;return}}while(0);do{if((D|0)==84){if(ra){break}ua=a;c[ua>>2]=qa;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ua=a;c[ua>>2]=qa;i=l;return}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){w=Kb(-1,-1)|0;x=I;y=c[u>>2]|0;z=y;Ks(z)|0;Wb(w|0)}}function Zw(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function _w(a){a=a|0;i=i;return}function $w(a){a=a|0;i=i;return 2}function ax(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+32|0;k=j;l=j+8|0;m=j+16|0;n=j+24|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=l;d=m;c[e+0>>2]=c[d+0>>2];d=k;e=n;c[d+0>>2]=c[e+0>>2];Yw(a,b,l,k,f,g,h,20416,20448|0);i=j;return}function bx(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+32|0;l=k;m=k+8|0;n=k+16|0;o=k+24|0;p=d+8|0;q=$d[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q]|0;if((f&1)==0){r=q+4|0;s=q+4|0;t=(f&255)>>>1}else{f=c[q+8>>2]|0;r=f;s=f;t=c[q+4>>2]|0}q=r+(t<<2)|0;t=m;r=n;c[t+0>>2]=c[r+0>>2];r=l;t=o;c[r+0>>2]=c[t+0>>2];Yw(b,d,m,l,g,h,j,s,q);i=k;return}function cx(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+40|0;k=j;l=j+8|0;m=j+16|0;n=j+32|0;Ot(n,f);f=n;n=c[f>>2]|0;do{if(!((c[5340]|0)==-1)){c[m>>2]=21360;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21360,m|0,280);o=t;t=0;if(!(o&1)){break}p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}while(0);m=(c[21364>>2]|0)+ -1|0;o=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-o>>2>>>0>m>>>0){u=c[o+(m<<2)>>2]|0;if((u|0)==0){break}v=u;Ks(c[f>>2]|0)|0;u=c[e>>2]|0;w=b+8|0;x=$d[c[c[w>>2]>>2]&127](w)|0;c[l>>2]=u;u=x+168|0;w=k;y=l;c[w+0>>2]=c[y+0>>2];y=Lv(d,k,x,u,v,g,0)|0;v=y-x|0;if((v|0)>=168){z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}c[h+24>>2]=((v|0)/12|0|0)%7|0;z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}function dx(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+40|0;k=j;l=j+8|0;m=j+16|0;n=j+32|0;Ot(n,f);f=n;n=c[f>>2]|0;do{if(!((c[5340]|0)==-1)){c[m>>2]=21360;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21360,m|0,280);o=t;t=0;if(!(o&1)){break}p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}while(0);m=(c[21364>>2]|0)+ -1|0;o=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-o>>2>>>0>m>>>0){u=c[o+(m<<2)>>2]|0;if((u|0)==0){break}v=u;Ks(c[f>>2]|0)|0;u=c[e>>2]|0;w=b+8|0;x=$d[c[(c[w>>2]|0)+4>>2]&127](w)|0;c[l>>2]=u;u=x+288|0;w=k;y=l;c[w+0>>2]=c[y+0>>2];y=Lv(d,k,x,u,v,g,0)|0;v=y-x|0;if((v|0)>=288){z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}c[h+16>>2]=((v|0)/12|0|0)%12|0;z=d;A=c[z>>2]|0;B=a;c[B>>2]=A;i=j;return}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){p=Kb(-1,-1)|0;q=I;r=c[f>>2]|0;s=r;Ks(s)|0;Wb(p|0)}}function ex(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;b=i;i=i+40|0;j=b;k=b+8|0;l=b+16|0;m=b+32|0;Ot(m,f);f=m;m=c[f>>2]|0;do{if(!((c[5340]|0)==-1)){c[l>>2]=21360;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21360,l|0,280);n=t;t=0;if(!(n&1)){break}o=Kb(-1,-1)|0;p=I;q=c[f>>2]|0;r=q;Ks(r)|0;Wb(o|0)}}while(0);l=(c[21364>>2]|0)+ -1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){s=c[n+(l<<2)>>2]|0;if((s|0)==0){break}u=s;Ks(c[f>>2]|0)|0;s=h+20|0;c[k>>2]=c[e>>2];v=j;w=k;c[v+0>>2]=c[w+0>>2];w=ix(d,j,g,u,4)|0;if((c[g>>2]&4|0)!=0){x=d;y=c[x>>2]|0;z=a;c[z>>2]=y;i=b;return}if((w|0)<69){A=w+2e3|0}else{A=(w+ -69|0)>>>0<31?w+1900|0:w}c[s>>2]=A+ -1900;x=d;y=c[x>>2]|0;z=a;c[z>>2]=y;i=b;return}}while(0);b=xc(4)|0;wB(b);t=0;La(13,b|0,29328,218);b=t;t=0;if(b&1){o=Kb(-1,-1)|0;p=I;q=c[f>>2]|0;r=q;Ks(r)|0;Wb(o|0)}}function fx(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;l=i;i=i+576|0;m=l;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;u=l+56|0;v=l+64|0;w=l+72|0;x=l+80|0;y=l+88|0;z=l+96|0;A=l+104|0;B=l+112|0;C=l+120|0;D=l+128|0;E=l+136|0;F=l+144|0;G=l+152|0;H=l+160|0;J=l+168|0;K=l+176|0;L=l+184|0;M=l+192|0;N=l+200|0;O=l+208|0;P=l+216|0;Q=l+224|0;R=l+232|0;S=l+240|0;T=l+248|0;U=l+256|0;V=l+264|0;W=l+272|0;X=l+280|0;Y=l+288|0;Z=l+296|0;_=l+304|0;$=l+312|0;aa=l+320|0;ba=l+328|0;ca=l+336|0;da=l+344|0;ea=l+352|0;fa=l+368|0;ga=l+376|0;ha=l+384|0;ia=l+392|0;ja=l+400|0;ka=l+408|0;la=l+416|0;ma=l+424|0;na=l+432|0;oa=l+440|0;pa=l+448|0;qa=l+456|0;ra=l+464|0;sa=l+472|0;ta=l+480|0;ua=l+488|0;va=l+496|0;wa=l+504|0;xa=l+512|0;ya=l+520|0;za=l+528|0;Aa=l+536|0;Ba=l+544|0;Ca=l+552|0;Da=l+560|0;Ea=l+568|0;c[h>>2]=0;Ot(fa,g);Fa=fa;fa=c[Fa>>2]|0;do{if(!((c[5340]|0)==-1)){c[ea>>2]=21360;c[ea+4>>2]=279;c[ea+8>>2]=0;t=0;La(55,21360,ea|0,280);Ga=t;t=0;if(!(Ga&1)){break}Ha=Kb(-1,-1)|0;Ia=I;Ja=c[Fa>>2]|0;Ka=Ja;Ks(Ka)|0;Wb(Ha|0)}}while(0);ea=(c[21364>>2]|0)+ -1|0;Ga=c[fa+8>>2]|0;do{if((c[fa+12>>2]|0)-Ga>>2>>>0>ea>>>0){Ma=c[Ga+(ea<<2)>>2]|0;if((Ma|0)==0){break}Na=Ma;Ks(c[Fa>>2]|0)|0;a:do{switch(k<<24>>24|0){case 109:{c[Z>>2]=c[f>>2];c[F+0>>2]=c[Z+0>>2];Ma=ix(e,F,h,Na,2)|0;Oa=c[h>>2]|0;if((Oa&4|0)==0&(Ma|0)<13){c[j+16>>2]=Ma+ -1;break a}else{c[h>>2]=Oa|4;break a}break};case 112:{Oa=j+8|0;Ma=c[f>>2]|0;Pa=d+8|0;Qa=$d[c[(c[Pa>>2]|0)+8>>2]&127](Pa)|0;Pa=a[Qa]|0;if((Pa&1)==0){Ra=(Pa&255)>>>1}else{Ra=c[Qa+4>>2]|0}Pa=a[Qa+12|0]|0;if((Pa&1)==0){Sa=(Pa&255)>>>1}else{Sa=c[Qa+16>>2]|0}if((Ra|0)==(0-Sa|0)){c[h>>2]=c[h>>2]|4;break a}c[X>>2]=Ma;c[C+0>>2]=c[X+0>>2];Ma=Lv(e,C,Qa,Qa+24|0,Na,h,0)|0;Pa=Ma-Qa|0;do{if((Ma|0)==(Qa|0)){if((c[Oa>>2]|0)!=12){break}c[Oa>>2]=0;break a}}while(0);if((Pa|0)!=12){break a}Qa=c[Oa>>2]|0;if((Qa|0)>=12){break a}c[Oa>>2]=Qa+12;break};case 99:{Qa=d+8|0;Ma=$d[c[(c[Qa>>2]|0)+12>>2]&127](Qa)|0;Qa=e;c[ha>>2]=c[Qa>>2];c[ia>>2]=c[f>>2];Ta=a[Ma]|0;if((Ta&1)==0){Ua=Ma+4|0;Va=Ma+4|0;Wa=(Ta&255)>>>1}else{Ta=c[Ma+8>>2]|0;Ua=Ta;Va=Ta;Wa=c[Ma+4>>2]|0}c[Q+0>>2]=c[ha+0>>2];c[P+0>>2]=c[ia+0>>2];Yw(ga,d,Q,P,g,h,j,Va,Ua+(Wa<<2)|0);c[Qa>>2]=c[ga>>2];break};case 116:case 110:{c[pa>>2]=c[f>>2];c[D+0>>2]=c[pa+0>>2];gx(0,e,D,h,Na);break};case 65:case 97:{Qa=c[f>>2]|0;Ma=d+8|0;Ta=$d[c[c[Ma>>2]>>2]&127](Ma)|0;c[da>>2]=Qa;c[S+0>>2]=c[da+0>>2];Qa=(Lv(e,S,Ta,Ta+168|0,Na,h,0)|0)-Ta|0;if((Qa|0)>=168){break a}c[j+24>>2]=((Qa|0)/12|0|0)%7|0;break};case 82:{Qa=e;c[ua>>2]=c[Qa>>2];c[va>>2]=c[f>>2];c[z+0>>2]=c[ua+0>>2];c[y+0>>2]=c[va+0>>2];Yw(ta,d,z,y,g,h,j,20560,20580|0);c[Qa>>2]=c[ta>>2];break};case 104:case 66:case 98:{Qa=c[f>>2]|0;Ta=d+8|0;Ma=$d[c[(c[Ta>>2]|0)+4>>2]&127](Ta)|0;c[ca>>2]=Qa;c[R+0>>2]=c[ca+0>>2];Qa=(Lv(e,R,Ma,Ma+288|0,Na,h,0)|0)-Ma|0;if((Qa|0)>=288){break a}c[j+16>>2]=((Qa|0)/12|0|0)%12|0;break};case 73:{Qa=j+8|0;c[$>>2]=c[f>>2];c[H+0>>2]=c[$+0>>2];Ma=ix(e,H,h,Na,2)|0;Ta=c[h>>2]|0;do{if((Ta&4|0)==0){if(!((Ma+ -1|0)>>>0<12)){break}c[Qa>>2]=Ma;break a}}while(0);c[h>>2]=Ta|4;break};case 101:case 100:{Ma=j+12|0;c[ba>>2]=c[f>>2];c[O+0>>2]=c[ba+0>>2];Qa=ix(e,O,h,Na,2)|0;Oa=c[h>>2]|0;do{if((Oa&4|0)==0){if(!((Qa+ -1|0)>>>0<31)){break}c[Ma>>2]=Qa;break a}}while(0);c[h>>2]=Oa|4;break};case 68:{Qa=e;c[ka>>2]=c[Qa>>2];c[la>>2]=c[f>>2];c[N+0>>2]=c[ka+0>>2];c[M+0>>2]=c[la+0>>2];Yw(ja,d,N,M,g,h,j,20448,20480|0);c[Qa>>2]=c[ja>>2];break};case 70:{Qa=e;c[na>>2]=c[Qa>>2];c[oa>>2]=c[f>>2];c[L+0>>2]=c[na+0>>2];c[K+0>>2]=c[oa+0>>2];Yw(ma,d,L,K,g,h,j,20480,20512|0);c[Qa>>2]=c[ma>>2];break};case 72:{c[aa>>2]=c[f>>2];c[J+0>>2]=c[aa+0>>2];Qa=ix(e,J,h,Na,2)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Qa|0)<24){c[j+8>>2]=Qa;break a}else{c[h>>2]=Ma|4;break a}break};case 106:{c[_>>2]=c[f>>2];c[G+0>>2]=c[_+0>>2];Ma=ix(e,G,h,Na,3)|0;Qa=c[h>>2]|0;if((Qa&4|0)==0&(Ma|0)<366){c[j+28>>2]=Ma;break a}else{c[h>>2]=Qa|4;break a}break};case 114:{Qa=e;c[ra>>2]=c[Qa>>2];c[sa>>2]=c[f>>2];c[B+0>>2]=c[ra+0>>2];c[A+0>>2]=c[sa+0>>2];Yw(qa,d,B,A,g,h,j,20512,20556|0);c[Qa>>2]=c[qa>>2];break};case 77:{c[Y>>2]=c[f>>2];c[E+0>>2]=c[Y+0>>2];Qa=ix(e,E,h,Na,2)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Qa|0)<60){c[j+4>>2]=Qa;break a}else{c[h>>2]=Ma|4;break a}break};case 83:{c[W>>2]=c[f>>2];c[x+0>>2]=c[W+0>>2];Ma=ix(e,x,h,Na,2)|0;Qa=c[h>>2]|0;if((Qa&4|0)==0&(Ma|0)<61){c[j>>2]=Ma;break a}else{c[h>>2]=Qa|4;break a}break};case 84:{Qa=e;c[xa>>2]=c[Qa>>2];c[ya>>2]=c[f>>2];c[w+0>>2]=c[xa+0>>2];c[v+0>>2]=c[ya+0>>2];Yw(wa,d,w,v,g,h,j,20584,20616|0);c[Qa>>2]=c[wa>>2];break};case 119:{c[V>>2]=c[f>>2];c[u+0>>2]=c[V+0>>2];Qa=ix(e,u,h,Na,1)|0;Ma=c[h>>2]|0;if((Ma&4|0)==0&(Qa|0)<7){c[j+24>>2]=Qa;break a}else{c[h>>2]=Ma|4;break a}break};case 120:{Ma=c[(c[d>>2]|0)+20>>2]|0;c[za>>2]=c[e>>2];c[Aa>>2]=c[f>>2];c[s+0>>2]=c[za+0>>2];c[r+0>>2]=c[Aa+0>>2];le[Ma&63](b,d,s,r,g,h,j);i=l;return};case 88:{Ma=d+8|0;Qa=$d[c[(c[Ma>>2]|0)+24>>2]&127](Ma)|0;Ma=e;c[Ca>>2]=c[Ma>>2];c[Da>>2]=c[f>>2];Ta=a[Qa]|0;if((Ta&1)==0){Xa=Qa+4|0;Ya=Qa+4|0;Za=(Ta&255)>>>1}else{Ta=c[Qa+8>>2]|0;Xa=Ta;Ya=Ta;Za=c[Qa+4>>2]|0}c[q+0>>2]=c[Ca+0>>2];c[p+0>>2]=c[Da+0>>2];Yw(Ba,d,q,p,g,h,j,Ya,Xa+(Za<<2)|0);c[Ma>>2]=c[Ba>>2];break};case 121:{c[U>>2]=c[f>>2];c[o+0>>2]=c[U+0>>2];Ma=ix(e,o,h,Na,4)|0;if((c[h>>2]&4|0)!=0){break a}if((Ma|0)<69){_a=Ma+2e3|0}else{_a=(Ma+ -69|0)>>>0<31?Ma+1900|0:Ma}c[j+20>>2]=_a+ -1900;break};case 89:{c[T>>2]=c[f>>2];c[n+0>>2]=c[T+0>>2];Ma=ix(e,n,h,Na,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=Ma+ -1900;break};case 37:{c[Ea>>2]=c[f>>2];c[m+0>>2]=c[Ea+0>>2];hx(0,e,m,h,Na);break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){Ha=Kb(-1,-1)|0;Ia=I;Ja=c[Fa>>2]|0;Ka=Ja;Ks(Ka)|0;Wb(Ha|0)}}function gx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=b;b=d;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=$d[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=$d[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{if(j){o=h;break}else{p=h;break a}}}}while(0);if((m|0)==15){m=0;if(j){p=0;break}else{o=0}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){q=$d[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{q=c[k>>2]|0}if(!(de[c[(c[d>>2]|0)+12>>2]&63](f,8192,q)|0)){p=o;break}k=c[g>>2]|0;h=k+12|0;r=c[h>>2]|0;if((r|0)==(c[k+16>>2]|0)){$d[c[(c[k>>2]|0)+40>>2]&127](k)|0;continue}else{c[h>>2]=r+4;continue}}o=c[g>>2]|0;do{if((o|0)==0){s=1}else{q=c[o+12>>2]|0;if((q|0)==(c[o+16>>2]|0)){t=$d[c[(c[o>>2]|0)+36>>2]&127](o)|0}else{t=c[q>>2]|0}if((t|0)==-1){c[g>>2]=0;s=1;break}else{s=(c[g>>2]|0)==0;break}}}while(0);do{if((p|0)==0){m=37}else{g=c[p+12>>2]|0;if((g|0)==(c[p+16>>2]|0)){u=$d[c[(c[p>>2]|0)+36>>2]&127](p)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;m=37;break}if(!s){break}i=a;return}}while(0);do{if((m|0)==37){if(s){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function hx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=b;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=$d[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=$d[c[(c[d>>2]|0)+36>>2]&127](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{if(h){n=d;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){o=$d[c[(c[h>>2]|0)+36>>2]&127](h)|0}else{o=c[d>>2]|0}if(!((de[c[(c[f>>2]|0)+52>>2]&63](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){$d[c[(c[o>>2]|0)+40>>2]&127](o)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){p=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){q=$d[c[(c[d>>2]|0)+36>>2]&127](d)|0}else{q=c[f>>2]|0}if((q|0)==-1){c[g>>2]=0;p=1;break}else{p=(c[g>>2]|0)==0;break}}}while(0);do{if((n|0)==0){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){r=$d[c[(c[n>>2]|0)+36>>2]&127](n)|0}else{r=c[g>>2]|0}if((r|0)==-1){c[k>>2]=0;l=38;break}if(!p){break}i=a;return}}while(0);do{if((l|0)==38){if(p){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function ix(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=i;h=a;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=$d[c[(c[a>>2]|0)+36>>2]&127](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=$d[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=$d[c[(c[j>>2]|0)+36>>2]&127](j)|0}else{q=c[b>>2]|0}b=e;if(!(de[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(de[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){$d[c[(c[q>>2]|0)+40>>2]&127](q)|0;r=f;s=o;t=o;u=n}else{c[a>>2]=k+4;r=f;s=o;t=o;u=n}while(1){v=u+ -48|0;n=r+ -1|0;o=c[h>>2]|0;do{if((o|0)==0){w=1}else{f=c[o+12>>2]|0;if((f|0)==(c[o+16>>2]|0)){x=$d[c[(c[o>>2]|0)+36>>2]&127](o)|0}else{x=c[f>>2]|0}if((x|0)==-1){c[h>>2]=0;w=1;break}else{w=(c[h>>2]|0)==0;break}}}while(0);do{if((t|0)==0){y=s;z=0;A=1}else{o=c[t+12>>2]|0;if((o|0)==(c[t+16>>2]|0)){B=$d[c[(c[t>>2]|0)+36>>2]&127](t)|0}else{B=c[o>>2]|0}if((B|0)==-1){c[l>>2]=0;y=0;z=0;A=1;break}else{y=s;z=s;A=(s|0)==0;break}}}while(0);C=c[h>>2]|0;if(!((w^A)&(n|0)>0)){break}o=c[C+12>>2]|0;if((o|0)==(c[C+16>>2]|0)){D=$d[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{D=c[o>>2]|0}if(!(de[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=63;break}o=((de[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;f=c[h>>2]|0;k=f+12|0;a=c[k>>2]|0;if((a|0)==(c[f+16>>2]|0)){$d[c[(c[f>>2]|0)+40>>2]&127](f)|0;E=n;s=y;t=z;u=o;r=E;continue}else{c[k>>2]=a+4;E=n;s=y;t=z;u=o;r=E;continue}}if((m|0)==63){i=g;return p|0}do{if((C|0)==0){F=1}else{E=c[C+12>>2]|0;if((E|0)==(c[C+16>>2]|0)){G=$d[c[(c[C>>2]|0)+36>>2]&127](C)|0}else{G=c[E>>2]|0}if((G|0)==-1){c[h>>2]=0;F=1;break}else{F=(c[h>>2]|0)==0;break}}}while(0);do{if((y|0)==0){m=60}else{h=c[y+12>>2]|0;if((h|0)==(c[y+16>>2]|0)){H=$d[c[(c[y>>2]|0)+36>>2]&127](y)|0}else{H=c[h>>2]|0}if((H|0)==-1){c[l>>2]=0;m=60;break}if(F){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(F){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function jx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=b+8|0;f=c[e>>2]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;g=sa(33,2147483647,21264,0)|0;h=t;t=0;if(!(h&1)){c[5312]=g;Nb(21256);break}g=Kb(-1,-1,0)|0;rc(21256);j=g;Xe(j)}}while(0);if((f|0)==(c[5312]|0)){k=b;_B(k);i=d;return}t=0;ma(282,c[e>>2]|0);e=t;t=0;if(!(e&1)){k=b;_B(k);i=d;return}d=Kb(-1,-1,0)|0;j=d;Xe(j)}function kx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+8|0;b=c[e>>2]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;f=sa(33,2147483647,21264,0)|0;g=t;t=0;if(!(g&1)){c[5312]=f;Nb(21256);break}f=Kb(-1,-1,0)|0;rc(21256);h=f;Xe(h)}}while(0);if((b|0)==(c[5312]|0)){i=d;return}t=0;ma(282,c[e>>2]|0);e=t;t=0;if(!(e&1)){i=d;return}d=Kb(-1,-1,0)|0;h=d;Xe(h)}function lx(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;f=g;l=g+8|0;m=l;n=f;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=qd(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b;c[r>>2]=q;i=g;return}else{s=m;t=l;u=l}while(1){l=a[s]|0;do{if((u|0)==0){v=t;w=0}else{m=u+24|0;j=c[m>>2]|0;if((j|0)==(c[u+28>>2]|0)){e=(pe[c[(c[u>>2]|0)+52>>2]&63](u,l&255)|0)==-1;v=e?0:t;w=e?0:u;break}else{c[m>>2]=j+1;a[j]=l;v=t;w=u;break}}}while(0);l=s+1|0;if((l|0)==(d|0)){q=v;break}else{s=l;t=v;u=w}}r=b;c[r>>2]=q;i=g;return}function mx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=b+8|0;f=c[e>>2]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;g=sa(33,2147483647,21264,0)|0;h=t;t=0;if(!(h&1)){c[5312]=g;Nb(21256);break}g=Kb(-1,-1,0)|0;rc(21256);j=g;Xe(j)}}while(0);if((f|0)==(c[5312]|0)){k=b;_B(k);i=d;return}t=0;ma(282,c[e>>2]|0);e=t;t=0;if(!(e&1)){k=b;_B(k);i=d;return}d=Kb(-1,-1,0)|0;j=d;Xe(j)}function nx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+8|0;b=c[e>>2]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;f=sa(33,2147483647,21264,0)|0;g=t;t=0;if(!(g&1)){c[5312]=f;Nb(21256);break}f=Kb(-1,-1,0)|0;rc(21256);h=f;Xe(h)}}while(0);if((b|0)==(c[5312]|0)){i=d;return}t=0;ma(282,c[e>>2]|0);e=t;t=0;if(!(e&1)){i=d;return}d=Kb(-1,-1,0)|0;h=d;Xe(h)}function ox(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+408|0;e=f;k=f+400|0;l=e;c[k>>2]=e+400;px(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a;c[n>>2]=m;i=f;return}else{o=l;p=k;q=k}while(1){k=c[o>>2]|0;if((p|0)==0){r=q;s=0}else{l=p+24|0;d=c[l>>2]|0;if((d|0)==(c[p+28>>2]|0)){t=pe[c[(c[p>>2]|0)+52>>2]&63](p,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;t=k}k=(t|0)==-1;r=k?0:q;s=k?0:p}k=o+4|0;if((k|0)==(j|0)){m=r;break}else{o=k;p=s;q=r}}n=a;c[n>>2]=m;i=f;return}function px(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j;l=j+112|0;m=i;i=i+8|0;n=j+8|0;o=k;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b;qd(n|0,100,o|0,f|0,c[g>>2]|0)|0;f=l;c[f>>2]=0;c[f+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=Dc(c[g>>2]|0)|0;t=0;g=Ja(19,d|0,m|0,n|0,l|0)|0;l=t;t=0;if(l&1){l=Kb(-1,-1)|0;if((f|0)==0){Wb(l|0)}t=0;oa(108,f|0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1,0)|0;Xe(n)}else{Wb(l|0)}}do{if((f|0)!=0){t=0;oa(108,f|0)|0;l=t;t=0;if(!(l&1)){break}l=Kb(-1,-1,0)|0;Xe(l)}}while(0);if((g|0)==-1){ly(22248)}else{c[e>>2]=d+(g<<2);i=j;return}}function qx(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function rx(a){a=a|0;i=i;return}function sx(a){a=a|0;i=i;return 127}function tx(a){a=a|0;i=i;return 127}function ux(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function vx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function wx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function xx(a,b){a=a|0;b=b|0;b=i;kt(a,1,45);i=b;return}function yx(a){a=a|0;i=i;return 0}function zx(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Ax(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Bx(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Cx(a){a=a|0;i=i;return}function Dx(a){a=a|0;i=i;return 127}function Ex(a){a=a|0;i=i;return 127}function Fx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Gx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Hx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Ix(a,b){a=a|0;b=b|0;b=i;kt(a,1,45);i=b;return}function Jx(a){a=a|0;i=i;return 0}function Kx(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Lx(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Mx(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Nx(a){a=a|0;i=i;return}function Ox(a){a=a|0;i=i;return 2147483647}function Px(a){a=a|0;i=i;return 2147483647}function Qx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Rx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Sx(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function Tx(a,b){a=a|0;b=b|0;b=i;Ct(a,1,45);i=b;return}function Ux(a){a=a|0;i=i;return 0}function Vx(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Wx(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function Xx(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Yx(a){a=a|0;i=i;return}function Zx(a){a=a|0;i=i;return 2147483647}function _x(a){a=a|0;i=i;return 2147483647}function $x(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function ay(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function by(a,b){a=a|0;b=b|0;var d=0;b=i;d=a;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;i=b;return}function cy(a,b){a=a|0;b=b|0;b=i;Ct(a,1,45);i=b;return}function dy(a){a=a|0;i=i;return 0}function ey(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function fy(b,c){b=b|0;c=c|0;c=b;a[c]=67109634;a[c+1|0]=262147;a[c+2|0]=1024;a[c+3|0]=4;i=i;return}function gy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function hy(a){a=a|0;i=i;return}function iy(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;d=i;i=i+16|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+104|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=i;i=i+8|0;v=i;i=i+16|0;w=i;i=i+104|0;x=o;y=p;c[y>>2]=x;z=p+4|0;c[z>>2]=283;A=o+100|0;t=0;na(42,r|0,h|0);o=t;t=0;do{if(o&1){B=Kb(-1,-1)|0;c[y>>2]=0;C=B;D=I;E=283;F=x}else{B=r;G=c[B>>2]|0;if((c[5342]|0)==-1){H=4}else{c[n>>2]=21368;c[n+4>>2]=279;c[n+8>>2]=0;t=0;La(55,21368,n|0,280);J=t;t=0;if(J&1){H=15}else{H=4}}a:do{if((H|0)==4){J=(c[21372>>2]|0)+ -1|0;K=c[G+8>>2]|0;do{if((c[G+12>>2]|0)-K>>2>>>0>J>>>0){L=c[K+(J<<2)>>2]|0;if((L|0)==0){break}M=L;a[s]=0;N=f;c[u>>2]=c[N>>2];O=c[h+4>>2]|0;t=0;P=l;Q=u;c[P+0>>2]=c[Q+0>>2];Q=qa(1,e|0,l|0,g|0,r|0,O|0,j|0,s|0,M|0,p|0,q|0,A|0)|0;O=t;t=0;if(O&1){H=15;break a}b:do{if(Q){O=v;t=0;Ja(c[(c[L>>2]|0)+32>>2]|0,M|0,20976,20986|0,O|0)|0;P=t;t=0;if(P&1){H=15;break a}P=w;R=c[q>>2]|0;S=c[y>>2]|0;T=R-S|0;do{if((T|0)>98){U=TB(T+2|0)|0;if((U|0)!=0){V=U;W=U;H=19;break}t=0;Ma(5);U=t;t=0;if(U&1){X=0;H=16}else{V=0;W=0;H=19}}else{V=0;W=P;H=19}}while(0);do{if((H|0)==19){if((a[s]|0)==0){Y=W}else{a[W]=45;Y=W+1|0}if(S>>>0<R>>>0){T=v+10|0;U=v;Z=Y;_=S;while(1){$=a[_]|0;aa=O;while(1){ba=aa+1|0;if((a[aa]|0)==$<<24>>24){ca=aa;break}if((ba|0)==(T|0)){ca=T;break}else{aa=ba}}a[Z]=a[20976+(ca-U)|0]|0;aa=_+1|0;$=Z+1|0;if(aa>>>0<(c[q>>2]|0)>>>0){Z=$;_=aa}else{da=$;break}}}else{da=Y}a[da]=0;c[m>>2]=k;if((rd(P|0,20992,m|0)|0)==1){if((V|0)==0){break b}UB(V);break b}_=xc(8)|0;t=0;na(132,_|0,21e3);Z=t;t=0;if(Z&1){Z=Kb(-1,-1)|0;U=I;Jb(_|0);ea=V;fa=U;ga=Z;break}t=0;La(13,_|0,18352,133);_=t;t=0;if(_&1){X=V;H=16;break}}}while(0);if((H|0)==16){P=Kb(-1,-1)|0;ea=X;fa=I;ga=P}if((ea|0)==0){ha=ga;ia=fa;break a}UB(ea);ha=ga;ia=fa;break a}}while(0);M=e;L=c[M>>2]|0;do{if((L|0)==0){ja=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){ja=L;break}t=0;Q=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;P=t;t=0;if(P&1){H=15;break a}if(!((Q|0)==-1)){ja=L;break}c[M>>2]=0;ja=0}}while(0);M=(ja|0)==0;L=c[N>>2]|0;do{if((L|0)==0){H=45}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){if(M){break}else{H=47;break}}t=0;Q=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;P=t;t=0;if(P&1){H=15;break a}if((Q|0)==-1){c[N>>2]=0;H=45;break}else{if(M){break}else{H=47;break}}}}while(0);if((H|0)==45){if(M){H=47}}if((H|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=ja;Ks(c[B>>2]|0)|0;N=c[y>>2]|0;c[y>>2]=0;if((N|0)==0){i=d;return}t=0;ma(c[z>>2]|0,N|0);N=t;t=0;if(N&1){N=Kb(-1,-1,0)|0;Xe(N)}else{i=d;return}}}while(0);J=xc(4)|0;wB(J);t=0;La(13,J|0,29328,218);J=t;t=0;if(J&1){H=15;break}}}while(0);if((H|0)==15){G=Kb(-1,-1)|0;ha=G;ia=I}Ks(c[B>>2]|0)|0;G=c[y>>2]|0;c[y>>2]=0;if((G|0)==0){ka=ha;la=ia;Wb(ka|0)}else{C=ha;D=ia;E=c[z>>2]|0;F=G;break}}}while(0);t=0;ma(E|0,F|0);F=t;t=0;if(F&1){F=Kb(-1,-1,0)|0;Xe(F)}else{ka=C;la=D;Wb(ka|0)}}function jy(a){a=a|0;i=i;return}function ky(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0;q=i;i=i+408|0;r=q;s=q+400|0;u=s;v=i;i=i+8|0;w=i;i=i+8|0;x=i;i=i+16|0;y=i;i=i+16|0;z=i;i=i+16|0;A=i;i=i+16|0;B=i;i=i+16|0;C=i;i=i+8|0;D=i;i=i+8|0;E=r;c[s>>2]=0;F=x;c[F+0>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;G=y;c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;H=z;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;J=A;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;K=B;c[K+0>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;t=0;Da(1,g|0,h|0,u|0,v|0,w|0,x|0,y|0,z|0,A|0,C|0);u=t;t=0;a:do{if(u&1){h=Kb(-1,-1)|0;L=E;M=283;N=h;O=I}else{h=n;c[o>>2]=c[h>>2];g=e;P=f;Q=s;R=m+8|0;S=A+1|0;T=A+4|0;U=A+8|0;V=z+1|0;W=z+4|0;X=z+8|0;Y=(j&512|0)!=0;Z=y+1|0;_=y+8|0;$=y+4|0;aa=B;ba=aa+1|0;ca=B+8|0;da=B+4|0;ea=Q+3|0;fa=n+4|0;ga=x+4|0;ha=r+400|0;ia=E;ja=E;ka=p;la=0;pa=0;qa=283;b:while(1){ra=c[g>>2]|0;do{if((ra|0)==0){sa=0}else{if((c[ra+12>>2]|0)!=(c[ra+16>>2]|0)){sa=ra;break}t=0;ta=oa(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;ua=t;t=0;if(ua&1){va=ja;wa=qa;xa=23;break b}if((ta|0)==-1){c[g>>2]=0;sa=0;break}else{sa=c[g>>2]|0;break}}}while(0);ra=(sa|0)==0;ta=c[P>>2]|0;do{if((ta|0)==0){xa=15}else{if((c[ta+12>>2]|0)!=(c[ta+16>>2]|0)){if(ra){ya=ta;break}else{za=ja;Aa=ia;Ba=pa;Ca=qa;xa=301;break b}}t=0;ua=oa(c[(c[ta>>2]|0)+36>>2]|0,ta|0)|0;Ea=t;t=0;if(Ea&1){va=ja;wa=qa;xa=23;break b}if((ua|0)==-1){c[P>>2]=0;xa=15;break}else{if(ra){ya=ta;break}else{za=ja;Aa=ia;Ba=pa;Ca=qa;xa=301;break b}}}}while(0);if((xa|0)==15){xa=0;if(ra){za=ja;Aa=ia;Ba=pa;Ca=qa;xa=301;break}else{ya=0}}c:do{switch(a[Q+la|0]|0){case 0:{xa=40;break};case 1:{if((la|0)==3){za=ja;Aa=ia;Ba=pa;Ca=qa;xa=301;break b}ta=c[g>>2]|0;ua=c[ta+12>>2]|0;if((ua|0)==(c[ta+16>>2]|0)){t=0;Ea=oa(c[(c[ta>>2]|0)+36>>2]|0,ta|0)|0;ta=t;t=0;if(ta&1){va=ja;wa=qa;xa=23;break b}else{Fa=Ea}}else{Fa=d[ua]|0}if(!((Fa&255)<<24>>24>-1)){xa=39;break b}if((b[(c[R>>2]|0)+(Fa<<24>>24<<1)>>1]&8192)==0){xa=39;break b}ua=c[g>>2]|0;Ea=ua+12|0;ta=c[Ea>>2]|0;if((ta|0)==(c[ua+16>>2]|0)){t=0;Ga=oa(c[(c[ua>>2]|0)+40>>2]|0,ua|0)|0;ua=t;t=0;if(ua&1){va=ja;wa=qa;xa=23;break b}else{Ha=Ga}}else{c[Ea>>2]=ta+1;Ha=d[ta]|0}t=0;na(87,B|0,Ha&255|0);ta=t;t=0;if(ta&1){va=ja;wa=qa;xa=23;break b}else{xa=40}break};case 3:{ta=a[H]|0;Ea=(ta&1)==0;if(Ea){Ia=(ta&255)>>>1}else{Ia=c[W>>2]|0}Ga=a[J]|0;ua=(Ga&1)==0;if(ua){Ja=(Ga&255)>>>1}else{Ja=c[T>>2]|0}if((Ia|0)==(0-Ja|0)){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break c}if(Ea){Ra=(ta&255)>>>1}else{Ra=c[W>>2]|0}do{if((Ra|0)!=0){if(ua){Sa=(Ga&255)>>>1}else{Sa=c[T>>2]|0}if((Sa|0)==0){break}Ta=c[g>>2]|0;Ua=c[Ta+12>>2]|0;Va=c[Ta+16>>2]|0;if((Ua|0)==(Va|0)){t=0;Wa=oa(c[(c[Ta>>2]|0)+36>>2]|0,Ta|0)|0;Xa=t;t=0;if(Xa&1){va=ja;wa=qa;xa=23;break b}Xa=c[g>>2]|0;Ya=Wa;Za=c[Xa+16>>2]|0;_a=c[Xa+12>>2]|0;$a=Xa;ab=a[H]|0}else{Ya=d[Ua]|0;Za=Va;_a=Ua;$a=Ta;ab=ta}Ta=$a+12|0;Ua=(_a|0)==(Za|0);if((Ya&255)<<24>>24==(a[(ab&1)==0?V:c[X>>2]|0]|0)){if(Ua){t=0;oa(c[(c[$a>>2]|0)+40>>2]|0,$a|0)|0;Va=t;t=0;if(Va&1){va=ja;wa=qa;xa=23;break b}}else{c[Ta>>2]=_a+1}Ta=a[H]|0;if((Ta&1)==0){bb=(Ta&255)>>>1}else{bb=c[W>>2]|0}Ka=ka;La=ja;Na=ia;Oa=ha;Pa=bb>>>0>1?z:pa;Qa=qa;break c}if(Ua){t=0;Ua=oa(c[(c[$a>>2]|0)+36>>2]|0,$a|0)|0;Ta=t;t=0;if(Ta&1){va=ja;wa=qa;xa=23;break b}else{cb=Ua}}else{cb=d[_a]|0}if(!((cb&255)<<24>>24==(a[(a[J]&1)==0?S:c[U>>2]|0]|0))){xa=131;break b}Ua=c[g>>2]|0;Ta=Ua+12|0;Va=c[Ta>>2]|0;if((Va|0)==(c[Ua+16>>2]|0)){t=0;oa(c[(c[Ua>>2]|0)+40>>2]|0,Ua|0)|0;Ua=t;t=0;if(Ua&1){va=ja;wa=qa;xa=23;break b}}else{c[Ta>>2]=Va+1}a[l]=1;Va=a[J]|0;if((Va&1)==0){db=(Va&255)>>>1}else{db=c[T>>2]|0}Ka=ka;La=ja;Na=ia;Oa=ha;Pa=db>>>0>1?A:pa;Qa=qa;break c}}while(0);if(Ea){eb=(ta&255)>>>1}else{eb=c[W>>2]|0}ua=c[g>>2]|0;Va=c[ua+12>>2]|0;Ta=(Va|0)==(c[ua+16>>2]|0);if((eb|0)==0){if(Ta){t=0;Ua=oa(c[(c[ua>>2]|0)+36>>2]|0,ua|0)|0;Xa=t;t=0;if(Xa&1){va=ja;wa=qa;xa=23;break b}fb=Ua;gb=a[J]|0}else{fb=d[Va]|0;gb=Ga}if(!((fb&255)<<24>>24==(a[(gb&1)==0?S:c[U>>2]|0]|0))){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break c}Ua=c[g>>2]|0;Xa=Ua+12|0;Wa=c[Xa>>2]|0;if((Wa|0)==(c[Ua+16>>2]|0)){t=0;oa(c[(c[Ua>>2]|0)+40>>2]|0,Ua|0)|0;Ua=t;t=0;if(Ua&1){va=ja;wa=qa;xa=23;break b}}else{c[Xa>>2]=Wa+1}a[l]=1;Wa=a[J]|0;if((Wa&1)==0){hb=(Wa&255)>>>1}else{hb=c[T>>2]|0}Ka=ka;La=ja;Na=ia;Oa=ha;Pa=hb>>>0>1?A:pa;Qa=qa;break c}if(Ta){t=0;Ta=oa(c[(c[ua>>2]|0)+36>>2]|0,ua|0)|0;ua=t;t=0;if(ua&1){va=ja;wa=qa;xa=23;break b}ib=Ta;jb=a[H]|0}else{ib=d[Va]|0;jb=ta}if(!((ib&255)<<24>>24==(a[(jb&1)==0?V:c[X>>2]|0]|0))){a[l]=1;Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break c}Va=c[g>>2]|0;Ta=Va+12|0;ua=c[Ta>>2]|0;if((ua|0)==(c[Va+16>>2]|0)){t=0;oa(c[(c[Va>>2]|0)+40>>2]|0,Va|0)|0;Va=t;t=0;if(Va&1){va=ja;wa=qa;xa=23;break b}}else{c[Ta>>2]=ua+1}ua=a[H]|0;if((ua&1)==0){kb=(ua&255)>>>1}else{kb=c[W>>2]|0}Ka=ka;La=ja;Na=ia;Oa=ha;Pa=kb>>>0>1?z:pa;Qa=qa;break};case 2:{if(!((pa|0)!=0|la>>>0<2)){if((la|0)==2){lb=(a[ea]|0)!=0}else{lb=0}if(!(Y|lb)){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=0;Qa=qa;break c}}ua=a[G]|0;Ta=(ua&1)==0;Va=Ta?Z:c[_>>2]|0;d:do{if((la|0)==0){mb=ya;nb=ya;ob=ua;pb=Va}else{if((d[Q+(la+ -1)|0]|0)>=2){mb=ya;nb=ya;ob=ua;pb=Va;break}Wa=Va+(Ta?(ua&255)>>>1:c[$>>2]|0)|0;Xa=Va;while(1){if((Xa|0)==(Wa|0)){qb=Wa;break}Ua=a[Xa]|0;if(!(Ua<<24>>24>-1)){qb=Xa;break}if((b[(c[R>>2]|0)+(Ua<<24>>24<<1)>>1]&8192)==0){qb=Xa;break}else{Xa=Xa+1|0}}Xa=qb-Va|0;Wa=a[K]|0;Ua=(Wa&1)==0;if(Ua){rb=(Wa&255)>>>1}else{rb=c[da>>2]|0}if(Xa>>>0>rb>>>0){mb=ya;nb=ya;ob=ua;pb=Va;break}if(Ua){Ua=(Wa&255)>>>1;sb=aa+(Ua-Xa)+1|0;tb=ba;ub=Ua}else{Ua=c[ca>>2]|0;Wa=c[da>>2]|0;sb=Ua+(Wa-Xa)|0;tb=Ua;ub=Wa}Wa=tb+ub|0;if((sb|0)==(Wa|0)){mb=ya;nb=ya;ob=ua;pb=qb;break}else{vb=Va;wb=sb}while(1){if((a[wb]|0)!=(a[vb]|0)){mb=ya;nb=ya;ob=ua;pb=Va;break d}Ua=wb+1|0;if((Ua|0)==(Wa|0)){mb=ya;nb=ya;ob=ua;pb=qb;break}else{vb=vb+1|0;wb=Ua}}}}while(0);e:while(1){if((ob&1)==0){xb=Z;yb=(ob&255)>>>1}else{xb=c[_>>2]|0;yb=c[$>>2]|0}if((pb|0)==(xb+yb|0)){break}ua=c[g>>2]|0;do{if((ua|0)==0){zb=0}else{if((c[ua+12>>2]|0)!=(c[ua+16>>2]|0)){zb=ua;break}t=0;Va=oa(c[(c[ua>>2]|0)+36>>2]|0,ua|0)|0;Ta=t;t=0;if(Ta&1){xa=21;break b}if((Va|0)==-1){c[g>>2]=0;zb=0;break}else{zb=c[g>>2]|0;break}}}while(0);ua=(zb|0)==0;do{if((nb|0)==0){Ab=mb;xa=168}else{if((c[nb+12>>2]|0)!=(c[nb+16>>2]|0)){if(ua){Bb=mb;Cb=nb;break}else{break e}}t=0;Va=oa(c[(c[nb>>2]|0)+36>>2]|0,nb|0)|0;Ta=t;t=0;if(Ta&1){xa=21;break b}if((Va|0)==-1){c[P>>2]=0;Ab=0;xa=168;break}else{if(ua^(mb|0)==0){Bb=mb;Cb=mb;break}else{break e}}}}while(0);if((xa|0)==168){xa=0;if(ua){break}else{Bb=Ab;Cb=0}}Va=c[g>>2]|0;Ta=c[Va+12>>2]|0;if((Ta|0)==(c[Va+16>>2]|0)){t=0;ta=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;Va=t;t=0;if(Va&1){xa=21;break b}else{Db=ta}}else{Db=d[Ta]|0}if(!((Db&255)<<24>>24==(a[pb]|0))){break}Ta=c[g>>2]|0;ta=Ta+12|0;Va=c[ta>>2]|0;if((Va|0)==(c[Ta+16>>2]|0)){t=0;oa(c[(c[Ta>>2]|0)+40>>2]|0,Ta|0)|0;Ta=t;t=0;if(Ta&1){xa=21;break b}}else{c[ta>>2]=Va+1}mb=Bb;nb=Cb;ob=a[G]|0;pb=pb+1|0}if(!Y){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break c}Va=a[G]|0;if((Va&1)==0){Eb=Z;Fb=(Va&255)>>>1}else{Eb=c[_>>2]|0;Fb=c[$>>2]|0}if((pb|0)==(Eb+Fb|0)){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa}else{xa=183;break b}break};case 4:{Va=ka;ta=ja;Ta=ia;Ga=ha;Ea=0;Wa=qa;f:while(1){Ua=c[g>>2]|0;do{if((Ua|0)==0){Gb=0}else{if((c[Ua+12>>2]|0)!=(c[Ua+16>>2]|0)){Gb=Ua;break}t=0;Xa=oa(c[(c[Ua>>2]|0)+36>>2]|0,Ua|0)|0;Hb=t;t=0;if(Hb&1){Ib=ta;Jb=Wa;xa=19;break b}if((Xa|0)==-1){c[g>>2]=0;Gb=0;break}else{Gb=c[g>>2]|0;break}}}while(0);Ua=(Gb|0)==0;ua=c[P>>2]|0;do{if((ua|0)==0){xa=196}else{if((c[ua+12>>2]|0)!=(c[ua+16>>2]|0)){if(Ua){break}else{break f}}t=0;Xa=oa(c[(c[ua>>2]|0)+36>>2]|0,ua|0)|0;Hb=t;t=0;if(Hb&1){Ib=ta;Jb=Wa;xa=19;break b}if((Xa|0)==-1){c[P>>2]=0;xa=196;break}else{if(Ua){break}else{break f}}}}while(0);if((xa|0)==196){xa=0;if(Ua){break}}ua=c[g>>2]|0;Xa=c[ua+12>>2]|0;if((Xa|0)==(c[ua+16>>2]|0)){t=0;Hb=oa(c[(c[ua>>2]|0)+36>>2]|0,ua|0)|0;ua=t;t=0;if(ua&1){Ib=ta;Jb=Wa;xa=19;break b}else{Lb=Hb}}else{Lb=d[Xa]|0}Xa=Lb&255;do{if(Xa<<24>>24>-1){if((b[(c[R>>2]|0)+(Lb<<24>>24<<1)>>1]&2048)==0){xa=214;break}Hb=c[o>>2]|0;if((Hb|0)==(Va|0)){ua=(c[fa>>2]|0)!=283;Mb=c[h>>2]|0;Nb=Va-Mb|0;Ob=Nb>>>0<2147483647?Nb<<1:-1;Pb=VB(ua?Mb:0,Ob)|0;if((Pb|0)==0){t=0;Ma(5);Mb=t;t=0;if(Mb&1){Ib=ta;Jb=Wa;xa=19;break b}}do{if(ua){c[h>>2]=Pb;Qb=Pb}else{Mb=c[h>>2]|0;c[h>>2]=Pb;if((Mb|0)==0){Qb=Pb;break}t=0;ma(c[fa>>2]|0,Mb|0);Mb=t;t=0;if(Mb&1){xa=211;break b}Qb=c[h>>2]|0}}while(0);c[fa>>2]=281;Pb=Qb+Nb|0;c[o>>2]=Pb;Rb=Pb;Sb=(c[h>>2]|0)+Ob|0}else{Rb=Hb;Sb=Va}c[o>>2]=Rb+1;a[Rb]=Xa;Tb=Sb;Ub=ta;Vb=Ta;Xb=Ga;Yb=Ea+1|0;Zb=Wa}else{xa=214}}while(0);if((xa|0)==214){xa=0;Ua=a[F]|0;if((Ua&1)==0){_b=(Ua&255)>>>1}else{_b=c[ga>>2]|0}if((_b|0)==0|(Ea|0)==0){break}if(!(Xa<<24>>24==(a[w]|0))){break}if((Ta|0)==(Ga|0)){Ua=Ta-ta|0;Pb=Ua>>>0<2147483647?Ua<<1:-1;ua=Ua>>2;if((Wa|0)==283){$b=0}else{$b=ta}Ua=VB($b,Pb)|0;Mb=Ua;if((Ua|0)==0){t=0;Ma(5);Ua=t;t=0;if(Ua&1){Ib=ta;Jb=Wa;xa=19;break b}}ac=Mb;bc=Mb+(ua<<2)|0;cc=Mb+(Pb>>>2<<2)|0;dc=281}else{ac=ta;bc=Ta;cc=Ga;dc=Wa}c[bc>>2]=Ea;Tb=Va;Ub=ac;Vb=bc+4|0;Xb=cc;Yb=0;Zb=dc}Pb=c[g>>2]|0;Mb=Pb+12|0;ua=c[Mb>>2]|0;if((ua|0)==(c[Pb+16>>2]|0)){t=0;oa(c[(c[Pb>>2]|0)+40>>2]|0,Pb|0)|0;Pb=t;t=0;if(Pb&1){Ib=Ub;Jb=Zb;xa=19;break b}else{Va=Tb;ta=Ub;Ta=Vb;Ga=Xb;Ea=Yb;Wa=Zb;continue}}else{c[Mb>>2]=ua+1;Va=Tb;ta=Ub;Ta=Vb;Ga=Xb;Ea=Yb;Wa=Zb;continue}}if((ta|0)==(Ta|0)|(Ea|0)==0){ec=ta;fc=Ta;gc=Ga;hc=Wa}else{if((Ta|0)==(Ga|0)){ua=Ta-ta|0;Mb=ua>>>0<2147483647?ua<<1:-1;Pb=ua>>2;if((Wa|0)==283){ic=0}else{ic=ta}ua=VB(ic,Mb)|0;Ua=ua;if((ua|0)==0){t=0;Ma(5);ua=t;t=0;if(ua&1){va=ta;wa=Wa;xa=23;break b}}jc=Ua;kc=Ua+(Pb<<2)|0;lc=Ua+(Mb>>>2<<2)|0;mc=281}else{jc=ta;kc=Ta;lc=Ga;mc=Wa}c[kc>>2]=Ea;ec=jc;fc=kc+4|0;gc=lc;hc=mc}Mb=c[C>>2]|0;if((Mb|0)>0){Ua=c[g>>2]|0;do{if((Ua|0)==0){nc=0}else{if((c[Ua+12>>2]|0)!=(c[Ua+16>>2]|0)){nc=Ua;break}t=0;Pb=oa(c[(c[Ua>>2]|0)+36>>2]|0,Ua|0)|0;ua=t;t=0;if(ua&1){va=ec;wa=hc;xa=23;break b}if((Pb|0)==-1){c[g>>2]=0;nc=0;break}else{nc=c[g>>2]|0;break}}}while(0);Ua=(nc|0)==0;Ea=c[P>>2]|0;do{if((Ea|0)==0){xa=250}else{if((c[Ea+12>>2]|0)!=(c[Ea+16>>2]|0)){if(Ua){oc=Ea;break}else{xa=256;break b}}t=0;Wa=oa(c[(c[Ea>>2]|0)+36>>2]|0,Ea|0)|0;Ga=t;t=0;if(Ga&1){va=ec;wa=hc;xa=23;break b}if((Wa|0)==-1){c[P>>2]=0;xa=250;break}else{if(Ua){oc=Ea;break}else{xa=256;break b}}}}while(0);if((xa|0)==250){xa=0;if(Ua){xa=256;break b}else{oc=0}}Ea=c[g>>2]|0;Wa=c[Ea+12>>2]|0;if((Wa|0)==(c[Ea+16>>2]|0)){t=0;Ga=oa(c[(c[Ea>>2]|0)+36>>2]|0,Ea|0)|0;Ea=t;t=0;if(Ea&1){va=ec;wa=hc;xa=23;break b}else{pc=Ga}}else{pc=d[Wa]|0}if(!((pc&255)<<24>>24==(a[v]|0))){xa=256;break b}Wa=c[g>>2]|0;Ga=Wa+12|0;Ea=c[Ga>>2]|0;if((Ea|0)==(c[Wa+16>>2]|0)){t=0;oa(c[(c[Wa>>2]|0)+40>>2]|0,Wa|0)|0;Wa=t;t=0;if(Wa&1){va=ec;wa=hc;xa=23;break b}else{qc=oc;rc=Mb;sc=oc;tc=Va}}else{c[Ga>>2]=Ea+1;qc=oc;rc=Mb;sc=oc;tc=Va}while(1){Ea=c[g>>2]|0;do{if((Ea|0)==0){uc=0}else{if((c[Ea+12>>2]|0)!=(c[Ea+16>>2]|0)){uc=Ea;break}t=0;Ga=oa(c[(c[Ea>>2]|0)+36>>2]|0,Ea|0)|0;Wa=t;t=0;if(Wa&1){xa=20;break b}if((Ga|0)==-1){c[g>>2]=0;uc=0;break}else{uc=c[g>>2]|0;break}}}while(0);Ea=(uc|0)==0;do{if((sc|0)==0){vc=qc;xa=272}else{if((c[sc+12>>2]|0)!=(c[sc+16>>2]|0)){if(Ea){wc=qc;xc=sc;break}else{xa=279;break b}}t=0;Xa=oa(c[(c[sc>>2]|0)+36>>2]|0,sc|0)|0;Ga=t;t=0;if(Ga&1){xa=20;break b}if((Xa|0)==-1){c[P>>2]=0;vc=0;xa=272;break}else{if(Ea^(qc|0)==0){wc=qc;xc=qc;break}else{xa=279;break b}}}}while(0);if((xa|0)==272){xa=0;if(Ea){xa=279;break b}else{wc=vc;xc=0}}Xa=c[g>>2]|0;Ga=c[Xa+12>>2]|0;if((Ga|0)==(c[Xa+16>>2]|0)){t=0;Wa=oa(c[(c[Xa>>2]|0)+36>>2]|0,Xa|0)|0;Xa=t;t=0;if(Xa&1){xa=20;break b}else{yc=Wa}}else{yc=d[Ga]|0}if(!((yc&255)<<24>>24>-1)){xa=279;break b}if((b[(c[R>>2]|0)+(yc<<24>>24<<1)>>1]&2048)==0){xa=279;break b}Ga=c[o>>2]|0;if((Ga|0)==(tc|0)){Wa=(c[fa>>2]|0)!=283;Xa=c[h>>2]|0;Ta=tc-Xa|0;ta=Ta>>>0<2147483647?Ta<<1:-1;Pb=VB(Wa?Xa:0,ta)|0;if((Pb|0)==0){t=0;Ma(5);Xa=t;t=0;if(Xa&1){xa=20;break b}}do{if(Wa){c[h>>2]=Pb;zc=Pb}else{Xa=c[h>>2]|0;c[h>>2]=Pb;if((Xa|0)==0){zc=Pb;break}t=0;ma(c[fa>>2]|0,Xa|0);Xa=t;t=0;if(Xa&1){xa=288;break b}zc=c[h>>2]|0}}while(0);c[fa>>2]=281;Pb=zc+Ta|0;c[o>>2]=Pb;Ac=Pb;Bc=(c[h>>2]|0)+ta|0}else{Ac=Ga;Bc=tc}Pb=c[g>>2]|0;Wa=c[Pb+12>>2]|0;if((Wa|0)==(c[Pb+16>>2]|0)){t=0;Ea=oa(c[(c[Pb>>2]|0)+36>>2]|0,Pb|0)|0;Pb=t;t=0;if(Pb&1){xa=20;break b}Cc=Ea;Dc=c[o>>2]|0}else{Cc=d[Wa]|0;Dc=Ac}c[o>>2]=Dc+1;a[Dc]=Cc;Wa=rc+ -1|0;c[C>>2]=Wa;Ea=c[g>>2]|0;Pb=Ea+12|0;Xa=c[Pb>>2]|0;if((Xa|0)==(c[Ea+16>>2]|0)){t=0;oa(c[(c[Ea>>2]|0)+40>>2]|0,Ea|0)|0;Ea=t;t=0;if(Ea&1){xa=20;break b}}else{c[Pb>>2]=Xa+1}if((Wa|0)>0){qc=wc;rc=Wa;sc=xc;tc=Bc}else{Ec=Bc;break}}}else{Ec=Va}if((c[o>>2]|0)==(c[h>>2]|0)){xa=299;break b}else{Ka=Ec;La=ec;Na=fc;Oa=gc;Pa=pa;Qa=hc}break};default:{Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa}}}while(0);g:do{if((xa|0)==40){xa=0;if((la|0)==3){za=ja;Aa=ia;Ba=pa;Ca=qa;xa=301;break b}else{Fc=ya;Gc=ya}while(1){ra=c[g>>2]|0;do{if((ra|0)==0){Hc=0}else{if((c[ra+12>>2]|0)!=(c[ra+16>>2]|0)){Hc=ra;break}t=0;Mb=oa(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;Ua=t;t=0;if(Ua&1){xa=22;break b}if((Mb|0)==-1){c[g>>2]=0;Hc=0;break}else{Hc=c[g>>2]|0;break}}}while(0);ra=(Hc|0)==0;do{if((Gc|0)==0){Ic=Fc;xa=53}else{if((c[Gc+12>>2]|0)!=(c[Gc+16>>2]|0)){if(ra){Jc=Fc;Kc=Gc;break}else{Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break g}}t=0;Ga=oa(c[(c[Gc>>2]|0)+36>>2]|0,Gc|0)|0;ta=t;t=0;if(ta&1){xa=22;break b}if((Ga|0)==-1){c[P>>2]=0;Ic=0;xa=53;break}else{if(ra^(Fc|0)==0){Jc=Fc;Kc=Fc;break}else{Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break g}}}}while(0);if((xa|0)==53){xa=0;if(ra){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break g}else{Jc=Ic;Kc=0}}Ga=c[g>>2]|0;ta=c[Ga+12>>2]|0;if((ta|0)==(c[Ga+16>>2]|0)){t=0;Ta=oa(c[(c[Ga>>2]|0)+36>>2]|0,Ga|0)|0;Ga=t;t=0;if(Ga&1){xa=22;break b}else{Lc=Ta}}else{Lc=d[ta]|0}if(!((Lc&255)<<24>>24>-1)){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break g}if((b[(c[R>>2]|0)+(Lc<<24>>24<<1)>>1]&8192)==0){Ka=ka;La=ja;Na=ia;Oa=ha;Pa=pa;Qa=qa;break g}ta=c[g>>2]|0;Ta=ta+12|0;Ga=c[Ta>>2]|0;if((Ga|0)==(c[ta+16>>2]|0)){t=0;Mb=oa(c[(c[ta>>2]|0)+40>>2]|0,ta|0)|0;ta=t;t=0;if(ta&1){xa=22;break b}else{Mc=Mb}}else{c[Ta>>2]=Ga+1;Mc=d[Ga]|0}t=0;na(87,B|0,Mc&255|0);Ga=t;t=0;if(Ga&1){xa=22;break b}else{Fc=Jc;Gc=Kc}}}}while(0);Va=la+1|0;if(Va>>>0<4){ha=Oa;ia=Na;ja=La;ka=Ka;la=Va;pa=Pa;qa=Qa}else{za=La;Aa=Na;Ba=Pa;Ca=Qa;xa=301;break}}h:do{if((xa|0)==19){pa=Kb(-1,-1)|0;L=Ib;M=Jb;N=pa;O=I;break a}else if((xa|0)==20){pa=Kb(-1,-1)|0;L=ec;M=hc;N=pa;O=I;break a}else if((xa|0)==21){pa=Kb(-1,-1)|0;L=ja;M=qa;N=pa;O=I;break a}else if((xa|0)==22){pa=Kb(-1,-1)|0;L=ja;M=qa;N=pa;O=I;break a}else if((xa|0)==23){pa=Kb(-1,-1)|0;L=va;M=wa;N=pa;O=I;break a}else if((xa|0)==39){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ja;Pc=qa}else if((xa|0)==131){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ja;Pc=qa}else if((xa|0)==183){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ja;Pc=qa}else if((xa|0)==211){pa=Kb(-1,-1,0)|0;Xe(pa)}else if((xa|0)==256){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ec;Pc=hc}else if((xa|0)==279){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ec;Pc=hc}else if((xa|0)==288){pa=Kb(-1,-1,0)|0;Xe(pa)}else if((xa|0)==299){c[k>>2]=c[k>>2]|4;Nc=0;Oc=ec;Pc=hc}else if((xa|0)==301){i:do{if((Ba|0)!=0){pa=Ba;la=Ba+1|0;ka=Ba+8|0;ia=Ba+4|0;ha=1;j:while(1){R=a[pa]|0;if((R&1)==0){Qc=(R&255)>>>1}else{Qc=c[ia>>2]|0}if(!(ha>>>0<Qc>>>0)){break i}R=c[g>>2]|0;do{if((R|0)==0){Rc=0}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){Rc=R;break}t=0;h=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;fa=t;t=0;if(fa&1){xa=18;break j}if((h|0)==-1){c[g>>2]=0;Rc=0;break}else{Rc=c[g>>2]|0;break}}}while(0);R=(Rc|0)==0;ra=c[P>>2]|0;do{if((ra|0)==0){xa=319}else{if((c[ra+12>>2]|0)!=(c[ra+16>>2]|0)){if(R){break}else{xa=327;break j}}t=0;h=oa(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;fa=t;t=0;if(fa&1){xa=18;break j}if((h|0)==-1){c[P>>2]=0;xa=319;break}else{if(R){break}else{xa=327;break j}}}}while(0);if((xa|0)==319){xa=0;if(R){xa=327;break}}ra=c[g>>2]|0;h=c[ra+12>>2]|0;if((h|0)==(c[ra+16>>2]|0)){t=0;fa=oa(c[(c[ra>>2]|0)+36>>2]|0,ra|0)|0;ra=t;t=0;if(ra&1){xa=18;break}else{Sc=fa}}else{Sc=d[h]|0}if((a[pa]&1)==0){Tc=la}else{Tc=c[ka>>2]|0}if(!((Sc&255)<<24>>24==(a[Tc+ha|0]|0))){xa=327;break}h=ha+1|0;fa=c[g>>2]|0;ra=fa+12|0;ga=c[ra>>2]|0;if((ga|0)==(c[fa+16>>2]|0)){t=0;oa(c[(c[fa>>2]|0)+40>>2]|0,fa|0)|0;fa=t;t=0;if(fa&1){xa=18;break}else{ha=h;continue}}else{c[ra>>2]=ga+1;ha=h;continue}}if((xa|0)==18){ha=Kb(-1,-1)|0;L=za;M=Ca;N=ha;O=I;break a}else if((xa|0)==327){c[k>>2]=c[k>>2]|4;Nc=0;Oc=za;Pc=Ca;break h}}}while(0);if((za|0)==(Aa|0)){Nc=1;Oc=Aa;Pc=Ca;break}c[D>>2]=0;py(x,za,Aa,D);if((c[D>>2]|0)==0){Nc=1;Oc=za;Pc=Ca;break}c[k>>2]=c[k>>2]|4;Nc=0;Oc=za;Pc=Ca}}while(0);lt(B);lt(A);lt(z);lt(y);lt(x);if((Oc|0)==0){i=q;return Nc|0}t=0;ma(Pc|0,Oc|0);g=t;t=0;if(g&1){g=Kb(-1,-1,0)|0;Xe(g)}else{i=q;return Nc|0}}}while(0);lt(B);lt(A);lt(z);lt(y);lt(x);if((L|0)==0){Wb(N|0)}t=0;ma(M|0,L|0);L=t;t=0;if(L&1){L=Kb(-1,-1,0)|0;Xe(L)}else{Wb(N|0)}return 0}function ly(a){a=a|0;var b=0;b=xc(8)|0;t=0;na(132,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,18352,133)}}function my(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+168|0;l=d;m=d+8|0;n=d+24|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;u=n;v=o;c[v>>2]=u;w=o+4|0;c[w>>2]=283;x=n+100|0;t=0;na(42,q|0,h|0);n=t;t=0;do{if(n&1){y=Kb(-1,-1)|0;c[v>>2]=0;z=I;A=y;B=u}else{y=q;C=c[y>>2]|0;if((c[5342]|0)==-1){D=4}else{c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21368,m|0,280);E=t;t=0;if(!(E&1)){D=4}}a:do{if((D|0)==4){E=(c[21372>>2]|0)+ -1|0;F=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-F>>2>>>0>E>>>0){G=c[F+(E<<2)>>2]|0;if((G|0)==0){break}H=G;a[r]=0;J=f;K=c[J>>2]|0;c[s>>2]=K;L=c[h+4>>2]|0;t=0;M=l;N=s;c[M+0>>2]=c[N+0>>2];N=qa(1,e|0,l|0,g|0,q|0,L|0,j|0,r|0,H|0,o|0,p|0,x|0)|0;L=t;t=0;if(L&1){break a}if(N){N=k;if((a[N]&1)==0){a[k+1|0]=0;a[N]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}N=G;if((a[r]|0)!=0){t=0;G=Ea(c[(c[N>>2]|0)+28>>2]|0,H|0,45)|0;L=t;t=0;if(L&1){break a}t=0;na(87,k|0,G|0);G=t;t=0;if(G&1){break a}}t=0;G=Ea(c[(c[N>>2]|0)+28>>2]|0,H|0,48)|0;H=t;t=0;if(H&1){break a}H=c[v>>2]|0;N=c[p>>2]|0;L=N+ -1|0;b:do{if(H>>>0<L>>>0){M=H;while(1){O=M+1|0;if(!((a[M]|0)==G<<24>>24)){P=M;break b}if(O>>>0<L>>>0){M=O}else{P=O;break}}}else{P=H}}while(0);t=0;sa(35,k|0,P|0,N|0)|0;H=t;t=0;if(H&1){break a}}H=e;L=c[H>>2]|0;do{if((L|0)==0){Q=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){Q=L;break}t=0;G=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;M=t;t=0;if(M&1){break a}if(!((G|0)==-1)){Q=L;break}c[H>>2]=0;Q=0}}while(0);H=(Q|0)==0;do{if((K|0)==0){D=33}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(H){break}else{D=35;break}}t=0;L=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;N=t;t=0;if(N&1){break a}if((L|0)==-1){c[J>>2]=0;D=33;break}else{if(H^(K|0)==0){break}else{D=35;break}}}}while(0);if((D|0)==33){if(H){D=35}}if((D|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=Q;Ks(c[y>>2]|0)|0;K=c[v>>2]|0;c[v>>2]=0;if((K|0)==0){i=d;return}t=0;ma(c[w>>2]|0,K|0);K=t;t=0;if(K&1){K=Kb(-1,-1,0)|0;Xe(K)}else{i=d;return}}}while(0);E=xc(4)|0;wB(E);t=0;La(13,E|0,29328,218);E=t;t=0;if(E&1){break}}}while(0);C=Kb(-1,-1)|0;E=I;Ks(c[y>>2]|0)|0;F=c[v>>2]|0;c[v>>2]=0;if((F|0)==0){R=E;S=C}else{z=E;A=C;B=F;break}Wb(S|0)}}while(0);t=0;ma(c[w>>2]|0,B|0);B=t;t=0;if(B&1){B=Kb(-1,-1,0)|0;Xe(B)}else{R=z;S=A;Wb(S|0)}}function ny(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=d;j=a[g]|0;if((j&1)==0){k=(j&255)>>>1;l=j;m=10}else{j=c[b>>2]|0;k=c[b+4>>2]|0;l=j&255;m=(j&-2)+ -1|0}j=e-h|0;if((e|0)==(d|0)){i=f;return b|0}if((m-k|0)>>>0<j>>>0){xt(b,m,k+j-m|0,k,k,0,0);n=a[g]|0}else{n=l}if((n&1)==0){o=b+1|0}else{o=c[b+8>>2]|0}n=e+(k-h)|0;h=d;d=o+k|0;while(1){a[d]=a[h]|0;l=h+1|0;if((l|0)==(e|0)){break}else{d=d+1|0;h=l}}a[o+n|0]=0;n=k+j|0;if((a[g]&1)==0){a[g]=n<<1;i=f;return b|0}else{c[b+4>>2]=n;i=f;return b|0}return 0}function oy(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;u=n+72|0;v=n+88|0;w=n+104|0;x=n+112|0;y=n+128|0;z=n+144|0;A=n+160|0;if(b){b=c[d>>2]|0;if(!((c[5200]|0)==-1)){c[p>>2]=20800;c[p+4>>2]=279;c[p+8>>2]=0;et(20800,p,280)}p=(c[20804>>2]|0)+ -1|0;B=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-B>>2>>>0>p>>>0)){C=xc(4)|0;D=C;wB(D);Md(C|0,29328,218)}b=c[B+(p<<2)>>2]|0;if((b|0)==0){C=xc(4)|0;D=C;wB(D);Md(C|0,29328,218)}C=b;_d[c[(c[b>>2]|0)+44>>2]&255](q,C);D=e;p=c[q>>2]|0;a[D]=p;a[D+1|0]=p>>8;a[D+2|0]=p>>16;a[D+3|0]=p>>24;p=b;_d[c[(c[p>>2]|0)+32>>2]&255](r,C);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;Xe(q)}q=r;c[D+0>>2]=c[q+0>>2];c[D+4>>2]=c[q+4>>2];c[D+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;lt(r);_d[c[(c[p>>2]|0)+28>>2]&255](s,C);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}t=0;na(45,k|0,0);q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;Xe(q)}q=s;c[r+0>>2]=c[q+0>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;lt(s);s=b;q=$d[c[(c[s>>2]|0)+12>>2]&127](C)|0;a[f]=q;q=$d[c[(c[s>>2]|0)+16>>2]&127](C)|0;a[g]=q;_d[c[(c[p>>2]|0)+20>>2]&255](u,C);q=h;if((a[q]&1)==0){a[h+1|0]=0;a[q]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}t=0;na(45,h|0,0);s=t;t=0;if(s&1){s=Kb(-1,-1,0)|0;Xe(s)}s=u;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;lt(u);_d[c[(c[p>>2]|0)+24>>2]&255](v,C);p=j;if((a[p]&1)==0){a[j+1|0]=0;a[p]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;Xe(u)}u=v;c[p+0>>2]=c[u+0>>2];c[p+4>>2]=c[u+4>>2];c[p+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;lt(v);E=$d[c[(c[b>>2]|0)+36>>2]&127](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[5184]|0)==-1)){c[o>>2]=20736;c[o+4>>2]=279;c[o+8>>2]=0;et(20736,o,280)}o=(c[20740>>2]|0)+ -1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=xc(4)|0;G=F;wB(G);Md(F|0,29328,218)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=xc(4)|0;G=F;wB(G);Md(F|0,29328,218)}F=C;_d[c[(c[C>>2]|0)+44>>2]&255](w,F);G=e;e=c[w>>2]|0;a[G]=e;a[G+1|0]=e>>8;a[G+2|0]=e>>16;a[G+3|0]=e>>24;e=C;_d[c[(c[e>>2]|0)+32>>2]&255](x,F);G=l;if((a[G]&1)==0){a[l+1|0]=0;a[G]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);l=t;t=0;if(l&1){l=Kb(-1,-1,0)|0;Xe(l)}l=x;c[G+0>>2]=c[l+0>>2];c[G+4>>2]=c[l+4>>2];c[G+8>>2]=c[l+8>>2];c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;lt(x);_d[c[(c[e>>2]|0)+28>>2]&255](y,F);x=k;if((a[x]&1)==0){a[k+1|0]=0;a[x]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}t=0;na(45,k|0,0);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}k=y;c[x+0>>2]=c[k+0>>2];c[x+4>>2]=c[k+4>>2];c[x+8>>2]=c[k+8>>2];c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;lt(y);y=C;k=$d[c[(c[y>>2]|0)+12>>2]&127](F)|0;a[f]=k;k=$d[c[(c[y>>2]|0)+16>>2]&127](F)|0;a[g]=k;_d[c[(c[e>>2]|0)+20>>2]&255](z,F);k=h;if((a[k]&1)==0){a[h+1|0]=0;a[k]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}t=0;na(45,h|0,0);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}h=z;c[k+0>>2]=c[h+0>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;lt(z);_d[c[(c[e>>2]|0)+24>>2]&255](A,F);e=j;if((a[e]&1)==0){a[j+1|0]=0;a[e]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}j=A;c[e+0>>2]=c[j+0>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;lt(A);E=$d[c[(c[C>>2]|0)+36>>2]&127](F)|0;c[m>>2]=E;i=n;return}}function py(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;h=b;j=a[h]|0;if((j&1)==0){k=(j&255)>>>1}else{k=c[b+4>>2]|0}if((k|0)==0){i=g;return}do{if((d|0)==(e|0)){l=j}else{k=e+ -4|0;if(k>>>0>d>>>0){m=d;n=k}else{l=j;break}do{k=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=k;m=m+4|0;n=n+ -4|0;}while(m>>>0<n>>>0);l=a[h]|0}}while(0);if((l&1)==0){o=b+1|0;p=(l&255)>>>1}else{o=c[b+8>>2]|0;p=c[b+4>>2]|0}b=e+ -4|0;e=a[o]|0;l=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){h=o+p|0;n=e;m=o;j=d;k=l;while(1){if(!k){if((n<<24>>24|0)!=(c[j>>2]|0)){break}}q=(h-m|0)>1?m+1|0:m;r=j+4|0;s=a[q]|0;t=s<<24>>24<1|s<<24>>24==127;if(r>>>0<b>>>0){n=s;m=q;j=r;k=t}else{u=s;v=t;break a}}c[f>>2]=4;i=g;return}else{u=e;v=l}}while(0);if(v){i=g;return}v=c[b>>2]|0;if(!(u<<24>>24>>>0<v>>>0|(v|0)==0)){i=g;return}c[f>>2]=4;i=g;return}function qy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function ry(a){a=a|0;i=i;return}function sy(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,pa=0,ra=0;d=i;i=i+16|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+400|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=i;i=i+8|0;v=i;i=i+40|0;w=i;i=i+104|0;x=o;y=p;c[y>>2]=x;z=p+4|0;c[z>>2]=283;A=o+400|0;t=0;na(42,r|0,h|0);o=t;t=0;do{if(o&1){B=Kb(-1,-1)|0;c[y>>2]=0;C=B;D=I;E=283;F=x}else{B=r;G=c[B>>2]|0;if((c[5340]|0)==-1){H=4}else{c[n>>2]=21360;c[n+4>>2]=279;c[n+8>>2]=0;t=0;La(55,21360,n|0,280);J=t;t=0;if(J&1){H=15}else{H=4}}a:do{if((H|0)==4){J=(c[21364>>2]|0)+ -1|0;K=c[G+8>>2]|0;do{if((c[G+12>>2]|0)-K>>2>>>0>J>>>0){L=c[K+(J<<2)>>2]|0;if((L|0)==0){break}M=L;a[s]=0;N=f;c[u>>2]=c[N>>2];O=c[h+4>>2]|0;t=0;P=l;Q=u;c[P+0>>2]=c[Q+0>>2];Q=qa(2,e|0,l|0,g|0,r|0,O|0,j|0,s|0,M|0,p|0,q|0,A|0)|0;O=t;t=0;if(O&1){H=15;break a}b:do{if(Q){O=v;t=0;Ja(c[(c[L>>2]|0)+48>>2]|0,M|0,21056,21066|0,O|0)|0;P=t;t=0;if(P&1){H=15;break a}P=w;R=c[q>>2]|0;S=c[y>>2]|0;T=R-S|0;do{if((T|0)>392){U=TB((T>>2)+2|0)|0;if((U|0)!=0){V=U;W=U;H=19;break}t=0;Ma(5);U=t;t=0;if(U&1){X=0;H=16}else{V=0;W=0;H=19}}else{V=0;W=P;H=19}}while(0);do{if((H|0)==19){if((a[s]|0)==0){Y=W}else{a[W]=45;Y=W+1|0}if(S>>>0<R>>>0){T=v+40|0;U=v;Z=Y;_=S;while(1){$=c[_>>2]|0;aa=O;while(1){ba=aa+4|0;if((c[aa>>2]|0)==($|0)){ca=aa;break}if((ba|0)==(T|0)){ca=T;break}else{aa=ba}}a[Z]=a[21056+(ca-U>>2)|0]|0;aa=_+4|0;$=Z+1|0;if(aa>>>0<(c[q>>2]|0)>>>0){Z=$;_=aa}else{da=$;break}}}else{da=Y}a[da]=0;c[m>>2]=k;if((rd(P|0,20992,m|0)|0)==1){if((V|0)==0){break b}UB(V);break b}_=xc(8)|0;t=0;na(132,_|0,21e3);Z=t;t=0;if(Z&1){Z=Kb(-1,-1)|0;U=I;Jb(_|0);ea=V;fa=U;ga=Z;break}t=0;La(13,_|0,18352,133);_=t;t=0;if(_&1){X=V;H=16;break}}}while(0);if((H|0)==16){P=Kb(-1,-1)|0;ea=X;fa=I;ga=P}if((ea|0)==0){ha=ga;ia=fa;break a}UB(ea);ha=ga;ia=fa;break a}}while(0);M=e;L=c[M>>2]|0;do{if((L|0)==0){ja=1}else{Q=c[L+12>>2]|0;if((Q|0)==(c[L+16>>2]|0)){t=0;P=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;O=t;t=0;if(O&1){H=15;break a}else{ka=P}}else{ka=c[Q>>2]|0}if((ka|0)==-1){c[M>>2]=0;ja=1;break}else{ja=(c[M>>2]|0)==0;break}}}while(0);L=c[N>>2]|0;do{if((L|0)==0){H=47}else{Q=c[L+12>>2]|0;if((Q|0)==(c[L+16>>2]|0)){t=0;P=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;O=t;t=0;if(O&1){H=15;break a}else{la=P}}else{la=c[Q>>2]|0}if((la|0)==-1){c[N>>2]=0;H=47;break}else{if(ja){break}else{H=49;break}}}}while(0);if((H|0)==47){if(ja){H=49}}if((H|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[M>>2];Ks(c[B>>2]|0)|0;N=c[y>>2]|0;c[y>>2]=0;if((N|0)==0){i=d;return}t=0;ma(c[z>>2]|0,N|0);N=t;t=0;if(N&1){N=Kb(-1,-1,0)|0;Xe(N)}else{i=d;return}}}while(0);J=xc(4)|0;wB(J);t=0;La(13,J|0,29328,218);J=t;t=0;if(J&1){H=15;break}}}while(0);if((H|0)==15){G=Kb(-1,-1)|0;ha=G;ia=I}Ks(c[B>>2]|0)|0;G=c[y>>2]|0;c[y>>2]=0;if((G|0)==0){pa=ha;ra=ia;Wb(pa|0)}else{C=ha;D=ia;E=c[z>>2]|0;F=G;break}}}while(0);t=0;ma(E|0,F|0);F=t;t=0;if(F&1){F=Kb(-1,-1,0)|0;Xe(F)}else{pa=C;ra=D;Wb(pa|0)}}function ty(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0;p=i;i=i+408|0;q=p;r=p+400|0;s=r;u=i;i=i+8|0;v=i;i=i+8|0;w=i;i=i+16|0;x=i;i=i+16|0;y=i;i=i+16|0;z=i;i=i+16|0;A=i;i=i+16|0;B=i;i=i+8|0;C=i;i=i+8|0;D=q;c[r>>2]=0;E=w;c[E+0>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;F=x;c[F+0>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;G=y;c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;H=z;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;J=A;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;t=0;Da(2,f|0,g|0,s|0,u|0,v|0,w|0,x|0,y|0,z|0,B|0);s=t;t=0;a:do{if(s&1){g=Kb(-1,-1)|0;K=D;L=283;M=g;N=I}else{g=m;c[n>>2]=c[g>>2];f=b;O=e;P=r;Q=l;R=z+4|0;S=z+8|0;T=y+4|0;U=y+8|0;V=(h&512|0)!=0;W=x+4|0;X=x+8|0;Y=A+4|0;Z=A+8|0;_=P+3|0;$=m+4|0;aa=w+4|0;ba=q+400|0;ca=D;da=D;ea=o;fa=0;ga=0;ha=283;b:while(1){ia=c[f>>2]|0;do{if((ia|0)==0){ja=1}else{ka=c[ia+12>>2]|0;if((ka|0)==(c[ia+16>>2]|0)){t=0;la=oa(c[(c[ia>>2]|0)+36>>2]|0,ia|0)|0;pa=t;t=0;if(pa&1){qa=da;ra=ha;ta=25;break b}else{ua=la}}else{ua=c[ka>>2]|0}if((ua|0)==-1){c[f>>2]=0;ja=1;break}else{ja=(c[f>>2]|0)==0;break}}}while(0);ia=c[O>>2]|0;do{if((ia|0)==0){ta=16}else{ka=c[ia+12>>2]|0;if((ka|0)==(c[ia+16>>2]|0)){t=0;la=oa(c[(c[ia>>2]|0)+36>>2]|0,ia|0)|0;pa=t;t=0;if(pa&1){qa=da;ra=ha;ta=25;break b}else{va=la}}else{va=c[ka>>2]|0}if((va|0)==-1){c[O>>2]=0;ta=16;break}else{if(ja){wa=ia;break}else{xa=da;ya=ca;za=ga;Aa=ha;ta=322;break b}}}}while(0);if((ta|0)==16){ta=0;if(ja){xa=da;ya=ca;za=ga;Aa=ha;ta=322;break}else{wa=0}}c:do{switch(a[P+fa|0]|0){case 0:{ta=42;break};case 1:{if((fa|0)==3){xa=da;ya=ca;za=ga;Aa=ha;ta=322;break b}ia=c[f>>2]|0;ka=c[ia+12>>2]|0;if((ka|0)==(c[ia+16>>2]|0)){t=0;la=oa(c[(c[ia>>2]|0)+36>>2]|0,ia|0)|0;ia=t;t=0;if(ia&1){qa=da;ra=ha;ta=25;break b}else{Ba=la}}else{Ba=c[ka>>2]|0}t=0;ka=sa(c[(c[Q>>2]|0)+12>>2]|0,l|0,8192,Ba|0)|0;la=t;t=0;if(la&1){qa=da;ra=ha;ta=25;break b}if(!ka){ta=41;break b}ka=c[f>>2]|0;la=ka+12|0;ia=c[la>>2]|0;if((ia|0)==(c[ka+16>>2]|0)){t=0;pa=oa(c[(c[ka>>2]|0)+40>>2]|0,ka|0)|0;ka=t;t=0;if(ka&1){qa=da;ra=ha;ta=25;break b}else{Ca=pa}}else{c[la>>2]=ia+4;Ca=c[ia>>2]|0}t=0;na(133,A|0,Ca|0);ia=t;t=0;if(ia&1){qa=da;ra=ha;ta=25;break b}else{ta=42}break};case 3:{ia=a[G]|0;la=(ia&1)==0;if(la){Ea=(ia&255)>>>1}else{Ea=c[T>>2]|0}pa=a[H]|0;ka=(pa&1)==0;if(ka){Fa=(pa&255)>>>1}else{Fa=c[R>>2]|0}if((Ea|0)==(0-Fa|0)){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break c}if(la){Na=(ia&255)>>>1}else{Na=c[T>>2]|0}do{if((Na|0)!=0){if(ka){Oa=(pa&255)>>>1}else{Oa=c[R>>2]|0}if((Oa|0)==0){break}Pa=c[f>>2]|0;Qa=c[Pa+12>>2]|0;if((Qa|0)==(c[Pa+16>>2]|0)){t=0;Ra=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){qa=da;ra=ha;ta=25;break b}Sa=Ra;Ta=a[G]|0}else{Sa=c[Qa>>2]|0;Ta=ia}Qa=c[f>>2]|0;Ra=Qa+12|0;Pa=c[Ra>>2]|0;Ua=(Pa|0)==(c[Qa+16>>2]|0);if((Sa|0)==(c[((Ta&1)==0?T:c[U>>2]|0)>>2]|0)){if(Ua){t=0;oa(c[(c[Qa>>2]|0)+40>>2]|0,Qa|0)|0;Va=t;t=0;if(Va&1){qa=da;ra=ha;ta=25;break b}}else{c[Ra>>2]=Pa+4}Ra=a[G]|0;if((Ra&1)==0){Wa=(Ra&255)>>>1}else{Wa=c[T>>2]|0}Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=Wa>>>0>1?y:ga;La=ha;break c}if(Ua){t=0;Ua=oa(c[(c[Qa>>2]|0)+36>>2]|0,Qa|0)|0;Qa=t;t=0;if(Qa&1){qa=da;ra=ha;ta=25;break b}else{Xa=Ua}}else{Xa=c[Pa>>2]|0}if((Xa|0)!=(c[((a[H]&1)==0?R:c[S>>2]|0)>>2]|0)){ta=134;break b}Pa=c[f>>2]|0;Ua=Pa+12|0;Qa=c[Ua>>2]|0;if((Qa|0)==(c[Pa+16>>2]|0)){t=0;oa(c[(c[Pa>>2]|0)+40>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){qa=da;ra=ha;ta=25;break b}}else{c[Ua>>2]=Qa+4}a[k]=1;Qa=a[H]|0;if((Qa&1)==0){Ya=(Qa&255)>>>1}else{Ya=c[R>>2]|0}Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=Ya>>>0>1?z:ga;La=ha;break c}}while(0);if(la){Za=(ia&255)>>>1}else{Za=c[T>>2]|0}ka=c[f>>2]|0;Qa=c[ka+12>>2]|0;Ua=(Qa|0)==(c[ka+16>>2]|0);if((Za|0)==0){if(Ua){t=0;Pa=oa(c[(c[ka>>2]|0)+36>>2]|0,ka|0)|0;Ra=t;t=0;if(Ra&1){qa=da;ra=ha;ta=25;break b}_a=Pa;$a=a[H]|0}else{_a=c[Qa>>2]|0;$a=pa}if((_a|0)!=(c[(($a&1)==0?R:c[S>>2]|0)>>2]|0)){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break c}Pa=c[f>>2]|0;Ra=Pa+12|0;Va=c[Ra>>2]|0;if((Va|0)==(c[Pa+16>>2]|0)){t=0;oa(c[(c[Pa>>2]|0)+40>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){qa=da;ra=ha;ta=25;break b}}else{c[Ra>>2]=Va+4}a[k]=1;Va=a[H]|0;if((Va&1)==0){ab=(Va&255)>>>1}else{ab=c[R>>2]|0}Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ab>>>0>1?z:ga;La=ha;break c}if(Ua){t=0;Ua=oa(c[(c[ka>>2]|0)+36>>2]|0,ka|0)|0;ka=t;t=0;if(ka&1){qa=da;ra=ha;ta=25;break b}bb=Ua;cb=a[G]|0}else{bb=c[Qa>>2]|0;cb=ia}if((bb|0)!=(c[((cb&1)==0?T:c[U>>2]|0)>>2]|0)){a[k]=1;Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break c}Qa=c[f>>2]|0;Ua=Qa+12|0;ka=c[Ua>>2]|0;if((ka|0)==(c[Qa+16>>2]|0)){t=0;oa(c[(c[Qa>>2]|0)+40>>2]|0,Qa|0)|0;Qa=t;t=0;if(Qa&1){qa=da;ra=ha;ta=25;break b}}else{c[Ua>>2]=ka+4}ka=a[G]|0;if((ka&1)==0){db=(ka&255)>>>1}else{db=c[T>>2]|0}Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=db>>>0>1?y:ga;La=ha;break};case 2:{if(!((ga|0)!=0|fa>>>0<2)){if((fa|0)==2){eb=(a[_]|0)!=0}else{eb=0}if(!(V|eb)){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=0;La=ha;break c}}ka=a[F]|0;Ua=(ka&1)==0?W:c[X>>2]|0;d:do{if((fa|0)==0){fb=wa;gb=wa;hb=ka;ib=Ua}else{if((d[P+(fa+ -1)|0]|0)<2){jb=ka;kb=Ua}else{fb=wa;gb=wa;hb=ka;ib=Ua;break}while(1){if((jb&1)==0){lb=W;mb=(jb&255)>>>1}else{lb=c[X>>2]|0;mb=c[W>>2]|0}if((kb|0)==(lb+(mb<<2)|0)){nb=jb;break}t=0;Qa=sa(c[(c[Q>>2]|0)+12>>2]|0,l|0,8192,c[kb>>2]|0)|0;Va=t;t=0;if(Va&1){ta=22;break b}if(!Qa){ta=148;break}jb=a[F]|0;kb=kb+4|0}if((ta|0)==148){ta=0;nb=a[F]|0}Qa=(nb&1)==0;Va=kb-(Qa?W:c[X>>2]|0)>>2;Ra=a[J]|0;Pa=(Ra&1)==0;if(Pa){ob=(Ra&255)>>>1}else{ob=c[Y>>2]|0}e:do{if(!(Va>>>0>ob>>>0)){if(Pa){pb=Y+(((Ra&255)>>>1)-Va<<2)|0;qb=Y;rb=(Ra&255)>>>1}else{sb=c[Z>>2]|0;tb=c[Y>>2]|0;pb=sb+(tb-Va<<2)|0;qb=sb;rb=tb}tb=qb+(rb<<2)|0;if((pb|0)==(tb|0)){fb=wa;gb=wa;hb=nb;ib=kb;break d}else{ub=Qa?W:c[X>>2]|0;vb=pb}while(1){if((c[vb>>2]|0)!=(c[ub>>2]|0)){break e}sb=vb+4|0;if((sb|0)==(tb|0)){fb=wa;gb=wa;hb=nb;ib=kb;break d}ub=ub+4|0;vb=sb}}}while(0);fb=wa;gb=wa;hb=nb;ib=Qa?W:c[X>>2]|0}}while(0);f:while(1){if((hb&1)==0){wb=W;xb=(hb&255)>>>1}else{wb=c[X>>2]|0;xb=c[W>>2]|0}if((ib|0)==(wb+(xb<<2)|0)){break}Ua=c[f>>2]|0;do{if((Ua|0)==0){yb=1}else{ka=c[Ua+12>>2]|0;if((ka|0)==(c[Ua+16>>2]|0)){t=0;ia=oa(c[(c[Ua>>2]|0)+36>>2]|0,Ua|0)|0;pa=t;t=0;if(pa&1){ta=23;break b}else{zb=ia}}else{zb=c[ka>>2]|0}if((zb|0)==-1){c[f>>2]=0;yb=1;break}else{yb=(c[f>>2]|0)==0;break}}}while(0);do{if((gb|0)==0){Ab=fb;ta=178}else{Ua=c[gb+12>>2]|0;if((Ua|0)==(c[gb+16>>2]|0)){t=0;Qa=oa(c[(c[gb>>2]|0)+36>>2]|0,gb|0)|0;ka=t;t=0;if(ka&1){ta=23;break b}else{Bb=Qa}}else{Bb=c[Ua>>2]|0}if((Bb|0)==-1){c[O>>2]=0;Ab=0;ta=178;break}else{if(yb^(fb|0)==0){Cb=fb;Db=fb;break}else{break f}}}}while(0);if((ta|0)==178){ta=0;if(yb){break}else{Cb=Ab;Db=0}}Ua=c[f>>2]|0;Qa=c[Ua+12>>2]|0;if((Qa|0)==(c[Ua+16>>2]|0)){t=0;ka=oa(c[(c[Ua>>2]|0)+36>>2]|0,Ua|0)|0;Ua=t;t=0;if(Ua&1){ta=23;break b}else{Eb=ka}}else{Eb=c[Qa>>2]|0}if((Eb|0)!=(c[ib>>2]|0)){break}Qa=c[f>>2]|0;ka=Qa+12|0;Ua=c[ka>>2]|0;if((Ua|0)==(c[Qa+16>>2]|0)){t=0;oa(c[(c[Qa>>2]|0)+40>>2]|0,Qa|0)|0;Qa=t;t=0;if(Qa&1){ta=23;break b}}else{c[ka>>2]=Ua+4}fb=Cb;gb=Db;hb=a[F]|0;ib=ib+4|0}if(!V){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break c}Ua=a[F]|0;if((Ua&1)==0){Fb=W;Gb=(Ua&255)>>>1}else{Fb=c[X>>2]|0;Gb=c[W>>2]|0}if((ib|0)==(Fb+(Gb<<2)|0)){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha}else{ta=193;break b}break};case 4:{Ua=ea;ka=da;Qa=ca;ia=ba;pa=0;la=ha;g:while(1){Va=c[f>>2]|0;do{if((Va|0)==0){Hb=1}else{Ra=c[Va+12>>2]|0;if((Ra|0)==(c[Va+16>>2]|0)){t=0;Pa=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;tb=t;t=0;if(tb&1){Ib=ka;Jb=la;ta=20;break b}else{Lb=Pa}}else{Lb=c[Ra>>2]|0}if((Lb|0)==-1){c[f>>2]=0;Hb=1;break}else{Hb=(c[f>>2]|0)==0;break}}}while(0);Va=c[O>>2]|0;do{if((Va|0)==0){ta=207}else{Ra=c[Va+12>>2]|0;if((Ra|0)==(c[Va+16>>2]|0)){t=0;Pa=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;tb=t;t=0;if(tb&1){Ib=ka;Jb=la;ta=20;break b}else{Mb=Pa}}else{Mb=c[Ra>>2]|0}if((Mb|0)==-1){c[O>>2]=0;ta=207;break}else{if(Hb){break}else{break g}}}}while(0);if((ta|0)==207){ta=0;if(Hb){break}}Va=c[f>>2]|0;Ra=c[Va+12>>2]|0;if((Ra|0)==(c[Va+16>>2]|0)){t=0;Pa=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;Va=t;t=0;if(Va&1){Ib=ka;Jb=la;ta=20;break b}else{Nb=Pa}}else{Nb=c[Ra>>2]|0}t=0;Ra=sa(c[(c[Q>>2]|0)+12>>2]|0,l|0,2048,Nb|0)|0;Pa=t;t=0;if(Pa&1){Ib=ka;Jb=la;ta=20;break b}if(Ra){Ra=c[n>>2]|0;if((Ra|0)==(Ua|0)){Pa=(c[$>>2]|0)!=283;Va=c[g>>2]|0;tb=Ua-Va|0;sb=tb>>>0<2147483647?tb<<1:-1;Ob=tb>>2;if(Pa){Pb=Va}else{Pb=0}Va=VB(Pb,sb)|0;tb=Va;if((Va|0)==0){t=0;Ma(5);Va=t;t=0;if(Va&1){Ib=ka;Jb=la;ta=20;break b}}do{if(Pa){c[g>>2]=tb;Qb=tb}else{Va=c[g>>2]|0;c[g>>2]=tb;if((Va|0)==0){Qb=tb;break}t=0;ma(c[$>>2]|0,Va|0);Va=t;t=0;if(Va&1){ta=224;break b}Qb=c[g>>2]|0}}while(0);c[$>>2]=281;tb=Qb+(Ob<<2)|0;c[n>>2]=tb;Rb=tb;Sb=(c[g>>2]|0)+(sb>>>2<<2)|0}else{Rb=Ra;Sb=Ua}c[n>>2]=Rb+4;c[Rb>>2]=Nb;Tb=Sb;Ub=ka;Vb=Qa;Xb=ia;Yb=pa+1|0;Zb=la}else{tb=a[E]|0;if((tb&1)==0){_b=(tb&255)>>>1}else{_b=c[aa>>2]|0}if((_b|0)==0|(pa|0)==0){break}if((Nb|0)!=(c[v>>2]|0)){break}if((Qa|0)==(ia|0)){tb=(la|0)!=283;Pa=Qa-ka|0;Va=Pa>>>0<2147483647?Pa<<1:-1;$b=Pa>>2;if(tb){ac=ka}else{ac=0}tb=VB(ac,Va)|0;Pa=tb;if((tb|0)==0){t=0;Ma(5);tb=t;t=0;if(tb&1){Ib=ka;Jb=la;ta=20;break b}}bc=Pa;cc=Pa+($b<<2)|0;dc=Pa+(Va>>>2<<2)|0;ec=281}else{bc=ka;cc=Qa;dc=ia;ec=la}c[cc>>2]=pa;Tb=Ua;Ub=bc;Vb=cc+4|0;Xb=dc;Yb=0;Zb=ec}Va=c[f>>2]|0;Pa=Va+12|0;$b=c[Pa>>2]|0;if(($b|0)==(c[Va+16>>2]|0)){t=0;oa(c[(c[Va>>2]|0)+40>>2]|0,Va|0)|0;Va=t;t=0;if(Va&1){Ib=Ub;Jb=Zb;ta=20;break b}else{Ua=Tb;ka=Ub;Qa=Vb;ia=Xb;pa=Yb;la=Zb;continue}}else{c[Pa>>2]=$b+4;Ua=Tb;ka=Ub;Qa=Vb;ia=Xb;pa=Yb;la=Zb;continue}}if((ka|0)==(Qa|0)|(pa|0)==0){fc=ka;gc=Qa;hc=ia;ic=la}else{if((Qa|0)==(ia|0)){$b=(la|0)!=283;Pa=Qa-ka|0;Va=Pa>>>0<2147483647?Pa<<1:-1;tb=Pa>>2;if($b){jc=ka}else{jc=0}$b=VB(jc,Va)|0;Pa=$b;if(($b|0)==0){t=0;Ma(5);$b=t;t=0;if($b&1){qa=ka;ra=la;ta=25;break b}}kc=Pa;lc=Pa+(tb<<2)|0;mc=Pa+(Va>>>2<<2)|0;nc=281}else{kc=ka;lc=Qa;mc=ia;nc=la}c[lc>>2]=pa;fc=kc;gc=lc+4|0;hc=mc;ic=nc}Va=c[B>>2]|0;if((Va|0)>0){Pa=c[f>>2]|0;do{if((Pa|0)==0){oc=1}else{tb=c[Pa+12>>2]|0;if((tb|0)==(c[Pa+16>>2]|0)){t=0;$b=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;pc=t;t=0;if(pc&1){qa=fc;ra=ic;ta=25;break b}else{qc=$b}}else{qc=c[tb>>2]|0}if((qc|0)==-1){c[f>>2]=0;oc=1;break}else{oc=(c[f>>2]|0)==0;break}}}while(0);Pa=c[O>>2]|0;do{if((Pa|0)==0){ta=268}else{pa=c[Pa+12>>2]|0;if((pa|0)==(c[Pa+16>>2]|0)){t=0;la=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;ia=t;t=0;if(ia&1){qa=fc;ra=ic;ta=25;break b}else{rc=la}}else{rc=c[pa>>2]|0}if((rc|0)==-1){c[O>>2]=0;ta=268;break}else{if(oc){sc=Pa;break}else{ta=274;break b}}}}while(0);if((ta|0)==268){ta=0;if(oc){ta=274;break b}else{sc=0}}Pa=c[f>>2]|0;pa=c[Pa+12>>2]|0;if((pa|0)==(c[Pa+16>>2]|0)){t=0;la=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){qa=fc;ra=ic;ta=25;break b}else{tc=la}}else{tc=c[pa>>2]|0}if((tc|0)!=(c[u>>2]|0)){ta=274;break b}pa=c[f>>2]|0;la=pa+12|0;Pa=c[la>>2]|0;if((Pa|0)==(c[pa+16>>2]|0)){t=0;oa(c[(c[pa>>2]|0)+40>>2]|0,pa|0)|0;pa=t;t=0;if(pa&1){qa=fc;ra=ic;ta=25;break b}else{uc=sc;vc=Va;wc=sc;xc=Ua}}else{c[la>>2]=Pa+4;uc=sc;vc=Va;wc=sc;xc=Ua}while(1){Pa=c[f>>2]|0;do{if((Pa|0)==0){yc=1}else{la=c[Pa+12>>2]|0;if((la|0)==(c[Pa+16>>2]|0)){t=0;pa=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;ia=t;t=0;if(ia&1){ta=21;break b}else{zc=pa}}else{zc=c[la>>2]|0}if((zc|0)==-1){c[f>>2]=0;yc=1;break}else{yc=(c[f>>2]|0)==0;break}}}while(0);do{if((wc|0)==0){Ac=uc;ta=291}else{Pa=c[wc+12>>2]|0;if((Pa|0)==(c[wc+16>>2]|0)){t=0;Ra=oa(c[(c[wc>>2]|0)+36>>2]|0,wc|0)|0;sb=t;t=0;if(sb&1){ta=21;break b}else{Bc=Ra}}else{Bc=c[Pa>>2]|0}if((Bc|0)==-1){c[O>>2]=0;Ac=0;ta=291;break}else{if(yc^(uc|0)==0){Cc=uc;Dc=uc;break}else{ta=298;break b}}}}while(0);if((ta|0)==291){ta=0;if(yc){ta=298;break b}else{Cc=Ac;Dc=0}}Pa=c[f>>2]|0;Ra=c[Pa+12>>2]|0;if((Ra|0)==(c[Pa+16>>2]|0)){t=0;sb=oa(c[(c[Pa>>2]|0)+36>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){ta=21;break b}else{Ec=sb}}else{Ec=c[Ra>>2]|0}t=0;Ra=sa(c[(c[Q>>2]|0)+12>>2]|0,l|0,2048,Ec|0)|0;sb=t;t=0;if(sb&1){ta=21;break b}if(!Ra){ta=298;break b}Ra=c[n>>2]|0;if((Ra|0)==(xc|0)){sb=(c[$>>2]|0)!=283;Pa=c[g>>2]|0;Ob=xc-Pa|0;la=Ob>>>0<2147483647?Ob<<1:-1;pa=Ob>>2;if(sb){Fc=Pa}else{Fc=0}Pa=VB(Fc,la)|0;Ob=Pa;if((Pa|0)==0){t=0;Ma(5);Pa=t;t=0;if(Pa&1){ta=21;break b}}do{if(sb){c[g>>2]=Ob;Gc=Ob}else{Pa=c[g>>2]|0;c[g>>2]=Ob;if((Pa|0)==0){Gc=Ob;break}t=0;ma(c[$>>2]|0,Pa|0);Pa=t;t=0;if(Pa&1){ta=309;break b}Gc=c[g>>2]|0}}while(0);c[$>>2]=281;Ob=Gc+(pa<<2)|0;c[n>>2]=Ob;Hc=Ob;Ic=(c[g>>2]|0)+(la>>>2<<2)|0}else{Hc=Ra;Ic=xc}Ob=c[f>>2]|0;sb=c[Ob+12>>2]|0;if((sb|0)==(c[Ob+16>>2]|0)){t=0;Pa=oa(c[(c[Ob>>2]|0)+36>>2]|0,Ob|0)|0;Ob=t;t=0;if(Ob&1){ta=21;break b}Jc=Pa;Kc=c[n>>2]|0}else{Jc=c[sb>>2]|0;Kc=Hc}c[n>>2]=Kc+4;c[Kc>>2]=Jc;sb=vc+ -1|0;c[B>>2]=sb;Pa=c[f>>2]|0;Ob=Pa+12|0;ia=c[Ob>>2]|0;if((ia|0)==(c[Pa+16>>2]|0)){t=0;oa(c[(c[Pa>>2]|0)+40>>2]|0,Pa|0)|0;Pa=t;t=0;if(Pa&1){ta=21;break b}}else{c[Ob>>2]=ia+4}if((sb|0)>0){uc=Cc;vc=sb;wc=Dc;xc=Ic}else{Lc=Ic;break}}}else{Lc=Ua}if((c[n>>2]|0)==(c[g>>2]|0)){ta=320;break b}else{Ga=Lc;Ha=fc;Ia=gc;Ja=hc;Ka=ga;La=ic}break};default:{Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha}}}while(0);h:do{if((ta|0)==42){ta=0;if((fa|0)==3){xa=da;ya=ca;za=ga;Aa=ha;ta=322;break b}else{Mc=wa;Nc=wa}while(1){Va=c[f>>2]|0;do{if((Va|0)==0){Oc=1}else{sb=c[Va+12>>2]|0;if((sb|0)==(c[Va+16>>2]|0)){t=0;ia=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;Ob=t;t=0;if(Ob&1){ta=24;break b}else{Pc=ia}}else{Pc=c[sb>>2]|0}if((Pc|0)==-1){c[f>>2]=0;Oc=1;break}else{Oc=(c[f>>2]|0)==0;break}}}while(0);do{if((Nc|0)==0){Qc=Mc;ta=56}else{Va=c[Nc+12>>2]|0;if((Va|0)==(c[Nc+16>>2]|0)){t=0;Ra=oa(c[(c[Nc>>2]|0)+36>>2]|0,Nc|0)|0;la=t;t=0;if(la&1){ta=24;break b}else{Rc=Ra}}else{Rc=c[Va>>2]|0}if((Rc|0)==-1){c[O>>2]=0;Qc=0;ta=56;break}else{if(Oc^(Mc|0)==0){Sc=Mc;Tc=Mc;break}else{Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break h}}}}while(0);if((ta|0)==56){ta=0;if(Oc){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break h}else{Sc=Qc;Tc=0}}Va=c[f>>2]|0;Ra=c[Va+12>>2]|0;if((Ra|0)==(c[Va+16>>2]|0)){t=0;la=oa(c[(c[Va>>2]|0)+36>>2]|0,Va|0)|0;Va=t;t=0;if(Va&1){ta=24;break b}else{Uc=la}}else{Uc=c[Ra>>2]|0}t=0;Ra=sa(c[(c[Q>>2]|0)+12>>2]|0,l|0,8192,Uc|0)|0;la=t;t=0;if(la&1){ta=24;break b}if(!Ra){Ga=ea;Ha=da;Ia=ca;Ja=ba;Ka=ga;La=ha;break h}Ra=c[f>>2]|0;la=Ra+12|0;Va=c[la>>2]|0;if((Va|0)==(c[Ra+16>>2]|0)){t=0;pa=oa(c[(c[Ra>>2]|0)+40>>2]|0,Ra|0)|0;Ra=t;t=0;if(Ra&1){ta=24;break b}else{Vc=pa}}else{c[la>>2]=Va+4;Vc=c[Va>>2]|0}t=0;na(133,A|0,Vc|0);Va=t;t=0;if(Va&1){ta=24;break b}else{Mc=Sc;Nc=Tc}}}}while(0);Ua=fa+1|0;if(Ua>>>0<4){ba=Ja;ca=Ia;da=Ha;ea=Ga;fa=Ua;ga=Ka;ha=La}else{xa=Ha;ya=Ia;za=Ka;Aa=La;ta=322;break}}i:do{if((ta|0)==20){ga=Kb(-1,-1)|0;K=Ib;L=Jb;M=ga;N=I;break a}else if((ta|0)==21){ga=Kb(-1,-1)|0;K=fc;L=ic;M=ga;N=I;break a}else if((ta|0)==22){ga=Kb(-1,-1)|0;K=da;L=ha;M=ga;N=I;break a}else if((ta|0)==23){ga=Kb(-1,-1)|0;K=da;L=ha;M=ga;N=I;break a}else if((ta|0)==24){ga=Kb(-1,-1)|0;K=da;L=ha;M=ga;N=I;break a}else if((ta|0)==25){ga=Kb(-1,-1)|0;K=qa;L=ra;M=ga;N=I;break a}else if((ta|0)==41){c[j>>2]=c[j>>2]|4;Wc=0;Xc=da;Yc=ha}else if((ta|0)==134){c[j>>2]=c[j>>2]|4;Wc=0;Xc=da;Yc=ha}else if((ta|0)==193){c[j>>2]=c[j>>2]|4;Wc=0;Xc=da;Yc=ha}else if((ta|0)==224){ga=Kb(-1,-1,0)|0;Xe(ga)}else if((ta|0)==274){c[j>>2]=c[j>>2]|4;Wc=0;Xc=fc;Yc=ic}else if((ta|0)==298){c[j>>2]=c[j>>2]|4;Wc=0;Xc=fc;Yc=ic}else if((ta|0)==309){ga=Kb(-1,-1,0)|0;Xe(ga)}else if((ta|0)==320){c[j>>2]=c[j>>2]|4;Wc=0;Xc=fc;Yc=ic}else if((ta|0)==322){j:do{if((za|0)!=0){ga=za;fa=za+4|0;ea=za+8|0;ca=1;k:while(1){ba=a[ga]|0;if((ba&1)==0){Zc=(ba&255)>>>1}else{Zc=c[fa>>2]|0}if(!(ca>>>0<Zc>>>0)){break j}ba=c[f>>2]|0;do{if((ba|0)==0){_c=1}else{Q=c[ba+12>>2]|0;if((Q|0)==(c[ba+16>>2]|0)){t=0;g=oa(c[(c[ba>>2]|0)+36>>2]|0,ba|0)|0;$=t;t=0;if($&1){ta=19;break k}else{$c=g}}else{$c=c[Q>>2]|0}if(($c|0)==-1){c[f>>2]=0;_c=1;break}else{_c=(c[f>>2]|0)==0;break}}}while(0);ba=c[O>>2]|0;do{if((ba|0)==0){ta=341}else{Q=c[ba+12>>2]|0;if((Q|0)==(c[ba+16>>2]|0)){t=0;g=oa(c[(c[ba>>2]|0)+36>>2]|0,ba|0)|0;$=t;t=0;if($&1){ta=19;break k}else{ad=g}}else{ad=c[Q>>2]|0}if((ad|0)==-1){c[O>>2]=0;ta=341;break}else{if(_c){break}else{ta=349;break k}}}}while(0);if((ta|0)==341){ta=0;if(_c){ta=349;break}}ba=c[f>>2]|0;Q=c[ba+12>>2]|0;if((Q|0)==(c[ba+16>>2]|0)){t=0;g=oa(c[(c[ba>>2]|0)+36>>2]|0,ba|0)|0;ba=t;t=0;if(ba&1){ta=19;break}else{bd=g}}else{bd=c[Q>>2]|0}if((a[ga]&1)==0){cd=fa}else{cd=c[ea>>2]|0}if((bd|0)!=(c[cd+(ca<<2)>>2]|0)){ta=349;break}Q=ca+1|0;g=c[f>>2]|0;ba=g+12|0;$=c[ba>>2]|0;if(($|0)==(c[g+16>>2]|0)){t=0;oa(c[(c[g>>2]|0)+40>>2]|0,g|0)|0;g=t;t=0;if(g&1){ta=19;break}else{ca=Q;continue}}else{c[ba>>2]=$+4;ca=Q;continue}}if((ta|0)==19){ca=Kb(-1,-1)|0;K=xa;L=Aa;M=ca;N=I;break a}else if((ta|0)==349){c[j>>2]=c[j>>2]|4;Wc=0;Xc=xa;Yc=Aa;break i}}}while(0);if((xa|0)==(ya|0)){Wc=1;Xc=ya;Yc=Aa;break}c[C>>2]=0;py(w,xa,ya,C);if((c[C>>2]|0)==0){Wc=1;Xc=xa;Yc=Aa;break}c[j>>2]=c[j>>2]|4;Wc=0;Xc=xa;Yc=Aa}}while(0);Dt(A);Dt(z);Dt(y);Dt(x);lt(w);if((Xc|0)==0){i=p;return Wc|0}t=0;ma(Yc|0,Xc|0);f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}else{i=p;return Wc|0}}}while(0);Dt(A);Dt(z);Dt(y);Dt(x);lt(w);if((K|0)==0){Wb(M|0)}t=0;ma(L|0,K|0);K=t;t=0;if(K&1){K=Kb(-1,-1,0)|0;Xe(K)}else{Wb(M|0)}return 0}function uy(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+464|0;l=d;m=d+8|0;n=d+24|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;u=n;v=o;c[v>>2]=u;w=o+4|0;c[w>>2]=283;x=n+400|0;t=0;na(42,q|0,h|0);n=t;t=0;do{if(n&1){y=Kb(-1,-1)|0;c[v>>2]=0;z=I;A=y;B=u}else{y=q;C=c[y>>2]|0;if((c[5340]|0)==-1){D=4}else{c[m>>2]=21360;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21360,m|0,280);E=t;t=0;if(!(E&1)){D=4}}a:do{if((D|0)==4){E=(c[21364>>2]|0)+ -1|0;F=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-F>>2>>>0>E>>>0){G=c[F+(E<<2)>>2]|0;if((G|0)==0){break}H=G;a[r]=0;J=f;K=c[J>>2]|0;c[s>>2]=K;L=c[h+4>>2]|0;t=0;M=l;N=s;c[M+0>>2]=c[N+0>>2];N=qa(2,e|0,l|0,g|0,q|0,L|0,j|0,r|0,H|0,o|0,p|0,x|0)|0;L=t;t=0;if(L&1){break a}if(N){N=k;if((a[N]&1)==0){c[k+4>>2]=0;a[N]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}N=G;if((a[r]|0)!=0){t=0;G=Ea(c[(c[N>>2]|0)+44>>2]|0,H|0,45)|0;L=t;t=0;if(L&1){break a}t=0;na(133,k|0,G|0);G=t;t=0;if(G&1){break a}}t=0;G=Ea(c[(c[N>>2]|0)+44>>2]|0,H|0,48)|0;H=t;t=0;if(H&1){break a}H=c[v>>2]|0;N=c[p>>2]|0;L=N+ -4|0;b:do{if(H>>>0<L>>>0){M=H;while(1){O=M+4|0;if((c[M>>2]|0)!=(G|0)){P=M;break b}if(O>>>0<L>>>0){M=O}else{P=O;break}}}else{P=H}}while(0);t=0;sa(36,k|0,P|0,N|0)|0;H=t;t=0;if(H&1){break a}}H=e;L=c[H>>2]|0;do{if((L|0)==0){Q=1}else{G=c[L+12>>2]|0;if((G|0)==(c[L+16>>2]|0)){t=0;M=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;O=t;t=0;if(O&1){break a}else{R=M}}else{R=c[G>>2]|0}if((R|0)==-1){c[H>>2]=0;Q=1;break}else{Q=(c[H>>2]|0)==0;break}}}while(0);do{if((K|0)==0){D=35}else{L=c[K+12>>2]|0;if((L|0)==(c[K+16>>2]|0)){t=0;N=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;G=t;t=0;if(G&1){break a}else{S=N}}else{S=c[L>>2]|0}if((S|0)==-1){c[J>>2]=0;D=35;break}else{if(Q){break}else{D=37;break}}}}while(0);if((D|0)==35){if(Q){D=37}}if((D|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[H>>2];Ks(c[y>>2]|0)|0;J=c[v>>2]|0;c[v>>2]=0;if((J|0)==0){i=d;return}t=0;ma(c[w>>2]|0,J|0);J=t;t=0;if(J&1){J=Kb(-1,-1,0)|0;Xe(J)}else{i=d;return}}}while(0);E=xc(4)|0;wB(E);t=0;La(13,E|0,29328,218);E=t;t=0;if(E&1){break}}}while(0);C=Kb(-1,-1)|0;E=I;Ks(c[y>>2]|0)|0;F=c[v>>2]|0;c[v>>2]=0;if((F|0)==0){T=E;U=C}else{z=E;A=C;B=F;break}Wb(U|0)}}while(0);t=0;ma(c[w>>2]|0,B|0);B=t;t=0;if(B&1){B=Kb(-1,-1,0)|0;Xe(B)}else{T=z;U=A;Wb(U|0)}}function vy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=b;h=d;j=a[g]|0;if((j&1)==0){k=(j&255)>>>1;l=j;m=1}else{j=c[b>>2]|0;k=c[b+4>>2]|0;l=j&255;m=(j&-2)+ -1|0}j=e-h>>2;if((j|0)==0){i=f;return b|0}if((m-k|0)>>>0<j>>>0){Jt(b,m,k+j-m|0,k,k,0,0);n=a[g]|0}else{n=l}if((n&1)==0){o=b+4|0}else{o=c[b+8>>2]|0}n=o+(k<<2)|0;if((d|0)==(e|0)){p=n}else{l=k+((e+ -4+(0-h)|0)>>>2)+1|0;h=d;d=n;while(1){c[d>>2]=c[h>>2];n=h+4|0;if((n|0)==(e|0)){break}else{d=d+4|0;h=n}}p=o+(l<<2)|0}c[p>>2]=0;p=k+j|0;if((a[g]&1)==0){a[g]=p<<1;i=f;return b|0}else{c[b+4>>2]=p;i=f;return b|0}return 0}



function Nu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0;e=i;i=i+8|0;f=e;g=f;a[g]=0;c[f+4>>2]=b;h=b;j=c[h>>2]|0;k=c[j+ -12>>2]|0;l=b;a:do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;do{if((m|0)==0){n=j;o=k;p=5}else{t=0;oa(102,m|0)|0;q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;r=q;break}else{q=c[h>>2]|0;n=q;o=c[q+ -12>>2]|0;p=5;break}}}while(0);if((p|0)==5){a[g]=1;m=c[l+(o+24)>>2]|0;q=m;do{if((m|0)==0){s=n;p=11}else{u=m+24|0;v=c[u>>2]|0;if((v|0)!=(c[m+28>>2]|0)){c[u>>2]=v+1;a[v]=d;break a}t=0;v=Ea(c[(c[m>>2]|0)+52>>2]|0,q|0,d&255|0)|0;u=t;t=0;if(u&1){break}if(!((v|0)==-1)){break a}s=c[h>>2]|0;p=11}}while(0);if((p|0)==11){q=c[s+ -12>>2]|0;t=0;na(43,l+q|0,c[l+(q+16)>>2]|1|0);q=t;t=0;if(!(q&1)){break}}q=Kb(-1,-1,0)|0;Ju(f);r=q}hb(r|0)|0;q=c[(c[h>>2]|0)+ -12>>2]|0;m=l+(q+16)|0;c[m>>2]=c[m>>2]|1;if((c[l+(q+20)>>2]&1|0)==0){Ic();i=e;return b|0}t=0;Ma(3);q=t;t=0;q=Kb(-1,-1)|0;t=0;Ma(2);m=t;t=0;if(m&1){m=Kb(-1,-1,0)|0;Xe(m)}else{Wb(q|0)}}}while(0);Ju(f);i=e;return b|0}function Ou(a){a=a|0;var b=0;b=i;Lt(a+4|0);_B(a);i=b;return}function Pu(a){a=a|0;var b=0;b=i;Lt(a+4|0);i=b;return}function Qu(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;e=c[(c[a>>2]|0)+ -12>>2]|0;Lt(d+(e+4)|0);_B(d+e|0);i=b;return}function Ru(a){a=a|0;var b=0;b=i;Lt(a+((c[(c[a>>2]|0)+ -12>>2]|0)+4)|0);i=b;return}function Su(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a+4|0;a=c[d>>2]|0;e=c[(c[a>>2]|0)+ -12>>2]|0;f=a;if((c[f+(e+24)>>2]|0)==0){i=b;return}if((c[f+(e+16)>>2]|0)!=0){i=b;return}if((c[f+(e+4)>>2]&8192|0)==0){i=b;return}if(Ya()|0){i=b;return}e=c[d>>2]|0;f=c[e+((c[(c[e>>2]|0)+ -12>>2]|0)+24)>>2]|0;t=0;e=oa(c[(c[f>>2]|0)+24>>2]|0,f|0)|0;f=t;t=0;do{if(!(f&1)){if(!((e|0)==-1)){i=b;return}a=c[d>>2]|0;g=c[(c[a>>2]|0)+ -12>>2]|0;h=a;t=0;na(43,h+g|0,c[h+(g+16)>>2]|1|0);g=t;t=0;if(g&1){break}i=b;return}}while(0);d=Kb(-1,-1,0)|0;hb(d|0)|0;t=0;Ma(2);d=t;t=0;if(d&1){d=Kb(-1,-1,0)|0;Xe(d)}else{i=b;return}}function Tu(a){a=a|0;i=i;return 18912}function Uu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;if((c|0)==1){jt(a,18928,35);i=d;return}else{$s(a,b,c);i=d;return}}function Vu(a){a=a|0;i=i;return}function Wu(a){a=a|0;var b=0;b=i;dt(a);_B(a);i=b;return}function Xu(a){a=a|0;var b=0;b=i;dt(a);i=b;return}function Yu(a){a=a|0;var b=0;b=i;Lt(a);_B(a);i=b;return}function Zu(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function _u(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function $u(a){a=a|0;i=i;return}function av(a){a=a|0;i=i;return}function bv(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;a:do{if((e|0)==(f|0)){g=c;h=6}else{j=e;k=c;while(1){if((k|0)==(d|0)){l=-1;break a}m=a[k]|0;n=a[j]|0;if(m<<24>>24<n<<24>>24){l=-1;break a}if(n<<24>>24<m<<24>>24){l=1;break a}m=k+1|0;n=j+1|0;if((n|0)==(f|0)){g=m;h=6;break}else{j=n;k=m}}}}while(0);if((h|0)==6){l=(g|0)!=(d|0)|0}i=b;return l|0}function cv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;g=e;h=f-g|0;if(h>>>0>4294967279){ft(b)}if(h>>>0<11){a[b]=h<<1;j=b+1|0}else{k=h+16&-16;l=YB(k)|0;c[b+8>>2]=l;c[b>>2]=k|1;c[b+4>>2]=h;j=l}if((e|0)==(f|0)){m=j;a[m]=0;i=d;return}else{n=e;o=j}while(1){a[o]=a[n]|0;e=n+1|0;if((e|0)==(f|0)){break}else{o=o+1|0;n=e}}m=j+(f+(0-g))|0;a[m]=0;i=d;return}function dv(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;b=i;if((c|0)==(d|0)){e=0;i=b;return e|0}else{f=0;g=c}while(1){c=(a[g]|0)+(f<<4)|0;h=c&-268435456;j=(h>>>24|h)^c;c=g+1|0;if((c|0)==(d|0)){e=j;break}else{g=c;f=j}}i=b;return e|0}function ev(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function fv(a){a=a|0;i=i;return}function gv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;a=i;a:do{if((e|0)==(f|0)){g=b;h=6}else{j=e;k=b;while(1){if((k|0)==(d|0)){l=-1;break a}m=c[k>>2]|0;n=c[j>>2]|0;if((m|0)<(n|0)){l=-1;break a}if((n|0)<(m|0)){l=1;break a}m=k+4|0;n=j+4|0;if((n|0)==(f|0)){g=m;h=6;break}else{j=n;k=m}}}}while(0);if((h|0)==6){l=(g|0)!=(d|0)|0}i=a;return l|0}function hv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;d=i;g=e;h=f-g|0;j=h>>2;if(j>>>0>1073741807){ft(b)}if(j>>>0<2){a[b]=h>>>1;k=b+4|0}else{h=j+4&-4;l=YB(h<<2)|0;c[b+8>>2]=l;c[b>>2]=h|1;c[b+4>>2]=j;k=l}if((e|0)==(f|0)){m=k;c[m>>2]=0;i=d;return}l=f+ -4+(0-g)|0;g=e;e=k;while(1){c[e>>2]=c[g>>2];j=g+4|0;if((j|0)==(f|0)){break}else{e=e+4|0;g=j}}m=k+((l>>>2)+1<<2)|0;c[m>>2]=0;i=d;return}function iv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a=i;if((b|0)==(d|0)){e=0;i=a;return e|0}else{f=0;g=b}while(1){b=(c[g>>2]|0)+(f<<4)|0;h=b&-268435456;j=(h>>>24|h)^b;b=g+4|0;if((b|0)==(d|0)){e=j;break}else{g=b;f=j}}i=a;return e|0}function jv(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function kv(a){a=a|0;i=i;return}function lv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0;k=i;i=i+136|0;l=k;m=k+8|0;n=k+16|0;o=k+24|0;p=k+40|0;q=k+56|0;r=k+64|0;s=k+72|0;u=k+80|0;v=k+88|0;w=k+96|0;x=k+104|0;y=k+128|0;if((c[g+4>>2]&1|0)==0){c[q>>2]=-1;z=c[(c[d>>2]|0)+16>>2]|0;A=e;c[s>>2]=c[A>>2];c[u>>2]=c[f>>2];B=n;C=s;c[B+0>>2]=c[C+0>>2];C=m;B=u;c[C+0>>2]=c[B+0>>2];le[z&63](r,d,n,m,g,h,q);m=c[r>>2]|0;c[A>>2]=m;A=c[q>>2]|0;if((A|0)==1){a[j]=1}else if((A|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}Ot(v,g);m=v;v=c[m>>2]|0;if((c[5342]|0)==-1){D=9}else{c[p>>2]=21368;c[p+4>>2]=279;c[p+8>>2]=0;t=0;La(55,21368,p|0,280);p=t;t=0;if(!(p&1)){D=9}}do{if((D|0)==9){p=(c[21372>>2]|0)+ -1|0;A=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-A>>2>>>0>p>>>0){q=c[A+(p<<2)>>2]|0;if((q|0)==0){break}r=q;Ks(c[m>>2]|0)|0;Ot(w,g);q=w;n=c[q>>2]|0;if((c[5378]|0)==-1){D=15}else{c[o>>2]=21512;c[o+4>>2]=279;c[o+8>>2]=0;t=0;La(55,21512,o|0,280);d=t;t=0;if(!(d&1)){D=15}}do{if((D|0)==15){d=(c[21516>>2]|0)+ -1|0;z=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-z>>2>>>0>d>>>0){B=c[z+(d<<2)>>2]|0;if((B|0)==0){break}C=B;Ks(c[q>>2]|0)|0;u=x;s=B;t=0;na(c[(c[s>>2]|0)+24>>2]|0,u|0,C|0);B=t;t=0;do{if(B&1){E=u}else{F=x+12|0;t=0;na(c[(c[s>>2]|0)+28>>2]|0,F|0,C|0);G=t;t=0;if(G&1){E=F;break}c[y>>2]=c[f>>2];F=x+24|0;t=0;G=l;H=y;c[G+0>>2]=c[H+0>>2];H=ka(1,e|0,l|0,u|0,F|0,r|0,h|0,1)|0;F=t;t=0;if(F&1){F=Kb(-1,-1)|0;G=I;lt(x+12|0);lt(x);J=F;K=G;Wb(J|0)}else{a[j]=(H|0)==(u|0)|0;c[b>>2]=c[e>>2];lt(x+12|0);lt(x);i=k;return}}}while(0);C=Kb(-1,-1)|0;s=I;if((u|0)==(E|0)){J=C;K=s;Wb(J|0)}else{L=E}while(1){B=L+ -12|0;lt(B);if((B|0)==(u|0)){J=C;K=s;break}else{L=B}}Wb(J|0)}}while(0);d=xc(4)|0;wB(d);t=0;La(13,d|0,29328,218);d=t;t=0;if(d&1){break}}}while(0);r=Kb(-1,-1)|0;n=I;Ks(c[q>>2]|0)|0;J=r;K=n;Wb(J|0)}}while(0);p=xc(4)|0;wB(p);t=0;La(13,p|0,29328,218);p=t;t=0;if(p&1){break}}}while(0);L=Kb(-1,-1)|0;E=I;Ks(c[m>>2]|0)|0;J=L;K=E;Wb(J|0)}function mv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;l=i;i=i+104|0;m=(g-f|0)/12|0;n=l;do{if(m>>>0>100){o=TB(m)|0;if((o|0)!=0){p=o;q=o;break}t=0;Ma(5);o=t;t=0;if(!(o&1)){p=0;q=0;break}o=Kb(-1,-1)|0;r=o;s=I;Wb(r|0)}else{p=0;q=n}}while(0);n=(f|0)==(g|0);if(n){u=0;v=m}else{o=f;w=0;x=m;m=q;while(1){y=a[o]|0;if((y&1)==0){z=(y&255)>>>1}else{z=c[o+4>>2]|0}if((z|0)==0){a[m]=2;A=w+1|0;B=x+ -1|0}else{a[m]=1;A=w;B=x}y=o+12|0;if((y|0)==(g|0)){u=A;v=B;break}else{o=y;w=A;x=B;m=m+1|0}}}m=b;b=e;e=h;B=0;x=u;u=v;a:while(1){v=c[m>>2]|0;do{if((v|0)==0){C=0}else{if((c[v+12>>2]|0)!=(c[v+16>>2]|0)){C=v;break}t=0;A=oa(c[(c[v>>2]|0)+36>>2]|0,v|0)|0;w=t;t=0;if(w&1){D=6;break a}if((A|0)==-1){c[m>>2]=0;C=0;break}else{C=c[m>>2]|0;break}}}while(0);v=(C|0)==0;A=c[b>>2]|0;do{if((A|0)==0){E=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){E=A;break}t=0;w=oa(c[(c[A>>2]|0)+36>>2]|0,A|0)|0;o=t;t=0;if(o&1){D=6;break a}if(!((w|0)==-1)){E=A;break}c[b>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[m>>2]|0;if(!((v^F)&(u|0)!=0)){D=79;break}A=c[G+12>>2]|0;if((A|0)==(c[G+16>>2]|0)){t=0;w=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;o=t;t=0;if(o&1){D=6;break}else{H=w}}else{H=d[A]|0}A=H&255;if(k){J=A}else{t=0;w=Ea(c[(c[e>>2]|0)+12>>2]|0,h|0,A|0)|0;A=t;t=0;if(A&1){D=6;break}else{J=w}}w=B+1|0;if(n){B=w;u=u;x=x;continue}b:do{if(k){A=0;o=f;z=x;y=u;K=q;while(1){do{if((a[K]|0)==1){L=a[o]|0;M=(L&1)==0;if(M){N=o+1|0}else{N=c[o+8>>2]|0}if(!(J<<24>>24==(a[N+B|0]|0))){a[K]=0;O=A;P=z;Q=y+ -1|0;break}if(M){R=(L&255)>>>1}else{R=c[o+4>>2]|0}if((R|0)!=(w|0)){O=1;P=z;Q=y;break}a[K]=2;O=1;P=z+1|0;Q=y+ -1|0}else{O=A;P=z;Q=y}}while(0);L=o+12|0;if((L|0)==(g|0)){S=O;T=P;U=Q;break b}A=O;o=L;z=P;y=Q;K=K+1|0}}else{K=0;y=f;z=x;o=u;A=q;while(1){do{if((a[A]|0)==1){L=y;if((a[L]&1)==0){V=y+1|0}else{V=c[y+8>>2]|0}t=0;M=Ea(c[(c[e>>2]|0)+12>>2]|0,h|0,a[V+B|0]|0)|0;W=t;t=0;if(W&1){D=5;break a}if(!(J<<24>>24==M<<24>>24)){a[A]=0;X=K;Y=z;Z=o+ -1|0;break}M=a[L]|0;if((M&1)==0){_=(M&255)>>>1}else{_=c[y+4>>2]|0}if((_|0)!=(w|0)){X=1;Y=z;Z=o;break}a[A]=2;X=1;Y=z+1|0;Z=o+ -1|0}else{X=K;Y=z;Z=o}}while(0);M=y+12|0;if((M|0)==(g|0)){S=X;T=Y;U=Z;break b}K=X;y=M;z=Y;o=Z;A=A+1|0}}}while(0);if(!S){B=w;x=T;u=U;continue}v=c[m>>2]|0;A=v+12|0;o=c[A>>2]|0;if((o|0)==(c[v+16>>2]|0)){t=0;oa(c[(c[v>>2]|0)+40>>2]|0,v|0)|0;v=t;t=0;if(v&1){D=6;break}}else{c[A>>2]=o+1}if((U+T|0)>>>0<2){B=w;x=T;u=U;continue}else{$=f;aa=T;ba=q}while(1){do{if((a[ba]|0)==2){o=a[$]|0;if((o&1)==0){ca=(o&255)>>>1}else{ca=c[$+4>>2]|0}if((ca|0)==(w|0)){da=aa;break}a[ba]=0;da=aa+ -1|0}else{da=aa}}while(0);o=$+12|0;if((o|0)==(g|0)){B=w;x=da;u=U;continue a}else{$=o;aa=da;ba=ba+1|0}}}if((D|0)==5){ba=Kb(-1,-1)|0;ea=ba;fa=I}else if((D|0)==6){ba=Kb(-1,-1)|0;ea=ba;fa=I}else if((D|0)==79){do{if((G|0)==0){ga=0;D=85}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){ga=G;D=85;break}t=0;ba=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;da=t;t=0;if(da&1){break}if((ba|0)==-1){c[m>>2]=0;ga=0;D=85;break}else{ga=c[m>>2]|0;D=85;break}}}while(0);c:do{if((D|0)==85){m=(ga|0)==0;do{if(F){D=91}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(m){break}else{D=93;break}}t=0;G=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;ba=t;t=0;if(ba&1){break c}if((G|0)==-1){c[b>>2]=0;D=91;break}else{if(m){break}else{D=93;break}}}}while(0);if((D|0)==91){if(m){D=93}}if((D|0)==93){c[j>>2]=c[j>>2]|2}d:do{if(n){D=98}else{if((a[q]|0)==2){ha=f;break}else{ia=f;ja=q}while(1){G=ia+12|0;ba=ja+1|0;if((G|0)==(g|0)){D=98;break d}if((a[ba]|0)==2){ha=G;break}else{ja=ba;ia=G}}}}while(0);if((D|0)==98){c[j>>2]=c[j>>2]|4;ha=g}if((p|0)==0){i=l;return ha|0}t=0;ma(281,p|0);m=t;t=0;if(m&1){m=Kb(-1,-1,0)|0;Xe(m)}else{i=l;return ha|0}}}while(0);ha=Kb(-1,-1)|0;ea=ha;fa=I}if((p|0)==0){r=ea;s=fa;Wb(r|0)}t=0;ma(281,p|0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{r=ea;s=fa;Wb(r|0)}return 0}function nv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];ov(a,0,k,j,f,g,h);i=b;return}function ov(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+256|0;l=e;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l;ew(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=a[m]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}t=0;J=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;K=t;t=0;if(K&1){L=37;break b}if(!((J|0)==-1)){H=F;break}c[A>>2]=0;H=0}}while(0);J=(H|0)==0;K=c[B>>2]|0;do{if((K|0)==0){L=21}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(J){M=K;break}else{N=K;O=G;break b}}t=0;P=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;Q=t;t=0;if(Q&1){L=37;break b}if((P|0)==-1){c[B>>2]=0;L=21;break}else{if(J){M=K;break}else{N=K;O=G;break b}}}}while(0);if((L|0)==21){L=0;if(J){N=0;O=G;break}else{M=0}}K=a[h]|0;P=(K&1)==0;if(P){R=(K&255)>>>1}else{R=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(R|0)){if(P){S=(K&255)>>>1;T=(K&255)>>>1}else{K=c[D>>2]|0;S=K;T=K}t=0;La(30,o|0,T<<1|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){U=10}else{U=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,U|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){V=x}else{V=c[y>>2]|0}c[p>>2]=V+S;W=V}else{W=G}K=H+12|0;P=c[K>>2]|0;Q=H+16|0;if((P|0)==(c[Q>>2]|0)){t=0;X=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;Y=t;t=0;if(Y&1){L=37;break}else{Z=X}}else{Z=d[P]|0}if((Gv(Z&255,v,W,p,s,E,n,w,r,u)|0)!=0){N=M;O=W;break}P=c[K>>2]|0;if((P|0)==(c[Q>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;Q=t;t=0;if(Q&1){L=37;break}else{F=H;G=W;continue}}else{c[K>>2]=P+1;F=H;G=W;continue}}if((L|0)==37){G=Kb(-1,-1)|0;_=G;$=I;lt(o);lt(n);Wb(_|0)}G=a[n]|0;if((G&1)==0){aa=(G&255)>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(11,O|0,c[p>>2]|0,j|0,v|0)|0;G=t;t=0;if(G&1){break}c[k>>2]=F;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){ba=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ba=H;break}t=0;F=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;G=t;t=0;if(G&1){break a}if(!((F|0)==-1)){ba=H;break}c[A>>2]=0;ba=0}}while(0);A=(ba|0)==0;do{if((N|0)==0){L=65}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}t=0;w=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;F=t;t=0;if(F&1){break a}if((w|0)==-1){c[B>>2]=0;L=65;break}if(!(A^(N|0)==0)){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);do{if((L|0)==65){if(A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;_=e;$=I;lt(o);lt(n);Wb(_|0)}function pv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];qv(a,0,k,j,f,g,h);i=b;return}function qv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+256|0;l=e;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l;ew(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=a[m]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}t=0;J=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;K=t;t=0;if(K&1){L=37;break b}if(!((J|0)==-1)){H=F;break}c[A>>2]=0;H=0}}while(0);J=(H|0)==0;K=c[B>>2]|0;do{if((K|0)==0){L=21}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(J){M=K;break}else{N=K;O=G;break b}}t=0;P=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;Q=t;t=0;if(Q&1){L=37;break b}if((P|0)==-1){c[B>>2]=0;L=21;break}else{if(J){M=K;break}else{N=K;O=G;break b}}}}while(0);if((L|0)==21){L=0;if(J){N=0;O=G;break}else{M=0}}K=a[h]|0;P=(K&1)==0;if(P){R=(K&255)>>>1}else{R=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(R|0)){if(P){S=(K&255)>>>1;T=(K&255)>>>1}else{K=c[D>>2]|0;S=K;T=K}t=0;La(30,o|0,T<<1|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){U=10}else{U=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,U|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){V=x}else{V=c[y>>2]|0}c[p>>2]=V+S;W=V}else{W=G}K=H+12|0;P=c[K>>2]|0;Q=H+16|0;if((P|0)==(c[Q>>2]|0)){t=0;X=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;Y=t;t=0;if(Y&1){L=37;break}else{Z=X}}else{Z=d[P]|0}if((Gv(Z&255,v,W,p,s,E,n,w,r,u)|0)!=0){N=M;O=W;break}P=c[K>>2]|0;if((P|0)==(c[Q>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;Q=t;t=0;if(Q&1){L=37;break}else{F=H;G=W;continue}}else{c[K>>2]=P+1;F=H;G=W;continue}}if((L|0)==37){G=Kb(-1,-1)|0;_=G;$=I;lt(o);lt(n);Wb(_|0)}G=a[n]|0;if((G&1)==0){aa=(G&255)>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(12,O|0,c[p>>2]|0,j|0,v|0)|0;G=I;E=t;t=0;if(E&1){break}E=k;c[E>>2]=F;c[E+4>>2]=G;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){ba=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ba=H;break}t=0;G=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;E=t;t=0;if(E&1){break a}if(!((G|0)==-1)){ba=H;break}c[A>>2]=0;ba=0}}while(0);A=(ba|0)==0;do{if((N|0)==0){L=65}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}t=0;w=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;G=t;t=0;if(G&1){break a}if((w|0)==-1){c[B>>2]=0;L=65;break}if(!(A^(N|0)==0)){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);do{if((L|0)==65){if(A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;_=e;$=I;lt(o);lt(n);Wb(_|0)}function rv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];sv(a,0,k,j,f,g,h);i=b;return}function sv(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;f=i;i=i+256|0;m=f;n=f+32|0;o=f+40|0;p=f+56|0;q=f+72|0;r=f+80|0;s=f+240|0;u=f+248|0;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==0){w=0}else if((v|0)==64){w=8}else{w=10}v=m;ew(o,j,v,n);j=p;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;t=0;La(30,p|0,10,0);m=t;t=0;a:do{if(!(m&1)){if((a[j]&1)==0){x=p+1|0;y=x;z=p+8|0;A=x}else{x=p+8|0;y=p+1|0;z=x;A=c[x>>2]|0}c[q>>2]=A;x=r;c[s>>2]=x;c[u>>2]=0;B=g;C=h;D=p;E=p+4|0;F=a[n]|0;G=c[B>>2]|0;H=A;b:while(1){do{if((G|0)==0){J=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){J=G;break}t=0;K=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=37;break b}if(!((K|0)==-1)){J=G;break}c[B>>2]=0;J=0}}while(0);K=(J|0)==0;L=c[C>>2]|0;do{if((L|0)==0){M=21}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){if(K){N=L;break}else{O=L;P=H;break b}}t=0;Q=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;R=t;t=0;if(R&1){M=37;break b}if((Q|0)==-1){c[C>>2]=0;M=21;break}else{if(K){N=L;break}else{O=L;P=H;break b}}}}while(0);if((M|0)==21){M=0;if(K){O=0;P=H;break}else{N=0}}L=a[j]|0;Q=(L&1)==0;if(Q){S=(L&255)>>>1}else{S=c[E>>2]|0}if(((c[q>>2]|0)-H|0)==(S|0)){if(Q){T=(L&255)>>>1;U=(L&255)>>>1}else{L=c[E>>2]|0;T=L;U=L}t=0;La(30,p|0,U<<1|0,0);L=t;t=0;if(L&1){M=37;break}if((a[j]&1)==0){V=10}else{V=(c[D>>2]&-2)+ -1|0}t=0;La(30,p|0,V|0,0);L=t;t=0;if(L&1){M=37;break}if((a[j]&1)==0){W=y}else{W=c[z>>2]|0}c[q>>2]=W+T;X=W}else{X=H}L=J+12|0;Q=c[L>>2]|0;R=J+16|0;if((Q|0)==(c[R>>2]|0)){t=0;Y=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;Z=t;t=0;if(Z&1){M=37;break}else{_=Y}}else{_=d[Q]|0}if((Gv(_&255,w,X,q,u,F,o,x,s,v)|0)!=0){O=N;P=X;break}Q=c[L>>2]|0;if((Q|0)==(c[R>>2]|0)){t=0;oa(c[(c[J>>2]|0)+40>>2]|0,J|0)|0;R=t;t=0;if(R&1){M=37;break}else{G=J;H=X;continue}}else{c[L>>2]=Q+1;G=J;H=X;continue}}if((M|0)==37){H=Kb(-1,-1)|0;$=H;aa=I;lt(p);lt(o);Wb($|0)}H=a[o]|0;if((H&1)==0){ba=(H&255)>>>1}else{ba=c[o+4>>2]|0}do{if((ba|0)!=0){H=c[s>>2]|0;if((H-r|0)>=160){break}G=c[u>>2]|0;c[s>>2]=H+4;c[H>>2]=G}}while(0);t=0;G=Ja(13,P|0,c[q>>2]|0,k|0,w|0)|0;H=t;t=0;if(H&1){break}b[l>>1]=G;py(o,x,c[s>>2]|0,k);do{if((J|0)==0){ca=0}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){ca=J;break}t=0;G=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;H=t;t=0;if(H&1){break a}if(!((G|0)==-1)){ca=J;break}c[B>>2]=0;ca=0}}while(0);B=(ca|0)==0;do{if((O|0)==0){M=65}else{if((c[O+12>>2]|0)!=(c[O+16>>2]|0)){if(!B){break}da=e;c[da>>2]=ca;lt(p);lt(o);i=f;return}t=0;x=oa(c[(c[O>>2]|0)+36>>2]|0,O|0)|0;G=t;t=0;if(G&1){break a}if((x|0)==-1){c[C>>2]=0;M=65;break}if(!(B^(O|0)==0)){break}da=e;c[da>>2]=ca;lt(p);lt(o);i=f;return}}while(0);do{if((M|0)==65){if(B){break}da=e;c[da>>2]=ca;lt(p);lt(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;da=e;c[da>>2]=ca;lt(p);lt(o);i=f;return}}while(0);f=Kb(-1,-1)|0;$=f;aa=I;lt(p);lt(o);Wb($|0)}function tv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];uv(a,0,k,j,f,g,h);i=b;return}function uv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+256|0;l=e;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l;ew(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=a[m]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}t=0;J=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;K=t;t=0;if(K&1){L=37;break b}if(!((J|0)==-1)){H=F;break}c[A>>2]=0;H=0}}while(0);J=(H|0)==0;K=c[B>>2]|0;do{if((K|0)==0){L=21}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(J){M=K;break}else{N=K;O=G;break b}}t=0;P=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;Q=t;t=0;if(Q&1){L=37;break b}if((P|0)==-1){c[B>>2]=0;L=21;break}else{if(J){M=K;break}else{N=K;O=G;break b}}}}while(0);if((L|0)==21){L=0;if(J){N=0;O=G;break}else{M=0}}K=a[h]|0;P=(K&1)==0;if(P){R=(K&255)>>>1}else{R=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(R|0)){if(P){S=(K&255)>>>1;T=(K&255)>>>1}else{K=c[D>>2]|0;S=K;T=K}t=0;La(30,o|0,T<<1|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){U=10}else{U=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,U|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){V=x}else{V=c[y>>2]|0}c[p>>2]=V+S;W=V}else{W=G}K=H+12|0;P=c[K>>2]|0;Q=H+16|0;if((P|0)==(c[Q>>2]|0)){t=0;X=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;Y=t;t=0;if(Y&1){L=37;break}else{Z=X}}else{Z=d[P]|0}if((Gv(Z&255,v,W,p,s,E,n,w,r,u)|0)!=0){N=M;O=W;break}P=c[K>>2]|0;if((P|0)==(c[Q>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;Q=t;t=0;if(Q&1){L=37;break}else{F=H;G=W;continue}}else{c[K>>2]=P+1;F=H;G=W;continue}}if((L|0)==37){G=Kb(-1,-1)|0;_=G;$=I;lt(o);lt(n);Wb(_|0)}G=a[n]|0;if((G&1)==0){aa=(G&255)>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(14,O|0,c[p>>2]|0,j|0,v|0)|0;G=t;t=0;if(G&1){break}c[k>>2]=F;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){ba=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ba=H;break}t=0;F=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;G=t;t=0;if(G&1){break a}if(!((F|0)==-1)){ba=H;break}c[A>>2]=0;ba=0}}while(0);A=(ba|0)==0;do{if((N|0)==0){L=65}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}t=0;w=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;F=t;t=0;if(F&1){break a}if((w|0)==-1){c[B>>2]=0;L=65;break}if(!(A^(N|0)==0)){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);do{if((L|0)==65){if(A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;_=e;$=I;lt(o);lt(n);Wb(_|0)}function vv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];wv(a,0,k,j,f,g,h);i=b;return}function wv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+256|0;l=e;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l;ew(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=a[m]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}t=0;J=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;K=t;t=0;if(K&1){L=37;break b}if(!((J|0)==-1)){H=F;break}c[A>>2]=0;H=0}}while(0);J=(H|0)==0;K=c[B>>2]|0;do{if((K|0)==0){L=21}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(J){M=K;break}else{N=K;O=G;break b}}t=0;P=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;Q=t;t=0;if(Q&1){L=37;break b}if((P|0)==-1){c[B>>2]=0;L=21;break}else{if(J){M=K;break}else{N=K;O=G;break b}}}}while(0);if((L|0)==21){L=0;if(J){N=0;O=G;break}else{M=0}}K=a[h]|0;P=(K&1)==0;if(P){R=(K&255)>>>1}else{R=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(R|0)){if(P){S=(K&255)>>>1;T=(K&255)>>>1}else{K=c[D>>2]|0;S=K;T=K}t=0;La(30,o|0,T<<1|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){U=10}else{U=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,U|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){V=x}else{V=c[y>>2]|0}c[p>>2]=V+S;W=V}else{W=G}K=H+12|0;P=c[K>>2]|0;Q=H+16|0;if((P|0)==(c[Q>>2]|0)){t=0;X=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;Y=t;t=0;if(Y&1){L=37;break}else{Z=X}}else{Z=d[P]|0}if((Gv(Z&255,v,W,p,s,E,n,w,r,u)|0)!=0){N=M;O=W;break}P=c[K>>2]|0;if((P|0)==(c[Q>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;Q=t;t=0;if(Q&1){L=37;break}else{F=H;G=W;continue}}else{c[K>>2]=P+1;F=H;G=W;continue}}if((L|0)==37){G=Kb(-1,-1)|0;_=G;$=I;lt(o);lt(n);Wb(_|0)}G=a[n]|0;if((G&1)==0){aa=(G&255)>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(15,O|0,c[p>>2]|0,j|0,v|0)|0;G=t;t=0;if(G&1){break}c[k>>2]=F;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){ba=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ba=H;break}t=0;F=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;G=t;t=0;if(G&1){break a}if(!((F|0)==-1)){ba=H;break}c[A>>2]=0;ba=0}}while(0);A=(ba|0)==0;do{if((N|0)==0){L=65}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}t=0;w=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;F=t;t=0;if(F&1){break a}if((w|0)==-1){c[B>>2]=0;L=65;break}if(!(A^(N|0)==0)){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);do{if((L|0)==65){if(A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;_=e;$=I;lt(o);lt(n);Wb(_|0)}function xv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];yv(a,0,k,j,f,g,h);i=b;return}function yv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;e=i;i=i+256|0;l=e;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l;ew(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=a[m]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}t=0;J=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;K=t;t=0;if(K&1){L=37;break b}if(!((J|0)==-1)){H=F;break}c[A>>2]=0;H=0}}while(0);J=(H|0)==0;K=c[B>>2]|0;do{if((K|0)==0){L=21}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){if(J){M=K;break}else{N=K;O=G;break b}}t=0;P=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;Q=t;t=0;if(Q&1){L=37;break b}if((P|0)==-1){c[B>>2]=0;L=21;break}else{if(J){M=K;break}else{N=K;O=G;break b}}}}while(0);if((L|0)==21){L=0;if(J){N=0;O=G;break}else{M=0}}K=a[h]|0;P=(K&1)==0;if(P){R=(K&255)>>>1}else{R=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(R|0)){if(P){S=(K&255)>>>1;T=(K&255)>>>1}else{K=c[D>>2]|0;S=K;T=K}t=0;La(30,o|0,T<<1|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){U=10}else{U=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,U|0,0);K=t;t=0;if(K&1){L=37;break}if((a[h]&1)==0){V=x}else{V=c[y>>2]|0}c[p>>2]=V+S;W=V}else{W=G}K=H+12|0;P=c[K>>2]|0;Q=H+16|0;if((P|0)==(c[Q>>2]|0)){t=0;X=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;Y=t;t=0;if(Y&1){L=37;break}else{Z=X}}else{Z=d[P]|0}if((Gv(Z&255,v,W,p,s,E,n,w,r,u)|0)!=0){N=M;O=W;break}P=c[K>>2]|0;if((P|0)==(c[Q>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;Q=t;t=0;if(Q&1){L=37;break}else{F=H;G=W;continue}}else{c[K>>2]=P+1;F=H;G=W;continue}}if((L|0)==37){G=Kb(-1,-1)|0;_=G;$=I;lt(o);lt(n);Wb(_|0)}G=a[n]|0;if((G&1)==0){aa=(G&255)>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(16,O|0,c[p>>2]|0,j|0,v|0)|0;G=I;E=t;t=0;if(E&1){break}E=k;c[E>>2]=F;c[E+4>>2]=G;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){ba=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ba=H;break}t=0;G=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;E=t;t=0;if(E&1){break a}if(!((G|0)==-1)){ba=H;break}c[A>>2]=0;ba=0}}while(0);A=(ba|0)==0;do{if((N|0)==0){L=65}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}t=0;w=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;G=t;t=0;if(G&1){break a}if((w|0)==-1){c[B>>2]=0;L=65;break}if(!(A^(N|0)==0)){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);do{if((L|0)==65){if(A){break}ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ca=b;c[ca>>2]=ba;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;_=e;$=I;lt(o);lt(n);Wb(_|0)}function zv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Av(a,0,k,j,f,g,h);i=b;return}function Av(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0,ha=0;e=i;i=i+280|0;m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=e+80|0;r=e+88|0;s=e+248|0;u=e+256|0;v=e+264|0;w=e+272|0;x=e;fw(o,j,x,m,n);j=p;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;t=0;La(30,p|0,10,0);y=t;t=0;a:do{if(!(y&1)){if((a[j]&1)==0){z=p+1|0;A=z;B=p+8|0;C=z}else{z=p+8|0;A=p+1|0;B=z;C=c[z>>2]|0}c[q>>2]=C;z=r;c[s>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f;E=h;F=p;G=p+4|0;H=a[m]|0;J=a[n]|0;K=c[D>>2]|0;L=C;b:while(1){do{if((K|0)==0){M=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){M=K;break}t=0;N=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;O=t;t=0;if(O&1){P=33;break b}if(!((N|0)==-1)){M=K;break}c[D>>2]=0;M=0}}while(0);N=(M|0)==0;O=c[E>>2]|0;do{if((O|0)==0){P=17}else{if((c[O+12>>2]|0)!=(c[O+16>>2]|0)){if(N){Q=O;break}else{R=O;S=L;break b}}t=0;T=oa(c[(c[O>>2]|0)+36>>2]|0,O|0)|0;U=t;t=0;if(U&1){P=33;break b}if((T|0)==-1){c[E>>2]=0;P=17;break}else{if(N){Q=O;break}else{R=O;S=L;break b}}}}while(0);if((P|0)==17){P=0;if(N){R=0;S=L;break}else{Q=0}}O=a[j]|0;T=(O&1)==0;if(T){V=(O&255)>>>1}else{V=c[G>>2]|0}if(((c[q>>2]|0)-L|0)==(V|0)){if(T){W=(O&255)>>>1;X=(O&255)>>>1}else{O=c[G>>2]|0;W=O;X=O}t=0;La(30,p|0,X<<1|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Y=10}else{Y=(c[F>>2]&-2)+ -1|0}t=0;La(30,p|0,Y|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Z=A}else{Z=c[B>>2]|0}c[q>>2]=Z+W;_=Z}else{_=L}O=M+12|0;T=c[O>>2]|0;U=M+16|0;if((T|0)==(c[U>>2]|0)){t=0;$=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;aa=t;t=0;if(aa&1){P=33;break}else{ba=$}}else{ba=d[T]|0}if((gw(ba&255,v,w,_,q,H,J,o,z,s,u,x)|0)!=0){R=Q;S=_;break}T=c[O>>2]|0;if((T|0)==(c[U>>2]|0)){t=0;oa(c[(c[M>>2]|0)+40>>2]|0,M|0)|0;U=t;t=0;if(U&1){P=33;break}else{K=M;L=_;continue}}else{c[O>>2]=T+1;K=M;L=_;continue}}if((P|0)==33){L=Kb(-1,-1)|0;ca=L;da=I;lt(p);lt(o);Wb(ca|0)}L=a[o]|0;if((L&1)==0){ea=(L&255)>>>1}else{ea=c[o+4>>2]|0}do{if((ea|0)!=0){if((a[v]|0)==0){break}L=c[s>>2]|0;if((L-r|0)>=160){break}K=c[u>>2]|0;c[s>>2]=L+4;c[L>>2]=K}}while(0);t=0;fa=+Ga(1,S|0,c[q>>2]|0,k|0);K=t;t=0;if(K&1){break}g[l>>2]=fa;py(o,z,c[s>>2]|0,k);do{if((M|0)==0){ga=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ga=M;break}t=0;K=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;L=t;t=0;if(L&1){break a}if(!((K|0)==-1)){ga=M;break}c[D>>2]=0;ga=0}}while(0);D=(ga|0)==0;do{if((R|0)==0){P=62}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){if(!D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}t=0;z=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;K=t;t=0;if(K&1){break a}if((z|0)==-1){c[E>>2]=0;P=62;break}if(!(D^(R|0)==0)){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);do{if((P|0)==62){if(D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);e=Kb(-1,-1)|0;ca=e;da=I;lt(p);lt(o);Wb(ca|0)}function Bv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Cv(a,0,k,j,f,g,h);i=b;return}function Cv(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0,ha=0;e=i;i=i+280|0;m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=e+80|0;r=e+88|0;s=e+248|0;u=e+256|0;v=e+264|0;w=e+272|0;x=e;fw(o,j,x,m,n);j=p;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;t=0;La(30,p|0,10,0);y=t;t=0;a:do{if(!(y&1)){if((a[j]&1)==0){z=p+1|0;A=z;B=p+8|0;C=z}else{z=p+8|0;A=p+1|0;B=z;C=c[z>>2]|0}c[q>>2]=C;z=r;c[s>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f;E=g;F=p;G=p+4|0;H=a[m]|0;J=a[n]|0;K=c[D>>2]|0;L=C;b:while(1){do{if((K|0)==0){M=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){M=K;break}t=0;N=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;O=t;t=0;if(O&1){P=33;break b}if(!((N|0)==-1)){M=K;break}c[D>>2]=0;M=0}}while(0);N=(M|0)==0;O=c[E>>2]|0;do{if((O|0)==0){P=17}else{if((c[O+12>>2]|0)!=(c[O+16>>2]|0)){if(N){Q=O;break}else{R=O;S=L;break b}}t=0;T=oa(c[(c[O>>2]|0)+36>>2]|0,O|0)|0;U=t;t=0;if(U&1){P=33;break b}if((T|0)==-1){c[E>>2]=0;P=17;break}else{if(N){Q=O;break}else{R=O;S=L;break b}}}}while(0);if((P|0)==17){P=0;if(N){R=0;S=L;break}else{Q=0}}O=a[j]|0;T=(O&1)==0;if(T){V=(O&255)>>>1}else{V=c[G>>2]|0}if(((c[q>>2]|0)-L|0)==(V|0)){if(T){W=(O&255)>>>1;X=(O&255)>>>1}else{O=c[G>>2]|0;W=O;X=O}t=0;La(30,p|0,X<<1|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Y=10}else{Y=(c[F>>2]&-2)+ -1|0}t=0;La(30,p|0,Y|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Z=A}else{Z=c[B>>2]|0}c[q>>2]=Z+W;_=Z}else{_=L}O=M+12|0;T=c[O>>2]|0;U=M+16|0;if((T|0)==(c[U>>2]|0)){t=0;$=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;aa=t;t=0;if(aa&1){P=33;break}else{ba=$}}else{ba=d[T]|0}if((gw(ba&255,v,w,_,q,H,J,o,z,s,u,x)|0)!=0){R=Q;S=_;break}T=c[O>>2]|0;if((T|0)==(c[U>>2]|0)){t=0;oa(c[(c[M>>2]|0)+40>>2]|0,M|0)|0;U=t;t=0;if(U&1){P=33;break}else{K=M;L=_;continue}}else{c[O>>2]=T+1;K=M;L=_;continue}}if((P|0)==33){L=Kb(-1,-1)|0;ca=L;da=I;lt(p);lt(o);Wb(ca|0)}L=a[o]|0;if((L&1)==0){ea=(L&255)>>>1}else{ea=c[o+4>>2]|0}do{if((ea|0)!=0){if((a[v]|0)==0){break}L=c[s>>2]|0;if((L-r|0)>=160){break}K=c[u>>2]|0;c[s>>2]=L+4;c[L>>2]=K}}while(0);t=0;fa=+Ga(2,S|0,c[q>>2]|0,k|0);K=t;t=0;if(K&1){break}h[l>>3]=fa;py(o,z,c[s>>2]|0,k);do{if((M|0)==0){ga=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ga=M;break}t=0;K=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;L=t;t=0;if(L&1){break a}if(!((K|0)==-1)){ga=M;break}c[D>>2]=0;ga=0}}while(0);D=(ga|0)==0;do{if((R|0)==0){P=62}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){if(!D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}t=0;z=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;K=t;t=0;if(K&1){break a}if((z|0)==-1){c[E>>2]=0;P=62;break}if(!(D^(R|0)==0)){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);do{if((P|0)==62){if(D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);e=Kb(-1,-1)|0;ca=e;da=I;lt(p);lt(o);Wb(ca|0)}function Dv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Ev(a,0,k,j,f,g,h);i=b;return}function Ev(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0,ha=0;e=i;i=i+280|0;m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=e+80|0;r=e+88|0;s=e+248|0;u=e+256|0;v=e+264|0;w=e+272|0;x=e;fw(o,j,x,m,n);j=p;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;t=0;La(30,p|0,10,0);y=t;t=0;a:do{if(!(y&1)){if((a[j]&1)==0){z=p+1|0;A=z;B=p+8|0;C=z}else{z=p+8|0;A=p+1|0;B=z;C=c[z>>2]|0}c[q>>2]=C;z=r;c[s>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f;E=g;F=p;G=p+4|0;H=a[m]|0;J=a[n]|0;K=c[D>>2]|0;L=C;b:while(1){do{if((K|0)==0){M=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){M=K;break}t=0;N=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;O=t;t=0;if(O&1){P=33;break b}if(!((N|0)==-1)){M=K;break}c[D>>2]=0;M=0}}while(0);N=(M|0)==0;O=c[E>>2]|0;do{if((O|0)==0){P=17}else{if((c[O+12>>2]|0)!=(c[O+16>>2]|0)){if(N){Q=O;break}else{R=O;S=L;break b}}t=0;T=oa(c[(c[O>>2]|0)+36>>2]|0,O|0)|0;U=t;t=0;if(U&1){P=33;break b}if((T|0)==-1){c[E>>2]=0;P=17;break}else{if(N){Q=O;break}else{R=O;S=L;break b}}}}while(0);if((P|0)==17){P=0;if(N){R=0;S=L;break}else{Q=0}}O=a[j]|0;T=(O&1)==0;if(T){V=(O&255)>>>1}else{V=c[G>>2]|0}if(((c[q>>2]|0)-L|0)==(V|0)){if(T){W=(O&255)>>>1;X=(O&255)>>>1}else{O=c[G>>2]|0;W=O;X=O}t=0;La(30,p|0,X<<1|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Y=10}else{Y=(c[F>>2]&-2)+ -1|0}t=0;La(30,p|0,Y|0,0);O=t;t=0;if(O&1){P=33;break}if((a[j]&1)==0){Z=A}else{Z=c[B>>2]|0}c[q>>2]=Z+W;_=Z}else{_=L}O=M+12|0;T=c[O>>2]|0;U=M+16|0;if((T|0)==(c[U>>2]|0)){t=0;$=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;aa=t;t=0;if(aa&1){P=33;break}else{ba=$}}else{ba=d[T]|0}if((gw(ba&255,v,w,_,q,H,J,o,z,s,u,x)|0)!=0){R=Q;S=_;break}T=c[O>>2]|0;if((T|0)==(c[U>>2]|0)){t=0;oa(c[(c[M>>2]|0)+40>>2]|0,M|0)|0;U=t;t=0;if(U&1){P=33;break}else{K=M;L=_;continue}}else{c[O>>2]=T+1;K=M;L=_;continue}}if((P|0)==33){L=Kb(-1,-1)|0;ca=L;da=I;lt(p);lt(o);Wb(ca|0)}L=a[o]|0;if((L&1)==0){ea=(L&255)>>>1}else{ea=c[o+4>>2]|0}do{if((ea|0)!=0){if((a[v]|0)==0){break}L=c[s>>2]|0;if((L-r|0)>=160){break}K=c[u>>2]|0;c[s>>2]=L+4;c[L>>2]=K}}while(0);t=0;fa=+Ga(3,S|0,c[q>>2]|0,k|0);K=t;t=0;if(K&1){break}h[l>>3]=fa;py(o,z,c[s>>2]|0,k);do{if((M|0)==0){ga=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ga=M;break}t=0;K=oa(c[(c[M>>2]|0)+36>>2]|0,M|0)|0;L=t;t=0;if(L&1){break a}if(!((K|0)==-1)){ga=M;break}c[D>>2]=0;ga=0}}while(0);D=(ga|0)==0;do{if((R|0)==0){P=62}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){if(!D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}t=0;z=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;K=t;t=0;if(K&1){break a}if((z|0)==-1){c[E>>2]=0;P=62;break}if(!(D^(R|0)==0)){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);do{if((P|0)==62){if(D){break}ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ha=b;c[ha>>2]=ga;lt(p);lt(o);i=e;return}}while(0);e=Kb(-1,-1)|0;ca=e;da=I;lt(p);lt(o);Wb(ca|0)}function Fv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,pa=0,qa=0,ra=0;e=i;i=i+8|0;l=e;m=i;i=i+16|0;n=i;i=i+32|0;o=i;i=i+16|0;p=i;i=i+8|0;q=i;i=i+16|0;r=i;i=i+160|0;s=o;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;t=0;na(42,p|0,h|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;u=h;v=I;lt(o);Wb(u|0)}h=p;p=c[h>>2]|0;if((c[5342]|0)==-1){w=4}else{c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21368,m|0,280);m=t;t=0;if(!(m&1)){w=4}}a:do{if((w|0)==4){m=(c[21372>>2]|0)+ -1|0;x=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-x>>2>>>0>m>>>0){y=c[x+(m<<2)>>2]|0;if((y|0)==0){break}z=n;t=0;Ja(c[(c[y>>2]|0)+32>>2]|0,y|0,19904,19930|0,z|0)|0;y=t;t=0;if(y&1){break a}Ks(c[h>>2]|0)|0;y=q;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;t=0;La(30,q|0,10,0);A=t;t=0;b:do{if(A&1){w=44}else{if((a[y]&1)==0){B=q+1|0;C=B;D=q+8|0;E=B}else{B=q+8|0;C=q+1|0;D=B;E=c[B>>2]|0}B=f;F=g;G=q;H=q+4|0;J=n+24|0;K=n+25|0;L=r;M=n+26|0;N=n;O=o+4|0;P=c[B>>2]|0;Q=E;R=r;S=0;T=E;c:while(1){do{if((P|0)==0){U=0}else{if((c[P+12>>2]|0)!=(c[P+16>>2]|0)){U=P;break}t=0;V=oa(c[(c[P>>2]|0)+36>>2]|0,P|0)|0;W=t;t=0;if(W&1){w=43;break c}if(!((V|0)==-1)){U=P;break}c[B>>2]=0;U=0}}while(0);V=(U|0)==0;W=c[F>>2]|0;do{if((W|0)==0){w=25}else{if((c[W+12>>2]|0)!=(c[W+16>>2]|0)){if(V){break}else{X=T;break c}}t=0;Y=oa(c[(c[W>>2]|0)+36>>2]|0,W|0)|0;Z=t;t=0;if(Z&1){w=43;break c}if((Y|0)==-1){c[F>>2]=0;w=25;break}else{if(V){break}else{X=T;break c}}}}while(0);if((w|0)==25){w=0;if(V){X=T;break}}W=a[y]|0;Y=(W&1)==0;if(Y){_=(W&255)>>>1}else{_=c[H>>2]|0}if((Q-T|0)==(_|0)){if(Y){$=(W&255)>>>1;aa=(W&255)>>>1}else{W=c[H>>2]|0;$=W;aa=W}t=0;La(30,q|0,aa<<1|0,0);W=t;t=0;if(W&1){w=43;break}if((a[y]&1)==0){ba=10}else{ba=(c[G>>2]&-2)+ -1|0}t=0;La(30,q|0,ba|0,0);W=t;t=0;if(W&1){w=43;break}if((a[y]&1)==0){ca=C}else{ca=c[D>>2]|0}da=ca+$|0;ea=ca}else{da=Q;ea=T}W=c[U+12>>2]|0;if((W|0)==(c[U+16>>2]|0)){t=0;Y=oa(c[(c[U>>2]|0)+36>>2]|0,U|0)|0;Z=t;t=0;if(Z&1){w=43;break}else{fa=Y}}else{fa=d[W]|0}W=fa&255;Y=(da|0)==(ea|0);do{if(Y){Z=(a[J]|0)==W<<24>>24;if(!Z){if(!((a[K]|0)==W<<24>>24)){w=53;break}}a[da]=Z?43:45;ga=da+1|0;ha=R;ia=0}else{w=53}}while(0);do{if((w|0)==53){w=0;V=a[s]|0;if((V&1)==0){ja=(V&255)>>>1}else{ja=c[O>>2]|0}if((ja|0)!=0&W<<24>>24==0){if((R-L|0)>=160){ga=da;ha=R;ia=S;break}c[R>>2]=S;ga=da;ha=R+4|0;ia=0;break}else{ka=z}while(1){V=ka+1|0;if((a[ka]|0)==W<<24>>24){la=ka;break}if((V|0)==(M|0)){la=M;break}else{ka=V}}V=la-N|0;if((V|0)>23){X=ea;break c}if((V|0)<22){a[da]=a[19904+V|0]|0;ga=da+1|0;ha=R;ia=S+1|0;break}if(Y){X=da;break c}if((da-ea|0)>=3){X=ea;break c}if((a[da+ -1|0]|0)!=48){X=ea;break c}a[da]=a[19904+V|0]|0;ga=da+1|0;ha=R;ia=0}}while(0);Y=c[B>>2]|0;W=Y+12|0;V=c[W>>2]|0;if((V|0)==(c[Y+16>>2]|0)){t=0;oa(c[(c[Y>>2]|0)+40>>2]|0,Y|0)|0;Z=t;t=0;if(Z&1){w=43;break}else{P=Y;Q=ga;R=ha;S=ia;T=ea;continue}}else{c[W>>2]=V+1;P=Y;Q=ga;R=ha;S=ia;T=ea;continue}}if((w|0)==43){T=Kb(-1,-1)|0;ma=I;pa=T;break}a[X+3|0]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;T=sa(33,2147483647,21264,0)|0;S=t;t=0;if(S&1){S=Kb(-1,-1)|0;R=I;rc(21256);ma=R;pa=S;break b}else{c[5312]=T;Nb(21256);break}}}while(0);T=c[5312]|0;t=0;c[l>>2]=k;S=Ja(17,X|0,T|0,19944,l|0)|0;T=t;t=0;if(T&1){w=44;break}if((S|0)!=1){c[j>>2]=4}S=c[B>>2]|0;do{if((S|0)==0){qa=0}else{if((c[S+12>>2]|0)!=(c[S+16>>2]|0)){qa=S;break}t=0;T=oa(c[(c[S>>2]|0)+36>>2]|0,S|0)|0;R=t;t=0;if(R&1){w=44;break b}if(!((T|0)==-1)){qa=S;break}c[B>>2]=0;qa=0}}while(0);B=(qa|0)==0;S=c[F>>2]|0;do{if((S|0)==0){w=90}else{if((c[S+12>>2]|0)!=(c[S+16>>2]|0)){if(!B){break}ra=b;c[ra>>2]=qa;lt(q);lt(o);i=e;return}t=0;T=oa(c[(c[S>>2]|0)+36>>2]|0,S|0)|0;R=t;t=0;if(R&1){w=44;break b}if((T|0)==-1){c[F>>2]=0;w=90;break}if(!(B^(S|0)==0)){break}ra=b;c[ra>>2]=qa;lt(q);lt(o);i=e;return}}while(0);do{if((w|0)==90){if(B){break}ra=b;c[ra>>2]=qa;lt(q);lt(o);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ra=b;c[ra>>2]=qa;lt(q);lt(o);i=e;return}}while(0);if((w|0)==44){z=Kb(-1,-1)|0;ma=I;pa=z}lt(q);u=pa;v=ma;lt(o);Wb(u|0)}}while(0);m=xc(4)|0;wB(m);t=0;La(13,m|0,29328,218);m=t;t=0;if(m&1){break}}}while(0);ma=Kb(-1,-1)|0;pa=I;Ks(c[h>>2]|0)|0;u=ma;v=pa;lt(o);Wb(u|0)}function Gv(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){q=(a[m+24|0]|0)==b<<24>>24;if(!q){if(!((a[m+25|0]|0)==b<<24>>24)){break}}c[f>>2]=e+1;a[e]=q?43:45;c[g>>2]=0;r=0;i=n;return r|0}}while(0);q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0&b<<24>>24==h<<24>>24){h=c[l>>2]|0;if((h-k|0)>=160){r=0;i=n;return r|0}k=c[g>>2]|0;c[l>>2]=h+4;c[h>>2]=k;c[g>>2]=0;r=0;i=n;return r|0}k=m+26|0;h=m;while(1){l=h+1|0;if((a[h]|0)==b<<24>>24){t=h;break}if((l|0)==(k|0)){t=k;break}else{h=l}}h=t-m|0;if((h|0)>23){r=-1;i=n;return r|0}do{if((d|0)==16){if((h|0)<22){break}if(p){r=-1;i=n;return r|0}if((o-e|0)>=3){r=-1;i=n;return r|0}if((a[o+ -1|0]|0)!=48){r=-1;i=n;return r|0}c[g>>2]=0;m=a[19904+h|0]|0;c[f>>2]=o+1;a[o]=m;r=0;i=n;return r|0}else if((d|0)==10|(d|0)==8){if((h|0)<(d|0)){break}else{r=-1}i=n;return r|0}}while(0);d=a[19904+h|0]|0;c[f>>2]=o+1;a[o]=d;c[g>>2]=(c[g>>2]|0)+1;r=0;i=n;return r|0}function Hv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=Dc(b|0)|0;b=Sa(a|0,d|0,g|0)|0;if((e|0)==0){i=f;return b|0}t=0;oa(108,e|0)|0;e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{i=f;return b|0}return 0}function Iv(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Jv(a){a=a|0;i=i;return}function Kv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0;k=i;i=i+136|0;l=k;m=k+8|0;n=k+16|0;o=k+24|0;p=k+40|0;q=k+56|0;r=k+64|0;s=k+72|0;u=k+80|0;v=k+88|0;w=k+96|0;x=k+104|0;y=k+128|0;if((c[g+4>>2]&1|0)==0){c[q>>2]=-1;z=c[(c[d>>2]|0)+16>>2]|0;A=e;c[s>>2]=c[A>>2];c[u>>2]=c[f>>2];B=n;C=s;c[B+0>>2]=c[C+0>>2];C=m;B=u;c[C+0>>2]=c[B+0>>2];le[z&63](r,d,n,m,g,h,q);m=c[r>>2]|0;c[A>>2]=m;A=c[q>>2]|0;if((A|0)==1){a[j]=1}else if((A|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=m;i=k;return}Ot(v,g);m=v;v=c[m>>2]|0;if((c[5340]|0)==-1){D=9}else{c[p>>2]=21360;c[p+4>>2]=279;c[p+8>>2]=0;t=0;La(55,21360,p|0,280);p=t;t=0;if(!(p&1)){D=9}}do{if((D|0)==9){p=(c[21364>>2]|0)+ -1|0;A=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-A>>2>>>0>p>>>0){q=c[A+(p<<2)>>2]|0;if((q|0)==0){break}r=q;Ks(c[m>>2]|0)|0;Ot(w,g);q=w;n=c[q>>2]|0;if((c[5380]|0)==-1){D=15}else{c[o>>2]=21520;c[o+4>>2]=279;c[o+8>>2]=0;t=0;La(55,21520,o|0,280);d=t;t=0;if(!(d&1)){D=15}}do{if((D|0)==15){d=(c[21524>>2]|0)+ -1|0;z=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-z>>2>>>0>d>>>0){B=c[z+(d<<2)>>2]|0;if((B|0)==0){break}C=B;Ks(c[q>>2]|0)|0;u=x;s=B;t=0;na(c[(c[s>>2]|0)+24>>2]|0,u|0,C|0);B=t;t=0;do{if(B&1){E=u}else{F=x+12|0;t=0;na(c[(c[s>>2]|0)+28>>2]|0,F|0,C|0);G=t;t=0;if(G&1){E=F;break}c[y>>2]=c[f>>2];F=x+24|0;t=0;G=l;H=y;c[G+0>>2]=c[H+0>>2];H=ka(2,e|0,l|0,u|0,F|0,r|0,h|0,1)|0;F=t;t=0;if(F&1){F=Kb(-1,-1)|0;G=I;Dt(x+12|0);Dt(x);J=F;K=G;Wb(J|0)}else{a[j]=(H|0)==(u|0)|0;c[b>>2]=c[e>>2];Dt(x+12|0);Dt(x);i=k;return}}}while(0);C=Kb(-1,-1)|0;s=I;if((u|0)==(E|0)){J=C;K=s;Wb(J|0)}else{L=E}while(1){B=L+ -12|0;Dt(B);if((B|0)==(u|0)){J=C;K=s;break}else{L=B}}Wb(J|0)}}while(0);d=xc(4)|0;wB(d);t=0;La(13,d|0,29328,218);d=t;t=0;if(d&1){break}}}while(0);r=Kb(-1,-1)|0;n=I;Ks(c[q>>2]|0)|0;J=r;K=n;Wb(J|0)}}while(0);p=xc(4)|0;wB(p);t=0;La(13,p|0,29328,218);p=t;t=0;if(p&1){break}}}while(0);L=Kb(-1,-1)|0;E=I;Ks(c[m>>2]|0)|0;J=L;K=E;Wb(J|0)}function Lv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;k=i;i=i+104|0;l=(f-e|0)/12|0;m=k;do{if(l>>>0>100){n=TB(l)|0;if((n|0)!=0){o=n;p=n;break}t=0;Ma(5);n=t;t=0;if(!(n&1)){o=0;p=0;break}n=Kb(-1,-1)|0;q=n;r=I;Wb(q|0)}else{o=0;p=m}}while(0);m=(e|0)==(f|0);if(m){s=0;u=l}else{n=e;v=0;w=l;l=p;while(1){x=a[n]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[n+4>>2]|0}if((y|0)==0){a[l]=2;z=v+1|0;A=w+ -1|0}else{a[l]=1;z=v;A=w}x=n+12|0;if((x|0)==(f|0)){s=z;u=A;break}else{n=x;v=z;w=A;l=l+1|0}}}l=b;b=d;d=g;A=0;w=s;s=u;a:while(1){u=c[l>>2]|0;do{if((u|0)==0){B=1}else{z=c[u+12>>2]|0;if((z|0)==(c[u+16>>2]|0)){t=0;v=oa(c[(c[u>>2]|0)+36>>2]|0,u|0)|0;n=t;t=0;if(n&1){C=6;break a}else{D=v}}else{D=c[z>>2]|0}if((D|0)==-1){c[l>>2]=0;B=1;break}else{B=(c[l>>2]|0)==0;break}}}while(0);u=c[b>>2]|0;do{if((u|0)==0){E=0;F=1}else{z=c[u+12>>2]|0;if((z|0)==(c[u+16>>2]|0)){t=0;v=oa(c[(c[u>>2]|0)+36>>2]|0,u|0)|0;n=t;t=0;if(n&1){C=6;break a}else{G=v}}else{G=c[z>>2]|0}if(!((G|0)==-1)){E=u;F=0;break}c[b>>2]=0;E=0;F=1}}while(0);H=c[l>>2]|0;if(!((B^F)&(s|0)!=0)){C=81;break}u=c[H+12>>2]|0;if((u|0)==(c[H+16>>2]|0)){t=0;z=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;v=t;t=0;if(v&1){C=6;break}else{J=z}}else{J=c[u>>2]|0}if(j){K=J}else{t=0;u=Ea(c[(c[d>>2]|0)+28>>2]|0,g|0,J|0)|0;z=t;t=0;if(z&1){C=6;break}else{K=u}}u=A+1|0;if(m){A=u;s=s;w=w;continue}b:do{if(j){z=0;v=e;n=w;y=s;x=p;while(1){do{if((a[x]|0)==1){L=a[v]|0;M=(L&1)==0;if(M){N=v+4|0}else{N=c[v+8>>2]|0}if((K|0)!=(c[N+(A<<2)>>2]|0)){a[x]=0;O=z;P=n;Q=y+ -1|0;break}if(M){R=(L&255)>>>1}else{R=c[v+4>>2]|0}if((R|0)!=(u|0)){O=1;P=n;Q=y;break}a[x]=2;O=1;P=n+1|0;Q=y+ -1|0}else{O=z;P=n;Q=y}}while(0);L=v+12|0;if((L|0)==(f|0)){S=O;T=P;U=Q;break b}z=O;v=L;n=P;y=Q;x=x+1|0}}else{x=0;y=e;n=w;v=s;z=p;while(1){do{if((a[z]|0)==1){L=y;if((a[L]&1)==0){V=y+4|0}else{V=c[y+8>>2]|0}t=0;M=Ea(c[(c[d>>2]|0)+28>>2]|0,g|0,c[V+(A<<2)>>2]|0)|0;W=t;t=0;if(W&1){C=5;break a}if((K|0)!=(M|0)){a[z]=0;X=x;Y=n;Z=v+ -1|0;break}M=a[L]|0;if((M&1)==0){_=(M&255)>>>1}else{_=c[y+4>>2]|0}if((_|0)!=(u|0)){X=1;Y=n;Z=v;break}a[z]=2;X=1;Y=n+1|0;Z=v+ -1|0}else{X=x;Y=n;Z=v}}while(0);M=y+12|0;if((M|0)==(f|0)){S=X;T=Y;U=Z;break b}x=X;y=M;n=Y;v=Z;z=z+1|0}}}while(0);if(!S){A=u;w=T;s=U;continue}z=c[l>>2]|0;v=z+12|0;n=c[v>>2]|0;if((n|0)==(c[z+16>>2]|0)){t=0;oa(c[(c[z>>2]|0)+40>>2]|0,z|0)|0;z=t;t=0;if(z&1){C=6;break}}else{c[v>>2]=n+4}if((U+T|0)>>>0<2){A=u;w=T;s=U;continue}else{$=e;aa=T;ba=p}while(1){do{if((a[ba]|0)==2){n=a[$]|0;if((n&1)==0){ca=(n&255)>>>1}else{ca=c[$+4>>2]|0}if((ca|0)==(u|0)){da=aa;break}a[ba]=0;da=aa+ -1|0}else{da=aa}}while(0);n=$+12|0;if((n|0)==(f|0)){A=u;w=da;s=U;continue a}else{$=n;aa=da;ba=ba+1|0}}}if((C|0)==5){ba=Kb(-1,-1)|0;ea=ba;fa=I}else if((C|0)==6){ba=Kb(-1,-1)|0;ea=ba;fa=I}else if((C|0)==81){do{if((H|0)==0){ga=1;C=88}else{ba=c[H+12>>2]|0;if((ba|0)==(c[H+16>>2]|0)){t=0;da=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;aa=t;t=0;if(aa&1){break}else{ha=da}}else{ha=c[ba>>2]|0}if((ha|0)==-1){c[l>>2]=0;ga=1;C=88;break}else{ga=(c[l>>2]|0)==0;C=88;break}}}while(0);c:do{if((C|0)==88){do{if((E|0)==0){C=94}else{l=c[E+12>>2]|0;if((l|0)==(c[E+16>>2]|0)){t=0;ha=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;H=t;t=0;if(H&1){break c}else{ia=ha}}else{ia=c[l>>2]|0}if((ia|0)==-1){c[b>>2]=0;C=94;break}else{if(ga){break}else{C=96;break}}}}while(0);if((C|0)==94){if(ga){C=96}}if((C|0)==96){c[h>>2]=c[h>>2]|2}d:do{if(m){C=101}else{if((a[p]|0)==2){ja=e;break}else{ka=e;la=p}while(1){l=ka+12|0;ha=la+1|0;if((l|0)==(f|0)){C=101;break d}if((a[ha]|0)==2){ja=l;break}else{la=ha;ka=l}}}}while(0);if((C|0)==101){c[h>>2]=c[h>>2]|4;ja=f}if((o|0)==0){i=k;return ja|0}t=0;ma(281,o|0);l=t;t=0;if(l&1){l=Kb(-1,-1,0)|0;Xe(l)}else{i=k;return ja|0}}}while(0);ja=Kb(-1,-1)|0;ea=ja;fa=I}if((o|0)==0){q=ea;r=fa;Wb(q|0)}t=0;ma(281,o|0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{q=ea;r=fa;Wb(q|0)}return 0}function Mv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Nv(a,0,k,j,f,g,h);i=b;return}function Nv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=d;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){u=0}else if((s|0)==8){u=16}else if((s|0)==64){u=8}else{u=10}s=k;hw(m,g,s,l);g=n;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,n|0,10,0);k=t;t=0;a:do{if(!(k&1)){if((a[g]&1)==0){v=n+1|0;w=v;x=n+8|0;y=v}else{v=n+8|0;w=n+1|0;x=v;y=c[v>>2]|0}c[o>>2]=y;v=p;c[q>>2]=v;c[r>>2]=0;z=e;A=f;B=n;C=n+4|0;D=c[l>>2]|0;E=c[z>>2]|0;F=y;b:while(1){do{if((E|0)==0){G=0;H=1}else{J=c[E+12>>2]|0;if((J|0)==(c[E+16>>2]|0)){t=0;K=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;L=t;t=0;if(L&1){M=38;break b}else{N=K}}else{N=c[J>>2]|0}if(!((N|0)==-1)){G=E;H=0;break}c[z>>2]=0;G=0;H=1}}while(0);J=c[A>>2]|0;do{if((J|0)==0){M=22}else{K=c[J+12>>2]|0;if((K|0)==(c[J+16>>2]|0)){t=0;L=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;O=t;t=0;if(O&1){M=38;break b}else{P=L}}else{P=c[K>>2]|0}if((P|0)==-1){c[A>>2]=0;M=22;break}else{if(H){Q=J;break}else{R=J;S=F;break b}}}}while(0);if((M|0)==22){M=0;if(H){R=0;S=F;break}else{Q=0}}J=a[g]|0;K=(J&1)==0;if(K){T=(J&255)>>>1}else{T=c[C>>2]|0}if(((c[o>>2]|0)-F|0)==(T|0)){if(K){U=(J&255)>>>1;V=(J&255)>>>1}else{J=c[C>>2]|0;U=J;V=J}t=0;La(30,n|0,V<<1|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){W=10}else{W=(c[B>>2]&-2)+ -1|0}t=0;La(30,n|0,W|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){X=w}else{X=c[x>>2]|0}c[o>>2]=X+U;Y=X}else{Y=F}J=G+12|0;K=c[J>>2]|0;L=G+16|0;if((K|0)==(c[L>>2]|0)){t=0;O=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;Z=t;t=0;if(Z&1){M=38;break}else{_=O}}else{_=c[K>>2]|0}if((dw(_,u,Y,o,r,D,m,v,q,s)|0)!=0){R=Q;S=Y;break}K=c[J>>2]|0;if((K|0)==(c[L>>2]|0)){t=0;oa(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=38;break}else{E=G;F=Y;continue}}else{c[J>>2]=K+4;E=G;F=Y;continue}}if((M|0)==38){F=Kb(-1,-1)|0;$=F;aa=I;lt(n);lt(m);Wb($|0)}F=a[m]|0;if((F&1)==0){ba=(F&255)>>>1}else{ba=c[m+4>>2]|0}do{if((ba|0)!=0){F=c[q>>2]|0;if((F-p|0)>=160){break}E=c[r>>2]|0;c[q>>2]=F+4;c[F>>2]=E}}while(0);t=0;E=Ja(11,S|0,c[o>>2]|0,h|0,u|0)|0;F=t;t=0;if(F&1){break}c[j>>2]=E;py(m,v,c[q>>2]|0,h);do{if((G|0)==0){ca=0;da=1}else{E=c[G+12>>2]|0;if((E|0)==(c[G+16>>2]|0)){t=0;F=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;D=t;t=0;if(D&1){break a}else{ea=F}}else{ea=c[E>>2]|0}if(!((ea|0)==-1)){ca=G;da=0;break}c[z>>2]=0;ca=0;da=1}}while(0);do{if((R|0)==0){M=67}else{z=c[R+12>>2]|0;if((z|0)==(c[R+16>>2]|0)){t=0;v=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;E=t;t=0;if(E&1){break a}else{fa=v}}else{fa=c[z>>2]|0}if((fa|0)==-1){c[A>>2]=0;M=67;break}if(!da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);do{if((M|0)==67){if(da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);d=Kb(-1,-1)|0;$=d;aa=I;lt(n);lt(m);Wb($|0)}function Ov(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Pv(a,0,k,j,f,g,h);i=b;return}function Pv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=d;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){u=0}else if((s|0)==64){u=8}else if((s|0)==8){u=16}else{u=10}s=k;hw(m,g,s,l);g=n;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,n|0,10,0);k=t;t=0;a:do{if(!(k&1)){if((a[g]&1)==0){v=n+1|0;w=v;x=n+8|0;y=v}else{v=n+8|0;w=n+1|0;x=v;y=c[v>>2]|0}c[o>>2]=y;v=p;c[q>>2]=v;c[r>>2]=0;z=e;A=f;B=n;C=n+4|0;D=c[l>>2]|0;E=c[z>>2]|0;F=y;b:while(1){do{if((E|0)==0){G=0;H=1}else{J=c[E+12>>2]|0;if((J|0)==(c[E+16>>2]|0)){t=0;K=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;L=t;t=0;if(L&1){M=38;break b}else{N=K}}else{N=c[J>>2]|0}if(!((N|0)==-1)){G=E;H=0;break}c[z>>2]=0;G=0;H=1}}while(0);J=c[A>>2]|0;do{if((J|0)==0){M=22}else{K=c[J+12>>2]|0;if((K|0)==(c[J+16>>2]|0)){t=0;L=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;O=t;t=0;if(O&1){M=38;break b}else{P=L}}else{P=c[K>>2]|0}if((P|0)==-1){c[A>>2]=0;M=22;break}else{if(H){Q=J;break}else{R=J;S=F;break b}}}}while(0);if((M|0)==22){M=0;if(H){R=0;S=F;break}else{Q=0}}J=a[g]|0;K=(J&1)==0;if(K){T=(J&255)>>>1}else{T=c[C>>2]|0}if(((c[o>>2]|0)-F|0)==(T|0)){if(K){U=(J&255)>>>1;V=(J&255)>>>1}else{J=c[C>>2]|0;U=J;V=J}t=0;La(30,n|0,V<<1|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){W=10}else{W=(c[B>>2]&-2)+ -1|0}t=0;La(30,n|0,W|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){X=w}else{X=c[x>>2]|0}c[o>>2]=X+U;Y=X}else{Y=F}J=G+12|0;K=c[J>>2]|0;L=G+16|0;if((K|0)==(c[L>>2]|0)){t=0;O=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;Z=t;t=0;if(Z&1){M=38;break}else{_=O}}else{_=c[K>>2]|0}if((dw(_,u,Y,o,r,D,m,v,q,s)|0)!=0){R=Q;S=Y;break}K=c[J>>2]|0;if((K|0)==(c[L>>2]|0)){t=0;oa(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=38;break}else{E=G;F=Y;continue}}else{c[J>>2]=K+4;E=G;F=Y;continue}}if((M|0)==38){F=Kb(-1,-1)|0;$=F;aa=I;lt(n);lt(m);Wb($|0)}F=a[m]|0;if((F&1)==0){ba=(F&255)>>>1}else{ba=c[m+4>>2]|0}do{if((ba|0)!=0){F=c[q>>2]|0;if((F-p|0)>=160){break}E=c[r>>2]|0;c[q>>2]=F+4;c[F>>2]=E}}while(0);t=0;E=Ja(12,S|0,c[o>>2]|0,h|0,u|0)|0;F=I;D=t;t=0;if(D&1){break}D=j;c[D>>2]=E;c[D+4>>2]=F;py(m,v,c[q>>2]|0,h);do{if((G|0)==0){ca=0;da=1}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){t=0;D=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;E=t;t=0;if(E&1){break a}else{ea=D}}else{ea=c[F>>2]|0}if(!((ea|0)==-1)){ca=G;da=0;break}c[z>>2]=0;ca=0;da=1}}while(0);do{if((R|0)==0){M=67}else{z=c[R+12>>2]|0;if((z|0)==(c[R+16>>2]|0)){t=0;v=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;F=t;t=0;if(F&1){break a}else{fa=v}}else{fa=c[z>>2]|0}if((fa|0)==-1){c[A>>2]=0;M=67;break}if(!da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);do{if((M|0)==67){if(da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);d=Kb(-1,-1)|0;$=d;aa=I;lt(n);lt(m);Wb($|0)}function Qv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Rv(a,0,k,j,f,g,h);i=b;return}function Rv(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;e=i;i=i+328|0;l=e;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l;hw(n,h,u,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);l=t;t=0;a:do{if(!(l&1)){if((a[h]&1)==0){w=o+1|0;x=w;y=o+8|0;z=w}else{w=o+8|0;x=o+1|0;y=w;z=c[w>>2]|0}c[p>>2]=z;w=q;c[r>>2]=w;c[s>>2]=0;A=f;B=g;C=o;D=o+4|0;E=c[m>>2]|0;F=c[A>>2]|0;G=z;b:while(1){do{if((F|0)==0){H=0;J=1}else{K=c[F+12>>2]|0;if((K|0)==(c[F+16>>2]|0)){t=0;L=oa(c[(c[F>>2]|0)+36>>2]|0,F|0)|0;M=t;t=0;if(M&1){N=38;break b}else{O=L}}else{O=c[K>>2]|0}if(!((O|0)==-1)){H=F;J=0;break}c[A>>2]=0;H=0;J=1}}while(0);K=c[B>>2]|0;do{if((K|0)==0){N=22}else{L=c[K+12>>2]|0;if((L|0)==(c[K+16>>2]|0)){t=0;M=oa(c[(c[K>>2]|0)+36>>2]|0,K|0)|0;P=t;t=0;if(P&1){N=38;break b}else{Q=M}}else{Q=c[L>>2]|0}if((Q|0)==-1){c[B>>2]=0;N=22;break}else{if(J){R=K;break}else{S=K;T=G;break b}}}}while(0);if((N|0)==22){N=0;if(J){S=0;T=G;break}else{R=0}}K=a[h]|0;L=(K&1)==0;if(L){U=(K&255)>>>1}else{U=c[D>>2]|0}if(((c[p>>2]|0)-G|0)==(U|0)){if(L){V=(K&255)>>>1;W=(K&255)>>>1}else{K=c[D>>2]|0;V=K;W=K}t=0;La(30,o|0,W<<1|0,0);K=t;t=0;if(K&1){N=38;break}if((a[h]&1)==0){X=10}else{X=(c[C>>2]&-2)+ -1|0}t=0;La(30,o|0,X|0,0);K=t;t=0;if(K&1){N=38;break}if((a[h]&1)==0){Y=x}else{Y=c[y>>2]|0}c[p>>2]=Y+V;Z=Y}else{Z=G}K=H+12|0;L=c[K>>2]|0;M=H+16|0;if((L|0)==(c[M>>2]|0)){t=0;P=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;_=t;t=0;if(_&1){N=38;break}else{$=P}}else{$=c[L>>2]|0}if((dw($,v,Z,p,s,E,n,w,r,u)|0)!=0){S=R;T=Z;break}L=c[K>>2]|0;if((L|0)==(c[M>>2]|0)){t=0;oa(c[(c[H>>2]|0)+40>>2]|0,H|0)|0;M=t;t=0;if(M&1){N=38;break}else{F=H;G=Z;continue}}else{c[K>>2]=L+4;F=H;G=Z;continue}}if((N|0)==38){G=Kb(-1,-1)|0;aa=G;ba=I;lt(o);lt(n);Wb(aa|0)}G=a[n]|0;if((G&1)==0){ca=(G&255)>>>1}else{ca=c[n+4>>2]|0}do{if((ca|0)!=0){G=c[r>>2]|0;if((G-q|0)>=160){break}F=c[s>>2]|0;c[r>>2]=G+4;c[G>>2]=F}}while(0);t=0;F=Ja(13,T|0,c[p>>2]|0,j|0,v|0)|0;G=t;t=0;if(G&1){break}b[k>>1]=F;py(n,w,c[r>>2]|0,j);do{if((H|0)==0){da=0;ea=1}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){t=0;G=oa(c[(c[H>>2]|0)+36>>2]|0,H|0)|0;E=t;t=0;if(E&1){break a}else{fa=G}}else{fa=c[F>>2]|0}if(!((fa|0)==-1)){da=H;ea=0;break}c[A>>2]=0;da=0;ea=1}}while(0);do{if((S|0)==0){N=67}else{A=c[S+12>>2]|0;if((A|0)==(c[S+16>>2]|0)){t=0;w=oa(c[(c[S>>2]|0)+36>>2]|0,S|0)|0;F=t;t=0;if(F&1){break a}else{ga=w}}else{ga=c[A>>2]|0}if((ga|0)==-1){c[B>>2]=0;N=67;break}if(!ea){break}ha=d;c[ha>>2]=da;lt(o);lt(n);i=e;return}}while(0);do{if((N|0)==67){if(ea){break}ha=d;c[ha>>2]=da;lt(o);lt(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ha=d;c[ha>>2]=da;lt(o);lt(n);i=e;return}}while(0);e=Kb(-1,-1)|0;aa=e;ba=I;lt(o);lt(n);Wb(aa|0)}function Sv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Tv(a,0,k,j,f,g,h);i=b;return}function Tv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=d;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){u=8}else if((s|0)==0){u=0}else if((s|0)==8){u=16}else{u=10}s=k;hw(m,g,s,l);g=n;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,n|0,10,0);k=t;t=0;a:do{if(!(k&1)){if((a[g]&1)==0){v=n+1|0;w=v;x=n+8|0;y=v}else{v=n+8|0;w=n+1|0;x=v;y=c[v>>2]|0}c[o>>2]=y;v=p;c[q>>2]=v;c[r>>2]=0;z=e;A=f;B=n;C=n+4|0;D=c[l>>2]|0;E=c[z>>2]|0;F=y;b:while(1){do{if((E|0)==0){G=0;H=1}else{J=c[E+12>>2]|0;if((J|0)==(c[E+16>>2]|0)){t=0;K=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;L=t;t=0;if(L&1){M=38;break b}else{N=K}}else{N=c[J>>2]|0}if(!((N|0)==-1)){G=E;H=0;break}c[z>>2]=0;G=0;H=1}}while(0);J=c[A>>2]|0;do{if((J|0)==0){M=22}else{K=c[J+12>>2]|0;if((K|0)==(c[J+16>>2]|0)){t=0;L=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;O=t;t=0;if(O&1){M=38;break b}else{P=L}}else{P=c[K>>2]|0}if((P|0)==-1){c[A>>2]=0;M=22;break}else{if(H){Q=J;break}else{R=J;S=F;break b}}}}while(0);if((M|0)==22){M=0;if(H){R=0;S=F;break}else{Q=0}}J=a[g]|0;K=(J&1)==0;if(K){T=(J&255)>>>1}else{T=c[C>>2]|0}if(((c[o>>2]|0)-F|0)==(T|0)){if(K){U=(J&255)>>>1;V=(J&255)>>>1}else{J=c[C>>2]|0;U=J;V=J}t=0;La(30,n|0,V<<1|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){W=10}else{W=(c[B>>2]&-2)+ -1|0}t=0;La(30,n|0,W|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){X=w}else{X=c[x>>2]|0}c[o>>2]=X+U;Y=X}else{Y=F}J=G+12|0;K=c[J>>2]|0;L=G+16|0;if((K|0)==(c[L>>2]|0)){t=0;O=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;Z=t;t=0;if(Z&1){M=38;break}else{_=O}}else{_=c[K>>2]|0}if((dw(_,u,Y,o,r,D,m,v,q,s)|0)!=0){R=Q;S=Y;break}K=c[J>>2]|0;if((K|0)==(c[L>>2]|0)){t=0;oa(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=38;break}else{E=G;F=Y;continue}}else{c[J>>2]=K+4;E=G;F=Y;continue}}if((M|0)==38){F=Kb(-1,-1)|0;$=F;aa=I;lt(n);lt(m);Wb($|0)}F=a[m]|0;if((F&1)==0){ba=(F&255)>>>1}else{ba=c[m+4>>2]|0}do{if((ba|0)!=0){F=c[q>>2]|0;if((F-p|0)>=160){break}E=c[r>>2]|0;c[q>>2]=F+4;c[F>>2]=E}}while(0);t=0;E=Ja(14,S|0,c[o>>2]|0,h|0,u|0)|0;F=t;t=0;if(F&1){break}c[j>>2]=E;py(m,v,c[q>>2]|0,h);do{if((G|0)==0){ca=0;da=1}else{E=c[G+12>>2]|0;if((E|0)==(c[G+16>>2]|0)){t=0;F=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;D=t;t=0;if(D&1){break a}else{ea=F}}else{ea=c[E>>2]|0}if(!((ea|0)==-1)){ca=G;da=0;break}c[z>>2]=0;ca=0;da=1}}while(0);do{if((R|0)==0){M=67}else{z=c[R+12>>2]|0;if((z|0)==(c[R+16>>2]|0)){t=0;v=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;E=t;t=0;if(E&1){break a}else{fa=v}}else{fa=c[z>>2]|0}if((fa|0)==-1){c[A>>2]=0;M=67;break}if(!da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);do{if((M|0)==67){if(da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);d=Kb(-1,-1)|0;$=d;aa=I;lt(n);lt(m);Wb($|0)}function Uv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Vv(a,0,k,j,f,g,h);i=b;return}function Vv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=d;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){u=8}else if((s|0)==0){u=0}else if((s|0)==8){u=16}else{u=10}s=k;hw(m,g,s,l);g=n;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,n|0,10,0);k=t;t=0;a:do{if(!(k&1)){if((a[g]&1)==0){v=n+1|0;w=v;x=n+8|0;y=v}else{v=n+8|0;w=n+1|0;x=v;y=c[v>>2]|0}c[o>>2]=y;v=p;c[q>>2]=v;c[r>>2]=0;z=e;A=f;B=n;C=n+4|0;D=c[l>>2]|0;E=c[z>>2]|0;F=y;b:while(1){do{if((E|0)==0){G=0;H=1}else{J=c[E+12>>2]|0;if((J|0)==(c[E+16>>2]|0)){t=0;K=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;L=t;t=0;if(L&1){M=38;break b}else{N=K}}else{N=c[J>>2]|0}if(!((N|0)==-1)){G=E;H=0;break}c[z>>2]=0;G=0;H=1}}while(0);J=c[A>>2]|0;do{if((J|0)==0){M=22}else{K=c[J+12>>2]|0;if((K|0)==(c[J+16>>2]|0)){t=0;L=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;O=t;t=0;if(O&1){M=38;break b}else{P=L}}else{P=c[K>>2]|0}if((P|0)==-1){c[A>>2]=0;M=22;break}else{if(H){Q=J;break}else{R=J;S=F;break b}}}}while(0);if((M|0)==22){M=0;if(H){R=0;S=F;break}else{Q=0}}J=a[g]|0;K=(J&1)==0;if(K){T=(J&255)>>>1}else{T=c[C>>2]|0}if(((c[o>>2]|0)-F|0)==(T|0)){if(K){U=(J&255)>>>1;V=(J&255)>>>1}else{J=c[C>>2]|0;U=J;V=J}t=0;La(30,n|0,V<<1|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){W=10}else{W=(c[B>>2]&-2)+ -1|0}t=0;La(30,n|0,W|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){X=w}else{X=c[x>>2]|0}c[o>>2]=X+U;Y=X}else{Y=F}J=G+12|0;K=c[J>>2]|0;L=G+16|0;if((K|0)==(c[L>>2]|0)){t=0;O=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;Z=t;t=0;if(Z&1){M=38;break}else{_=O}}else{_=c[K>>2]|0}if((dw(_,u,Y,o,r,D,m,v,q,s)|0)!=0){R=Q;S=Y;break}K=c[J>>2]|0;if((K|0)==(c[L>>2]|0)){t=0;oa(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=38;break}else{E=G;F=Y;continue}}else{c[J>>2]=K+4;E=G;F=Y;continue}}if((M|0)==38){F=Kb(-1,-1)|0;$=F;aa=I;lt(n);lt(m);Wb($|0)}F=a[m]|0;if((F&1)==0){ba=(F&255)>>>1}else{ba=c[m+4>>2]|0}do{if((ba|0)!=0){F=c[q>>2]|0;if((F-p|0)>=160){break}E=c[r>>2]|0;c[q>>2]=F+4;c[F>>2]=E}}while(0);t=0;E=Ja(15,S|0,c[o>>2]|0,h|0,u|0)|0;F=t;t=0;if(F&1){break}c[j>>2]=E;py(m,v,c[q>>2]|0,h);do{if((G|0)==0){ca=0;da=1}else{E=c[G+12>>2]|0;if((E|0)==(c[G+16>>2]|0)){t=0;F=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;D=t;t=0;if(D&1){break a}else{ea=F}}else{ea=c[E>>2]|0}if(!((ea|0)==-1)){ca=G;da=0;break}c[z>>2]=0;ca=0;da=1}}while(0);do{if((R|0)==0){M=67}else{z=c[R+12>>2]|0;if((z|0)==(c[R+16>>2]|0)){t=0;v=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;E=t;t=0;if(E&1){break a}else{fa=v}}else{fa=c[z>>2]|0}if((fa|0)==-1){c[A>>2]=0;M=67;break}if(!da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);do{if((M|0)==67){if(da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);d=Kb(-1,-1)|0;$=d;aa=I;lt(n);lt(m);Wb($|0)}function Wv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Xv(a,0,k,j,f,g,h);i=b;return}function Xv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=d;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){u=8}else if((s|0)==0){u=0}else if((s|0)==8){u=16}else{u=10}s=k;hw(m,g,s,l);g=n;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,n|0,10,0);k=t;t=0;a:do{if(!(k&1)){if((a[g]&1)==0){v=n+1|0;w=v;x=n+8|0;y=v}else{v=n+8|0;w=n+1|0;x=v;y=c[v>>2]|0}c[o>>2]=y;v=p;c[q>>2]=v;c[r>>2]=0;z=e;A=f;B=n;C=n+4|0;D=c[l>>2]|0;E=c[z>>2]|0;F=y;b:while(1){do{if((E|0)==0){G=0;H=1}else{J=c[E+12>>2]|0;if((J|0)==(c[E+16>>2]|0)){t=0;K=oa(c[(c[E>>2]|0)+36>>2]|0,E|0)|0;L=t;t=0;if(L&1){M=38;break b}else{N=K}}else{N=c[J>>2]|0}if(!((N|0)==-1)){G=E;H=0;break}c[z>>2]=0;G=0;H=1}}while(0);J=c[A>>2]|0;do{if((J|0)==0){M=22}else{K=c[J+12>>2]|0;if((K|0)==(c[J+16>>2]|0)){t=0;L=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;O=t;t=0;if(O&1){M=38;break b}else{P=L}}else{P=c[K>>2]|0}if((P|0)==-1){c[A>>2]=0;M=22;break}else{if(H){Q=J;break}else{R=J;S=F;break b}}}}while(0);if((M|0)==22){M=0;if(H){R=0;S=F;break}else{Q=0}}J=a[g]|0;K=(J&1)==0;if(K){T=(J&255)>>>1}else{T=c[C>>2]|0}if(((c[o>>2]|0)-F|0)==(T|0)){if(K){U=(J&255)>>>1;V=(J&255)>>>1}else{J=c[C>>2]|0;U=J;V=J}t=0;La(30,n|0,V<<1|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){W=10}else{W=(c[B>>2]&-2)+ -1|0}t=0;La(30,n|0,W|0,0);J=t;t=0;if(J&1){M=38;break}if((a[g]&1)==0){X=w}else{X=c[x>>2]|0}c[o>>2]=X+U;Y=X}else{Y=F}J=G+12|0;K=c[J>>2]|0;L=G+16|0;if((K|0)==(c[L>>2]|0)){t=0;O=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;Z=t;t=0;if(Z&1){M=38;break}else{_=O}}else{_=c[K>>2]|0}if((dw(_,u,Y,o,r,D,m,v,q,s)|0)!=0){R=Q;S=Y;break}K=c[J>>2]|0;if((K|0)==(c[L>>2]|0)){t=0;oa(c[(c[G>>2]|0)+40>>2]|0,G|0)|0;L=t;t=0;if(L&1){M=38;break}else{E=G;F=Y;continue}}else{c[J>>2]=K+4;E=G;F=Y;continue}}if((M|0)==38){F=Kb(-1,-1)|0;$=F;aa=I;lt(n);lt(m);Wb($|0)}F=a[m]|0;if((F&1)==0){ba=(F&255)>>>1}else{ba=c[m+4>>2]|0}do{if((ba|0)!=0){F=c[q>>2]|0;if((F-p|0)>=160){break}E=c[r>>2]|0;c[q>>2]=F+4;c[F>>2]=E}}while(0);t=0;E=Ja(16,S|0,c[o>>2]|0,h|0,u|0)|0;F=I;D=t;t=0;if(D&1){break}D=j;c[D>>2]=E;c[D+4>>2]=F;py(m,v,c[q>>2]|0,h);do{if((G|0)==0){ca=0;da=1}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){t=0;D=oa(c[(c[G>>2]|0)+36>>2]|0,G|0)|0;E=t;t=0;if(E&1){break a}else{ea=D}}else{ea=c[F>>2]|0}if(!((ea|0)==-1)){ca=G;da=0;break}c[z>>2]=0;ca=0;da=1}}while(0);do{if((R|0)==0){M=67}else{z=c[R+12>>2]|0;if((z|0)==(c[R+16>>2]|0)){t=0;v=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;F=t;t=0;if(F&1){break a}else{fa=v}}else{fa=c[z>>2]|0}if((fa|0)==-1){c[A>>2]=0;M=67;break}if(!da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);do{if((M|0)==67){if(da){break}ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;ga=b;c[ga>>2]=ca;lt(n);lt(m);i=d;return}}while(0);d=Kb(-1,-1)|0;$=d;aa=I;lt(n);lt(m);Wb($|0)}function Yv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];Zv(a,0,k,j,f,g,h);i=b;return}function Zv(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0;d=i;i=i+376|0;l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;u=d+360|0;v=d+368|0;w=d;iw(n,h,w,l,m);h=o;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;La(30,o|0,10,0);x=t;t=0;a:do{if(!(x&1)){if((a[h]&1)==0){y=o+1|0;z=y;A=o+8|0;B=y}else{y=o+8|0;z=o+1|0;A=y;B=c[y>>2]|0}c[p>>2]=B;y=q;c[r>>2]=y;c[s>>2]=0;a[u]=1;a[v]=69;C=e;D=f;E=o;F=o+4|0;G=c[l>>2]|0;H=c[m>>2]|0;J=c[C>>2]|0;K=B;b:while(1){do{if((J|0)==0){L=0;M=1}else{N=c[J+12>>2]|0;if((N|0)==(c[J+16>>2]|0)){t=0;O=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;P=t;t=0;if(P&1){Q=34;break b}else{R=O}}else{R=c[N>>2]|0}if(!((R|0)==-1)){L=J;M=0;break}c[C>>2]=0;L=0;M=1}}while(0);N=c[D>>2]|0;do{if((N|0)==0){Q=18}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){t=0;P=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;S=t;t=0;if(S&1){Q=34;break b}else{T=P}}else{T=c[O>>2]|0}if((T|0)==-1){c[D>>2]=0;Q=18;break}else{if(M){U=N;break}else{V=N;W=K;break b}}}}while(0);if((Q|0)==18){Q=0;if(M){V=0;W=K;break}else{U=0}}N=a[h]|0;O=(N&1)==0;if(O){X=(N&255)>>>1}else{X=c[F>>2]|0}if(((c[p>>2]|0)-K|0)==(X|0)){if(O){Y=(N&255)>>>1;Z=(N&255)>>>1}else{N=c[F>>2]|0;Y=N;Z=N}t=0;La(30,o|0,Z<<1|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[h]&1)==0){_=10}else{_=(c[E>>2]&-2)+ -1|0}t=0;La(30,o|0,_|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[h]&1)==0){$=z}else{$=c[A>>2]|0}c[p>>2]=$+Y;aa=$}else{aa=K}N=L+12|0;O=c[N>>2]|0;P=L+16|0;if((O|0)==(c[P>>2]|0)){t=0;S=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;ba=t;t=0;if(ba&1){Q=34;break}else{ca=S}}else{ca=c[O>>2]|0}if((jw(ca,u,v,aa,p,G,H,n,y,r,s,w)|0)!=0){V=U;W=aa;break}O=c[N>>2]|0;if((O|0)==(c[P>>2]|0)){t=0;oa(c[(c[L>>2]|0)+40>>2]|0,L|0)|0;P=t;t=0;if(P&1){Q=34;break}else{J=L;K=aa;continue}}else{c[N>>2]=O+4;J=L;K=aa;continue}}if((Q|0)==34){K=Kb(-1,-1)|0;da=K;ea=I;lt(o);lt(n);Wb(da|0)}K=a[n]|0;if((K&1)==0){fa=(K&255)>>>1}else{fa=c[n+4>>2]|0}do{if((fa|0)!=0){if((a[u]|0)==0){break}K=c[r>>2]|0;if((K-q|0)>=160){break}J=c[s>>2]|0;c[r>>2]=K+4;c[K>>2]=J}}while(0);t=0;ga=+Ga(1,W|0,c[p>>2]|0,j|0);J=t;t=0;if(J&1){break}g[k>>2]=ga;py(n,y,c[r>>2]|0,j);do{if((L|0)==0){ha=0;ia=1}else{J=c[L+12>>2]|0;if((J|0)==(c[L+16>>2]|0)){t=0;K=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;H=t;t=0;if(H&1){break a}else{ja=K}}else{ja=c[J>>2]|0}if(!((ja|0)==-1)){ha=L;ia=0;break}c[C>>2]=0;ha=0;ia=1}}while(0);do{if((V|0)==0){Q=64}else{C=c[V+12>>2]|0;if((C|0)==(c[V+16>>2]|0)){t=0;y=oa(c[(c[V>>2]|0)+36>>2]|0,V|0)|0;J=t;t=0;if(J&1){break a}else{ka=y}}else{ka=c[C>>2]|0}if((ka|0)==-1){c[D>>2]=0;Q=64;break}if(!ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);do{if((Q|0)==64){if(ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);d=Kb(-1,-1)|0;da=d;ea=I;lt(o);lt(n);Wb(da|0)}function _v(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];$v(a,0,k,j,f,g,h);i=b;return}function $v(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0;d=i;i=i+376|0;l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;u=d+360|0;v=d+368|0;w=d;iw(n,g,w,l,m);g=o;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,o|0,10,0);x=t;t=0;a:do{if(!(x&1)){if((a[g]&1)==0){y=o+1|0;z=y;A=o+8|0;B=y}else{y=o+8|0;z=o+1|0;A=y;B=c[y>>2]|0}c[p>>2]=B;y=q;c[r>>2]=y;c[s>>2]=0;a[u]=1;a[v]=69;C=e;D=f;E=o;F=o+4|0;G=c[l>>2]|0;H=c[m>>2]|0;J=c[C>>2]|0;K=B;b:while(1){do{if((J|0)==0){L=0;M=1}else{N=c[J+12>>2]|0;if((N|0)==(c[J+16>>2]|0)){t=0;O=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;P=t;t=0;if(P&1){Q=34;break b}else{R=O}}else{R=c[N>>2]|0}if(!((R|0)==-1)){L=J;M=0;break}c[C>>2]=0;L=0;M=1}}while(0);N=c[D>>2]|0;do{if((N|0)==0){Q=18}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){t=0;P=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;S=t;t=0;if(S&1){Q=34;break b}else{T=P}}else{T=c[O>>2]|0}if((T|0)==-1){c[D>>2]=0;Q=18;break}else{if(M){U=N;break}else{V=N;W=K;break b}}}}while(0);if((Q|0)==18){Q=0;if(M){V=0;W=K;break}else{U=0}}N=a[g]|0;O=(N&1)==0;if(O){X=(N&255)>>>1}else{X=c[F>>2]|0}if(((c[p>>2]|0)-K|0)==(X|0)){if(O){Y=(N&255)>>>1;Z=(N&255)>>>1}else{N=c[F>>2]|0;Y=N;Z=N}t=0;La(30,o|0,Z<<1|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[g]&1)==0){_=10}else{_=(c[E>>2]&-2)+ -1|0}t=0;La(30,o|0,_|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[g]&1)==0){$=z}else{$=c[A>>2]|0}c[p>>2]=$+Y;aa=$}else{aa=K}N=L+12|0;O=c[N>>2]|0;P=L+16|0;if((O|0)==(c[P>>2]|0)){t=0;S=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;ba=t;t=0;if(ba&1){Q=34;break}else{ca=S}}else{ca=c[O>>2]|0}if((jw(ca,u,v,aa,p,G,H,n,y,r,s,w)|0)!=0){V=U;W=aa;break}O=c[N>>2]|0;if((O|0)==(c[P>>2]|0)){t=0;oa(c[(c[L>>2]|0)+40>>2]|0,L|0)|0;P=t;t=0;if(P&1){Q=34;break}else{J=L;K=aa;continue}}else{c[N>>2]=O+4;J=L;K=aa;continue}}if((Q|0)==34){K=Kb(-1,-1)|0;da=K;ea=I;lt(o);lt(n);Wb(da|0)}K=a[n]|0;if((K&1)==0){fa=(K&255)>>>1}else{fa=c[n+4>>2]|0}do{if((fa|0)!=0){if((a[u]|0)==0){break}K=c[r>>2]|0;if((K-q|0)>=160){break}J=c[s>>2]|0;c[r>>2]=K+4;c[K>>2]=J}}while(0);t=0;ga=+Ga(2,W|0,c[p>>2]|0,j|0);J=t;t=0;if(J&1){break}h[k>>3]=ga;py(n,y,c[r>>2]|0,j);do{if((L|0)==0){ha=0;ia=1}else{J=c[L+12>>2]|0;if((J|0)==(c[L+16>>2]|0)){t=0;K=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;H=t;t=0;if(H&1){break a}else{ja=K}}else{ja=c[J>>2]|0}if(!((ja|0)==-1)){ha=L;ia=0;break}c[C>>2]=0;ha=0;ia=1}}while(0);do{if((V|0)==0){Q=64}else{C=c[V+12>>2]|0;if((C|0)==(c[V+16>>2]|0)){t=0;y=oa(c[(c[V>>2]|0)+36>>2]|0,V|0)|0;J=t;t=0;if(J&1){break a}else{ka=y}}else{ka=c[C>>2]|0}if((ka|0)==-1){c[D>>2]=0;Q=64;break}if(!ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);do{if((Q|0)==64){if(ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);d=Kb(-1,-1)|0;da=d;ea=I;lt(o);lt(n);Wb(da|0)}function aw(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;b=i;i=i+32|0;j=b;k=b+8|0;l=b+16|0;m=b+24|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];e=k;d=l;c[e+0>>2]=c[d+0>>2];d=j;e=m;c[d+0>>2]=c[e+0>>2];bw(a,0,k,j,f,g,h);i=b;return}function bw(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0;d=i;i=i+376|0;l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;u=d+360|0;v=d+368|0;w=d;iw(n,g,w,l,m);g=o;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;t=0;La(30,o|0,10,0);x=t;t=0;a:do{if(!(x&1)){if((a[g]&1)==0){y=o+1|0;z=y;A=o+8|0;B=y}else{y=o+8|0;z=o+1|0;A=y;B=c[y>>2]|0}c[p>>2]=B;y=q;c[r>>2]=y;c[s>>2]=0;a[u]=1;a[v]=69;C=e;D=f;E=o;F=o+4|0;G=c[l>>2]|0;H=c[m>>2]|0;J=c[C>>2]|0;K=B;b:while(1){do{if((J|0)==0){L=0;M=1}else{N=c[J+12>>2]|0;if((N|0)==(c[J+16>>2]|0)){t=0;O=oa(c[(c[J>>2]|0)+36>>2]|0,J|0)|0;P=t;t=0;if(P&1){Q=34;break b}else{R=O}}else{R=c[N>>2]|0}if(!((R|0)==-1)){L=J;M=0;break}c[C>>2]=0;L=0;M=1}}while(0);N=c[D>>2]|0;do{if((N|0)==0){Q=18}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){t=0;P=oa(c[(c[N>>2]|0)+36>>2]|0,N|0)|0;S=t;t=0;if(S&1){Q=34;break b}else{T=P}}else{T=c[O>>2]|0}if((T|0)==-1){c[D>>2]=0;Q=18;break}else{if(M){U=N;break}else{V=N;W=K;break b}}}}while(0);if((Q|0)==18){Q=0;if(M){V=0;W=K;break}else{U=0}}N=a[g]|0;O=(N&1)==0;if(O){X=(N&255)>>>1}else{X=c[F>>2]|0}if(((c[p>>2]|0)-K|0)==(X|0)){if(O){Y=(N&255)>>>1;Z=(N&255)>>>1}else{N=c[F>>2]|0;Y=N;Z=N}t=0;La(30,o|0,Z<<1|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[g]&1)==0){_=10}else{_=(c[E>>2]&-2)+ -1|0}t=0;La(30,o|0,_|0,0);N=t;t=0;if(N&1){Q=34;break}if((a[g]&1)==0){$=z}else{$=c[A>>2]|0}c[p>>2]=$+Y;aa=$}else{aa=K}N=L+12|0;O=c[N>>2]|0;P=L+16|0;if((O|0)==(c[P>>2]|0)){t=0;S=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;ba=t;t=0;if(ba&1){Q=34;break}else{ca=S}}else{ca=c[O>>2]|0}if((jw(ca,u,v,aa,p,G,H,n,y,r,s,w)|0)!=0){V=U;W=aa;break}O=c[N>>2]|0;if((O|0)==(c[P>>2]|0)){t=0;oa(c[(c[L>>2]|0)+40>>2]|0,L|0)|0;P=t;t=0;if(P&1){Q=34;break}else{J=L;K=aa;continue}}else{c[N>>2]=O+4;J=L;K=aa;continue}}if((Q|0)==34){K=Kb(-1,-1)|0;da=K;ea=I;lt(o);lt(n);Wb(da|0)}K=a[n]|0;if((K&1)==0){fa=(K&255)>>>1}else{fa=c[n+4>>2]|0}do{if((fa|0)!=0){if((a[u]|0)==0){break}K=c[r>>2]|0;if((K-q|0)>=160){break}J=c[s>>2]|0;c[r>>2]=K+4;c[K>>2]=J}}while(0);t=0;ga=+Ga(3,W|0,c[p>>2]|0,j|0);J=t;t=0;if(J&1){break}h[k>>3]=ga;py(n,y,c[r>>2]|0,j);do{if((L|0)==0){ha=0;ia=1}else{J=c[L+12>>2]|0;if((J|0)==(c[L+16>>2]|0)){t=0;K=oa(c[(c[L>>2]|0)+36>>2]|0,L|0)|0;H=t;t=0;if(H&1){break a}else{ja=K}}else{ja=c[J>>2]|0}if(!((ja|0)==-1)){ha=L;ia=0;break}c[C>>2]=0;ha=0;ia=1}}while(0);do{if((V|0)==0){Q=64}else{C=c[V+12>>2]|0;if((C|0)==(c[V+16>>2]|0)){t=0;y=oa(c[(c[V>>2]|0)+36>>2]|0,V|0)|0;J=t;t=0;if(J&1){break a}else{ka=y}}else{ka=c[C>>2]|0}if((ka|0)==-1){c[D>>2]=0;Q=64;break}if(!ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);do{if((Q|0)==64){if(ia){break}la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;la=b;c[la>>2]=ha;lt(o);lt(n);i=d;return}}while(0);d=Kb(-1,-1)|0;da=d;ea=I;lt(o);lt(n);Wb(da|0)}function cw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0;d=i;i=i+8|0;k=d;l=i;i=i+16|0;m=i;i=i+104|0;n=i;i=i+16|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+160|0;r=n;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;t=0;na(42,o|0,g|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;s=g;u=I;lt(n);Wb(s|0)}g=o;o=c[g>>2]|0;if((c[5340]|0)==-1){v=4}else{c[l>>2]=21360;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21360,l|0,280);l=t;t=0;if(!(l&1)){v=4}}a:do{if((v|0)==4){l=(c[21364>>2]|0)+ -1|0;w=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=m;t=0;Ja(c[(c[x>>2]|0)+48>>2]|0,x|0,19904,19930|0,y|0)|0;x=t;t=0;if(x&1){break a}Ks(c[g>>2]|0)|0;x=p;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;t=0;La(30,p|0,10,0);z=t;t=0;b:do{if(z&1){v=45}else{if((a[x]&1)==0){A=p+1|0;B=A;C=p+8|0;D=A}else{A=p+8|0;B=p+1|0;C=A;D=c[A>>2]|0}A=e;E=f;F=p;G=p+4|0;H=m+96|0;J=m+100|0;K=q;L=m+104|0;M=m;N=n+4|0;O=c[A>>2]|0;P=D;Q=q;R=0;S=D;c:while(1){do{if((O|0)==0){T=0;U=1}else{V=c[O+12>>2]|0;if((V|0)==(c[O+16>>2]|0)){t=0;W=oa(c[(c[O>>2]|0)+36>>2]|0,O|0)|0;X=t;t=0;if(X&1){v=44;break c}else{Y=W}}else{Y=c[V>>2]|0}if(!((Y|0)==-1)){T=O;U=0;break}c[A>>2]=0;T=0;U=1}}while(0);V=c[E>>2]|0;do{if((V|0)==0){v=26}else{W=c[V+12>>2]|0;if((W|0)==(c[V+16>>2]|0)){t=0;X=oa(c[(c[V>>2]|0)+36>>2]|0,V|0)|0;Z=t;t=0;if(Z&1){v=44;break c}else{_=X}}else{_=c[W>>2]|0}if((_|0)==-1){c[E>>2]=0;v=26;break}else{if(U){break}else{$=S;break c}}}}while(0);if((v|0)==26){v=0;if(U){$=S;break}}V=a[x]|0;W=(V&1)==0;if(W){aa=(V&255)>>>1}else{aa=c[G>>2]|0}if((P-S|0)==(aa|0)){if(W){ba=(V&255)>>>1;ca=(V&255)>>>1}else{V=c[G>>2]|0;ba=V;ca=V}t=0;La(30,p|0,ca<<1|0,0);V=t;t=0;if(V&1){v=44;break}if((a[x]&1)==0){da=10}else{da=(c[F>>2]&-2)+ -1|0}t=0;La(30,p|0,da|0,0);V=t;t=0;if(V&1){v=44;break}if((a[x]&1)==0){ea=B}else{ea=c[C>>2]|0}fa=ea+ba|0;ga=ea}else{fa=P;ga=S}V=c[T+12>>2]|0;if((V|0)==(c[T+16>>2]|0)){t=0;W=oa(c[(c[T>>2]|0)+36>>2]|0,T|0)|0;X=t;t=0;if(X&1){v=44;break}else{ha=W}}else{ha=c[V>>2]|0}V=(fa|0)==(ga|0);do{if(V){W=(c[H>>2]|0)==(ha|0);if(!W){if((c[J>>2]|0)!=(ha|0)){v=54;break}}a[fa]=W?43:45;ia=fa+1|0;ja=Q;ka=0}else{v=54}}while(0);do{if((v|0)==54){v=0;W=a[r]|0;if((W&1)==0){la=(W&255)>>>1}else{la=c[N>>2]|0}if((la|0)!=0&(ha|0)==0){if((Q-K|0)>=160){ia=fa;ja=Q;ka=R;break}c[Q>>2]=R;ia=fa;ja=Q+4|0;ka=0;break}else{ma=y}while(1){W=ma+4|0;if((c[ma>>2]|0)==(ha|0)){pa=ma;break}if((W|0)==(L|0)){pa=L;break}else{ma=W}}W=pa-M|0;X=W>>2;if((W|0)>92){$=ga;break c}if((W|0)<88){a[fa]=a[19904+X|0]|0;ia=fa+1|0;ja=Q;ka=R+1|0;break}if(V){$=fa;break c}if((fa-ga|0)>=3){$=ga;break c}if((a[fa+ -1|0]|0)!=48){$=ga;break c}a[fa]=a[19904+X|0]|0;ia=fa+1|0;ja=Q;ka=0}}while(0);V=c[A>>2]|0;X=V+12|0;W=c[X>>2]|0;if((W|0)==(c[V+16>>2]|0)){t=0;oa(c[(c[V>>2]|0)+40>>2]|0,V|0)|0;Z=t;t=0;if(Z&1){v=44;break}else{O=V;P=ia;Q=ja;R=ka;S=ga;continue}}else{c[X>>2]=W+4;O=V;P=ia;Q=ja;R=ka;S=ga;continue}}if((v|0)==44){S=Kb(-1,-1)|0;qa=I;ra=S;break}a[$+3|0]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;S=sa(33,2147483647,21264,0)|0;R=t;t=0;if(R&1){R=Kb(-1,-1)|0;Q=I;rc(21256);qa=Q;ra=R;break b}else{c[5312]=S;Nb(21256);break}}}while(0);S=c[5312]|0;t=0;c[k>>2]=j;R=Ja(17,$|0,S|0,19944,k|0)|0;S=t;t=0;if(S&1){v=45;break}if((R|0)!=1){c[h>>2]=4}R=c[A>>2]|0;do{if((R|0)==0){ta=0;ua=1}else{S=c[R+12>>2]|0;if((S|0)==(c[R+16>>2]|0)){t=0;Q=oa(c[(c[R>>2]|0)+36>>2]|0,R|0)|0;P=t;t=0;if(P&1){v=45;break b}else{va=Q}}else{va=c[S>>2]|0}if(!((va|0)==-1)){ta=R;ua=0;break}c[A>>2]=0;ta=0;ua=1}}while(0);A=c[E>>2]|0;do{if((A|0)==0){v=92}else{R=c[A+12>>2]|0;if((R|0)==(c[A+16>>2]|0)){t=0;S=oa(c[(c[A>>2]|0)+36>>2]|0,A|0)|0;Q=t;t=0;if(Q&1){v=45;break b}else{wa=S}}else{wa=c[R>>2]|0}if((wa|0)==-1){c[E>>2]=0;v=92;break}if(!ua){break}xa=b;c[xa>>2]=ta;lt(p);lt(n);i=d;return}}while(0);do{if((v|0)==92){if(ua){break}xa=b;c[xa>>2]=ta;lt(p);lt(n);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;xa=b;c[xa>>2]=ta;lt(p);lt(n);i=d;return}}while(0);if((v|0)==45){y=Kb(-1,-1)|0;qa=I;ra=y}lt(p);s=ra;u=qa;lt(n);Wb(s|0)}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){break}}}while(0);qa=Kb(-1,-1)|0;ra=I;Ks(c[g>>2]|0)|0;s=qa;u=ra;lt(n);Wb(s|0)}function dw(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){q=(c[m+96>>2]|0)==(b|0);if(!q){if((c[m+100>>2]|0)!=(b|0)){break}}c[f>>2]=e+1;a[e]=q?43:45;c[g>>2]=0;r=0;i=n;return r|0}}while(0);q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0&(b|0)==(h|0)){h=c[l>>2]|0;if((h-k|0)>=160){r=0;i=n;return r|0}k=c[g>>2]|0;c[l>>2]=h+4;c[h>>2]=k;c[g>>2]=0;r=0;i=n;return r|0}k=m+104|0;h=m;while(1){l=h+4|0;if((c[h>>2]|0)==(b|0)){t=h;break}if((l|0)==(k|0)){t=k;break}else{h=l}}h=t-m|0;m=h>>2;if((h|0)>92){r=-1;i=n;return r|0}do{if((d|0)==10|(d|0)==8){if((m|0)<(d|0)){break}else{r=-1}i=n;return r|0}else if((d|0)==16){if((h|0)<88){break}if(p){r=-1;i=n;return r|0}if((o-e|0)>=3){r=-1;i=n;return r|0}if((a[o+ -1|0]|0)!=48){r=-1;i=n;return r|0}c[g>>2]=0;t=a[19904+m|0]|0;c[f>>2]=o+1;a[o]=t;r=0;i=n;return r|0}}while(0);e=a[19904+m|0]|0;c[f>>2]=o+1;a[o]=e;c[g>>2]=(c[g>>2]|0)+1;r=0;i=n;return r|0}function ew(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0;g=i;i=i+40|0;h=g;j=g+16|0;k=g+32|0;Ot(k,d);d=k;k=c[d>>2]|0;if((c[5342]|0)==-1){l=3}else{c[j>>2]=21368;c[j+4>>2]=279;c[j+8>>2]=0;t=0;La(55,21368,j|0,280);j=t;t=0;if(!(j&1)){l=3}}a:do{if((l|0)==3){j=(c[21372>>2]|0)+ -1|0;m=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-m>>2>>>0>j>>>0){n=c[m+(j<<2)>>2]|0;if((n|0)==0){break}t=0;Ja(c[(c[n>>2]|0)+32>>2]|0,n|0,19904,19930|0,e|0)|0;n=t;t=0;if(n&1){break a}n=c[d>>2]|0;if(!((c[5378]|0)==-1)){c[h>>2]=21512;c[h+4>>2]=279;c[h+8>>2]=0;t=0;La(55,21512,h|0,280);o=t;t=0;if(o&1){break a}}o=(c[21516>>2]|0)+ -1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;t=0;s=oa(c[(c[q>>2]|0)+16>>2]|0,r|0)|0;u=t;t=0;if(u&1){break a}a[f]=s;t=0;na(c[(c[q>>2]|0)+20>>2]|0,b|0,r|0);r=t;t=0;if(r&1){break a}Ks(c[d>>2]|0)|0;i=g;return}}while(0);o=xc(4)|0;wB(o);t=0;La(13,o|0,29328,218);o=t;t=0;if(o&1){break a}}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){break}}}while(0);g=Kb(-1,-1)|0;Ks(c[d>>2]|0)|0;Wb(g|0)}function fw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0;h=i;i=i+40|0;j=h;k=h+16|0;l=h+32|0;Ot(l,d);d=l;l=c[d>>2]|0;if((c[5342]|0)==-1){m=3}else{c[k>>2]=21368;c[k+4>>2]=279;c[k+8>>2]=0;t=0;La(55,21368,k|0,280);k=t;t=0;if(!(k&1)){m=3}}a:do{if((m|0)==3){k=(c[21372>>2]|0)+ -1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>k>>>0){o=c[n+(k<<2)>>2]|0;if((o|0)==0){break}t=0;Ja(c[(c[o>>2]|0)+32>>2]|0,o|0,19904,19936|0,e|0)|0;o=t;t=0;if(o&1){break a}o=c[d>>2]|0;if(!((c[5378]|0)==-1)){c[j>>2]=21512;c[j+4>>2]=279;c[j+8>>2]=0;t=0;La(55,21512,j|0,280);p=t;t=0;if(p&1){break a}}p=(c[21516>>2]|0)+ -1|0;q=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-q>>2>>>0>p>>>0){r=c[q+(p<<2)>>2]|0;if((r|0)==0){break}s=r;u=r;t=0;v=oa(c[(c[u>>2]|0)+12>>2]|0,s|0)|0;w=t;t=0;if(w&1){break a}a[f]=v;t=0;v=oa(c[(c[u>>2]|0)+16>>2]|0,s|0)|0;u=t;t=0;if(u&1){break a}a[g]=v;t=0;na(c[(c[r>>2]|0)+20>>2]|0,b|0,s|0);s=t;t=0;if(s&1){break a}Ks(c[d>>2]|0)|0;i=h;return}}while(0);p=xc(4)|0;wB(p);t=0;La(13,p|0,29328,218);p=t;t=0;if(p&1){break a}}}while(0);k=xc(4)|0;wB(k);t=0;La(13,k|0,29328,218);k=t;t=0;if(k&1){break}}}while(0);h=Kb(-1,-1)|0;Ks(c[d>>2]|0)|0;Wb(h|0)}function gw(b,d,e,f,g,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;p=i;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){q=-1;i=p;return q|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[k]|0;if((h&1)==0){r=(h&255)>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){q=0;i=p;return q|0}r=c[m>>2]|0;if((r-l|0)>=160){q=0;i=p;return q|0}h=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=h;q=0;i=p;return q|0}do{if(b<<24>>24==j<<24>>24){h=a[k]|0;if((h&1)==0){s=(h&255)>>>1}else{s=c[k+4>>2]|0}if((s|0)==0){break}if((a[d]|0)==0){q=-1;i=p;return q|0}h=c[m>>2]|0;if((h-l|0)>=160){q=0;i=p;return q|0}r=c[n>>2]|0;c[m>>2]=h+4;c[h>>2]=r;c[n>>2]=0;q=0;i=p;return q|0}}while(0);s=o+32|0;j=o;while(1){r=j+1|0;if((a[j]|0)==b<<24>>24){t=j;break}if((r|0)==(s|0)){t=s;break}else{j=r}}j=t-o|0;if((j|0)>31){q=-1;i=p;return q|0}o=a[19904+j|0]|0;if((j|0)==23|(j|0)==22){a[e]=80;t=c[g>>2]|0;c[g>>2]=t+1;a[t]=o;q=0;i=p;return q|0}else if((j|0)==24|(j|0)==25){t=c[g>>2]|0;do{if((t|0)!=(f|0)){if((a[t+ -1|0]&95|0)==(a[e]&127|0)){break}else{q=-1}i=p;return q|0}}while(0);c[g>>2]=t+1;a[t]=o;q=0;i=p;return q|0}else{t=o&95;do{if((t|0)==(a[e]|0)){a[e]=t|128;if((a[d]|0)==0){break}a[d]=0;f=a[k]|0;if((f&1)==0){u=(f&255)>>>1}else{u=c[k+4>>2]|0}if((u|0)==0){break}f=c[m>>2]|0;if((f-l|0)>=160){break}s=c[n>>2]|0;c[m>>2]=f+4;c[f>>2]=s}}while(0);m=c[g>>2]|0;c[g>>2]=m+1;a[m]=o;if((j|0)>21){q=0;i=p;return q|0}c[n>>2]=(c[n>>2]|0)+1;q=0;i=p;return q|0}return 0}function hw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+40|0;g=f;h=f+16|0;j=f+32|0;Ot(j,b);b=j;j=c[b>>2]|0;if((c[5340]|0)==-1){k=3}else{c[h>>2]=21360;c[h+4>>2]=279;c[h+8>>2]=0;t=0;La(55,21360,h|0,280);h=t;t=0;if(!(h&1)){k=3}}a:do{if((k|0)==3){h=(c[21364>>2]|0)+ -1|0;l=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-l>>2>>>0>h>>>0){m=c[l+(h<<2)>>2]|0;if((m|0)==0){break}t=0;Ja(c[(c[m>>2]|0)+48>>2]|0,m|0,19904,19930|0,d|0)|0;m=t;t=0;if(m&1){break a}m=c[b>>2]|0;if(!((c[5380]|0)==-1)){c[g>>2]=21520;c[g+4>>2]=279;c[g+8>>2]=0;t=0;La(55,21520,g|0,280);n=t;t=0;if(n&1){break a}}n=(c[21524>>2]|0)+ -1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;t=0;r=oa(c[(c[p>>2]|0)+16>>2]|0,q|0)|0;s=t;t=0;if(s&1){break a}c[e>>2]=r;t=0;na(c[(c[p>>2]|0)+20>>2]|0,a|0,q|0);q=t;t=0;if(q&1){break a}Ks(c[b>>2]|0)|0;i=f;return}}while(0);n=xc(4)|0;wB(n);t=0;La(13,n|0,29328,218);n=t;t=0;if(n&1){break a}}}while(0);h=xc(4)|0;wB(h);t=0;La(13,h|0,29328,218);h=t;t=0;if(h&1){break}}}while(0);f=Kb(-1,-1)|0;Ks(c[b>>2]|0)|0;Wb(f|0)}function iw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0;g=i;i=i+40|0;h=g;j=g+16|0;k=g+32|0;Ot(k,b);b=k;k=c[b>>2]|0;if((c[5340]|0)==-1){l=3}else{c[j>>2]=21360;c[j+4>>2]=279;c[j+8>>2]=0;t=0;La(55,21360,j|0,280);j=t;t=0;if(!(j&1)){l=3}}a:do{if((l|0)==3){j=(c[21364>>2]|0)+ -1|0;m=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-m>>2>>>0>j>>>0){n=c[m+(j<<2)>>2]|0;if((n|0)==0){break}t=0;Ja(c[(c[n>>2]|0)+48>>2]|0,n|0,19904,19936|0,d|0)|0;n=t;t=0;if(n&1){break a}n=c[b>>2]|0;if(!((c[5380]|0)==-1)){c[h>>2]=21520;c[h+4>>2]=279;c[h+8>>2]=0;t=0;La(55,21520,h|0,280);o=t;t=0;if(o&1){break a}}o=(c[21524>>2]|0)+ -1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;t=0;u=oa(c[(c[s>>2]|0)+12>>2]|0,r|0)|0;v=t;t=0;if(v&1){break a}c[e>>2]=u;t=0;u=oa(c[(c[s>>2]|0)+16>>2]|0,r|0)|0;s=t;t=0;if(s&1){break a}c[f>>2]=u;t=0;na(c[(c[q>>2]|0)+20>>2]|0,a|0,r|0);r=t;t=0;if(r&1){break a}Ks(c[b>>2]|0)|0;i=g;return}}while(0);o=xc(4)|0;wB(o);t=0;La(13,o|0,29328,218);o=t;t=0;if(o&1){break a}}}while(0);j=xc(4)|0;wB(j);t=0;La(13,j|0,29328,218);j=t;t=0;if(j&1){break}}}while(0);g=Kb(-1,-1)|0;Ks(c[b>>2]|0)|0;Wb(g|0)}function jw(b,d,e,f,g,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;p=i;if((b|0)==(h|0)){if((a[d]|0)==0){q=-1;i=p;return q|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[k]|0;if((h&1)==0){r=(h&255)>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){q=0;i=p;return q|0}r=c[m>>2]|0;if((r-l|0)>=160){q=0;i=p;return q|0}h=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=h;q=0;i=p;return q|0}do{if((b|0)==(j|0)){h=a[k]|0;if((h&1)==0){s=(h&255)>>>1}else{s=c[k+4>>2]|0}if((s|0)==0){break}if((a[d]|0)==0){q=-1;i=p;return q|0}h=c[m>>2]|0;if((h-l|0)>=160){q=0;i=p;return q|0}r=c[n>>2]|0;c[m>>2]=h+4;c[h>>2]=r;c[n>>2]=0;q=0;i=p;return q|0}}while(0);s=o+128|0;j=o;while(1){r=j+4|0;if((c[j>>2]|0)==(b|0)){t=j;break}if((r|0)==(s|0)){t=s;break}else{j=r}}j=t-o|0;o=j>>2;if((j|0)>124){q=-1;i=p;return q|0}t=a[19904+o|0]|0;do{if((o|0)==23|(o|0)==22){a[e]=80}else if((o|0)==24|(o|0)==25){s=c[g>>2]|0;do{if((s|0)!=(f|0)){if((a[s+ -1|0]&95|0)==(a[e]&127|0)){break}else{q=-1}i=p;return q|0}}while(0);c[g>>2]=s+1;a[s]=t;q=0;i=p;return q|0}else{b=t&95;if((b|0)!=(a[e]|0)){break}a[e]=b|128;if((a[d]|0)==0){break}a[d]=0;b=a[k]|0;if((b&1)==0){u=(b&255)>>>1}else{u=c[k+4>>2]|0}if((u|0)==0){break}b=c[m>>2]|0;if((b-l|0)>=160){break}r=c[n>>2]|0;c[m>>2]=b+4;c[b>>2]=r}}while(0);m=c[g>>2]|0;c[g>>2]=m+1;a[m]=t;if((j|0)>84){q=0;i=p;return q|0}c[n>>2]=(c[n>>2]|0)+1;q=0;i=p;return q|0}function kw(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function lw(a){a=a|0;i=i;return}function mw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;i=i+56|0;k=j;l=j+8|0;m=j+24|0;n=j+32|0;o=j+40|0;if((c[f+4>>2]&1|0)==0){p=c[(c[d>>2]|0)+24>>2]|0;c[m>>2]=c[e>>2];q=h&1;r=k;s=m;c[r+0>>2]=c[s+0>>2];he[p&31](b,d,k,f,g,q);i=j;return}Ot(n,f);f=n;n=c[f>>2]|0;if((c[5378]|0)==-1){u=5}else{c[l>>2]=21512;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21512,l|0,280);l=t;t=0;if(!(l&1)){u=5}}do{if((u|0)==5){l=(c[21516>>2]|0)+ -1|0;q=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-q>>2>>>0>l>>>0){g=c[q+(l<<2)>>2]|0;if((g|0)==0){break}k=g;Ks(c[f>>2]|0)|0;d=c[g>>2]|0;if(h){_d[c[d+24>>2]&255](o,k)}else{_d[c[d+28>>2]&255](o,k)}k=o;d=a[k]|0;if((d&1)==0){g=o+1|0;v=g;w=g;x=o+8|0}else{g=o+8|0;v=c[g>>2]|0;w=o+1|0;x=g}g=e;p=o+4|0;s=d;d=v;a:while(1){if((s&1)==0){y=w;z=(s&255)>>>1}else{y=c[x>>2]|0;z=c[p>>2]|0}if((d|0)==(y+z|0)){u=29;break}r=a[d]|0;m=c[g>>2]|0;do{if((m|0)!=0){A=m+24|0;B=c[A>>2]|0;if((B|0)!=(c[m+28>>2]|0)){c[A>>2]=B+1;a[B]=r;break}t=0;B=Ea(c[(c[m>>2]|0)+52>>2]|0,m|0,r&255|0)|0;A=t;t=0;if(A&1){u=28;break a}if(!((B|0)==-1)){break}c[g>>2]=0}}while(0);s=a[k]|0;d=d+1|0}if((u|0)==28){d=Kb(-1,-1)|0;k=I;lt(o);C=d;D=k;Wb(C|0)}else if((u|0)==29){c[b>>2]=c[g>>2];lt(o);i=j;return}}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){break}}}while(0);j=Kb(-1,-1)|0;o=I;Ks(c[f>>2]|0)|0;C=j;D=o;Wb(C|0)}function nw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+8|0;m=i;i=i+16|0;n=i;i=i+24|0;o=i;i=i+8|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=l;a[s+0|0]=a[20152|0]|0;a[s+1|0]=a[20153|0]|0;a[s+2|0]=a[20154|0]|0;a[s+3|0]=a[20155|0]|0;a[s+4|0]=a[20156|0]|0;a[s+5|0]=a[20157|0]|0;u=l+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=u}else{a[u]=43;x=l+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}a[y]=108;x=y+1|0;y=w&74;do{if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else if((y|0)==64){a[x]=111}else{a[x]=100}}while(0);x=m;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;y=sa(33,2147483647,21264,0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;rc(21256);Wb(w|0)}else{c[5312]=y;Nb(21256);break}}}while(0);y=c[5312]|0;c[k>>2]=h;h=ow(x,12,y,s,k)|0;k=m+h|0;s=c[v>>2]&176;do{if((s|0)==32){z=k}else if((s|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=m+1|0;break}if(!((h|0)>1&v<<24>>24==48)){A=22;break}v=a[m+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=m+2|0}else{A=22}}while(0);if((A|0)==22){z=x}A=n;Ot(q,f);t=0;Aa(42,x|0,z|0,k|0,A|0,o|0,p|0,q|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;Ks(c[q>>2]|0)|0;Wb(k|0)}else{Ks(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;p=j;q=r;c[p+0>>2]=c[q+0>>2];af(b,j,A,e,o,f,g);i=d;return}}function ow(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;f=Dc(d|0)|0;d=gc(a|0,b|0,e|0,h|0)|0;if((f|0)==0){i=g;return d|0}t=0;oa(108,f|0)|0;f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}else{i=g;return d|0}return 0}function pw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;k=i;i=i+48|0;l=k;m=k+16|0;n=k+32|0;o=j;j=c[o>>2]|0;if(!((c[5342]|0)==-1)){c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;et(21368,m,280)}m=(c[21372>>2]|0)+ -1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}q=j;r=c[o>>2]|0;if(!((c[5378]|0)==-1)){c[l>>2]=21512;c[l+4>>2]=279;c[l+8>>2]=0;et(21512,l,280)}l=(c[21516>>2]|0)+ -1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}s=r;_d[c[(c[r>>2]|0)+20>>2]&255](n,s);u=n;l=a[u]|0;if((l&1)==0){v=(l&255)>>>1}else{v=c[n+4>>2]|0}a:do{if((v|0)==0){t=0;Ja(c[(c[j>>2]|0)+32>>2]|0,q|0,b|0,e|0,f|0)|0;l=t;t=0;if(l&1){w=18;break}c[h>>2]=f+(e-b)}else{c[h>>2]=f;l=a[b]|0;if(l<<24>>24==43|l<<24>>24==45){t=0;o=Ea(c[(c[j>>2]|0)+28>>2]|0,q|0,l|0)|0;l=t;t=0;if(l&1){w=18;break}l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;x=b+1|0}else{x=b}do{if((e-x|0)>1){if((a[x]|0)!=48){y=x;break}o=x+1|0;l=a[o]|0;if(!(l<<24>>24==88|l<<24>>24==120)){y=x;break}l=j;t=0;m=Ea(c[(c[l>>2]|0)+28>>2]|0,q|0,48)|0;p=t;t=0;if(p&1){w=18;break a}p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;t=0;m=Ea(c[(c[l>>2]|0)+28>>2]|0,q|0,a[o]|0)|0;o=t;t=0;if(o&1){w=18;break a}o=c[h>>2]|0;c[h>>2]=o+1;a[o]=m;y=x+2|0}else{y=x}}while(0);do{if((y|0)!=(e|0)){m=e+ -1|0;if(m>>>0>y>>>0){z=y;A=m}else{break}do{m=a[z]|0;a[z]=a[A]|0;a[A]=m;z=z+1|0;A=A+ -1|0;}while(z>>>0<A>>>0)}}while(0);t=0;m=oa(c[(c[r>>2]|0)+16>>2]|0,s|0)|0;o=t;t=0;if(o&1){w=18;break}b:do{if(y>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;B=n+8|0;C=0;D=0;E=y;while(1){F=(a[u]&1)==0;do{if((a[(F?o:c[B>>2]|0)+D|0]|0)==0){G=C;H=D}else{if((C|0)!=(a[(F?o:c[B>>2]|0)+D|0]|0)){G=C;H=D;break}J=c[h>>2]|0;c[h>>2]=J+1;a[J]=m;J=a[u]|0;if((J&1)==0){K=(J&255)>>>1}else{K=c[p>>2]|0}G=0;H=(D>>>0<(K+ -1|0)>>>0)+D|0}}while(0);t=0;F=Ea(c[(c[l>>2]|0)+28>>2]|0,q|0,a[E]|0)|0;J=t;t=0;if(J&1){break}J=c[h>>2]|0;c[h>>2]=J+1;a[J]=F;F=E+1|0;if(F>>>0<e>>>0){C=G+1|0;D=H;E=F}else{break b}}E=Kb(-1,-1)|0;L=E;M=I;lt(n);Wb(L|0)}}while(0);m=f+(y-b)|0;E=c[h>>2]|0;if((m|0)==(E|0)){break}D=E+ -1|0;if(D>>>0>m>>>0){N=m;O=D}else{break}do{D=a[N]|0;a[N]=a[O]|0;a[O]=D;N=N+1|0;O=O+ -1|0;}while(N>>>0<O>>>0)}}while(0);if((w|0)==18){w=Kb(-1,-1)|0;L=w;M=I;lt(n);Wb(L|0)}if((d|0)==(e|0)){P=c[h>>2]|0;c[g>>2]=P;lt(n);i=k;return}else{P=f+(d-b)|0;c[g>>2]=P;lt(n);i=k;return}}function qw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;k=d;l=d+8|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+48|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=m;m=u+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=m}else{a[m]=43;x=u+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}x=y+2|0;a[y]=108;a[y+1|0]=108;y=w&74;do{if((y|0)==64){a[x]=111}else if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else{a[x]=100}}while(0);x=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;w=sa(33,2147483647,21264,0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1)|0;rc(21256);Wb(y|0)}else{c[5312]=w;Nb(21256);break}}}while(0);w=c[5312]|0;y=l;c[y>>2]=h;c[y+4>>2]=j;j=ow(x,22,w,u,l)|0;l=n+j|0;u=c[v>>2]&176;do{if((u|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=n+1|0;break}if(!((j|0)>1&v<<24>>24==48)){A=22;break}v=a[n+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=n+2|0}else if((u|0)==32){z=l}else{A=22}}while(0);if((A|0)==22){z=x}A=o;Ot(r,f);t=0;Aa(42,x|0,z|0,l|0,A|0,p|0,q|0,r|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;Ks(c[r>>2]|0)|0;Wb(l|0)}else{Ks(c[r>>2]|0)|0;c[s>>2]=c[e>>2];e=c[p>>2]|0;p=c[q>>2]|0;q=k;r=s;c[q+0>>2]=c[r+0>>2];af(b,k,A,e,p,f,g);i=d;return}}function rw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+8|0;m=i;i=i+16|0;n=i;i=i+24|0;o=i;i=i+8|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=l;a[s+0|0]=a[20152|0]|0;a[s+1|0]=a[20153|0]|0;a[s+2|0]=a[20154|0]|0;a[s+3|0]=a[20155|0]|0;a[s+4|0]=a[20156|0]|0;a[s+5|0]=a[20157|0]|0;u=l+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=u}else{a[u]=43;x=l+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}a[y]=108;x=y+1|0;y=w&74;do{if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else if((y|0)==64){a[x]=111}else{a[x]=117}}while(0);x=m;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;y=sa(33,2147483647,21264,0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;rc(21256);Wb(w|0)}else{c[5312]=y;Nb(21256);break}}}while(0);y=c[5312]|0;c[k>>2]=h;h=ow(x,12,y,s,k)|0;k=m+h|0;s=c[v>>2]&176;do{if((s|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=m+1|0;break}if(!((h|0)>1&v<<24>>24==48)){A=22;break}v=a[m+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=m+2|0}else if((s|0)==32){z=k}else{A=22}}while(0);if((A|0)==22){z=x}A=n;Ot(q,f);t=0;Aa(42,x|0,z|0,k|0,A|0,o|0,p|0,q|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;Ks(c[q>>2]|0)|0;Wb(k|0)}else{Ks(c[q>>2]|0)|0;c[r>>2]=c[e>>2];e=c[o>>2]|0;o=c[p>>2]|0;p=j;q=r;c[p+0>>2]=c[q+0>>2];af(b,j,A,e,o,f,g);i=d;return}}function sw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+16|0;k=d;l=d+8|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+48|0;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+8|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=m;m=u+1|0;v=f+4|0;w=c[v>>2]|0;if((w&2048|0)==0){x=m}else{a[m]=43;x=u+2|0}if((w&512|0)==0){y=x}else{a[x]=35;y=x+1|0}x=y+2|0;a[y]=108;a[y+1|0]=108;y=w&74;do{if((y|0)==64){a[x]=111}else if((y|0)==8){if((w&16384|0)==0){a[x]=120;break}else{a[x]=88;break}}else{a[x]=117}}while(0);x=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;w=sa(33,2147483647,21264,0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1)|0;rc(21256);Wb(y|0)}else{c[5312]=w;Nb(21256);break}}}while(0);w=c[5312]|0;y=l;c[y>>2]=h;c[y+4>>2]=j;j=ow(x,23,w,u,l)|0;l=n+j|0;u=c[v>>2]&176;do{if((u|0)==32){z=l}else if((u|0)==16){v=a[x]|0;if(v<<24>>24==43|v<<24>>24==45){z=n+1|0;break}if(!((j|0)>1&v<<24>>24==48)){A=22;break}v=a[n+1|0]|0;if(!(v<<24>>24==88|v<<24>>24==120)){A=22;break}z=n+2|0}else{A=22}}while(0);if((A|0)==22){z=x}A=o;Ot(r,f);t=0;Aa(42,x|0,z|0,l|0,A|0,p|0,q|0,r|0);l=t;t=0;if(l&1){l=Kb(-1,-1)|0;Ks(c[r>>2]|0)|0;Wb(l|0)}else{Ks(c[r>>2]|0)|0;c[s>>2]=c[e>>2];e=c[p>>2]|0;p=c[q>>2]|0;q=k;r=s;c[q+0>>2]=c[r+0>>2];af(b,k,A,e,p,f,g);i=d;return}}function tw(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+24|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+8|0;r=i;i=i+32|0;s=i;i=i+8|0;u=i;i=i+64|0;v=i;i=i+8|0;w=i;i=i+8|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;A=q;c[A>>2]=37;c[A+4>>2]=0;A=q;q=A+1|0;B=f+4|0;C=c[B>>2]|0;if((C&2048|0)==0){D=q}else{a[q]=43;D=A+2|0}if((C&1024|0)==0){E=D}else{a[D]=35;E=D+1|0}D=C&260;q=C>>>14;do{if((D|0)==260){if((q&1|0)==0){a[E]=97;F=0;break}else{a[E]=65;F=0;break}}else{a[E]=46;C=E+2|0;a[E+1|0]=42;if((D|0)==256){if((q&1|0)==0){a[C]=101;F=1;break}else{a[C]=69;F=1;break}}else if((D|0)==4){if((q&1|0)==0){a[C]=102;F=1;break}else{a[C]=70;F=1;break}}else{if((q&1|0)==0){a[C]=103;F=1;break}else{a[C]=71;F=1;break}}}}while(0);q=r;c[s>>2]=q;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;D=t;t=0;if(D&1){D=Kb(-1,-1)|0;rc(21256);Wb(D|0)}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;if(F){c[p>>2]=c[f+8>>2];D=p+4|0;h[k>>3]=j;c[D>>2]=c[k>>2];c[D+4>>2]=c[k+4>>2];G=ow(q,30,r,A,p)|0}else{p=o;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];G=ow(q,30,r,A,o)|0}a:do{if((G|0)>29){o=(a[21256]|0)==0;b:do{if(F){do{if(o){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;p=t;t=0;if(p&1){p=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=p;break b}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;t=0;c[n>>2]=c[f+8>>2];p=n+4|0;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];p=Ja(18,s|0,r|0,A|0,n|0)|0;r=t;t=0;if(r&1){K=36}else{L=p;K=44}}else{do{if(o){if((Va(21256)|0)==0){break}t=0;p=sa(33,2147483647,21264,0)|0;r=t;t=0;if(r&1){r=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=r;break b}else{c[5312]=p;Nb(21256);break}}}while(0);p=c[5312]|0;t=0;c[m>>2]=c[f+8>>2];r=m+4|0;h[k>>3]=j;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];r=Ja(18,s|0,p|0,A|0,m|0)|0;p=t;t=0;if(p&1){K=36}else{L=r;K=44}}}while(0);do{if((K|0)==44){o=c[s>>2]|0;if((o|0)!=0){M=o;N=o;O=L;break a}t=0;Ma(5);o=t;t=0;if(o&1){K=36;break}o=c[s>>2]|0;M=o;N=o;O=L;break a}}while(0);if((K|0)==36){o=Kb(-1,-1)|0;H=I;J=o}P=J;Q=H;Wb(P|0)}else{M=c[s>>2]|0;N=0;O=G}}while(0);G=M+O|0;H=c[B>>2]&176;do{if((H|0)==16){B=a[M]|0;if(B<<24>>24==43|B<<24>>24==45){R=M+1|0;break}if(!((O|0)>1&B<<24>>24==48)){K=53;break}B=a[M+1|0]|0;if(!(B<<24>>24==88|B<<24>>24==120)){K=53;break}R=M+2|0}else if((H|0)==32){R=G}else{K=53}}while(0);if((K|0)==53){R=M}do{if((M|0)==(q|0)){S=q;T=0;U=u;K=59}else{H=TB(O<<1)|0;if((H|0)!=0){S=M;T=H;U=H;K=59;break}t=0;Ma(5);H=t;t=0;if(H&1){V=0;K=58;break}S=c[s>>2]|0;T=0;U=0;K=59}}while(0);do{if((K|0)==59){t=0;na(42,x|0,f|0);s=t;t=0;if(s&1){V=T;K=58;break}t=0;Aa(43,S|0,R|0,G|0,U|0,v|0,w|0,x|0);s=t;t=0;if(s&1){s=Kb(-1,-1)|0;M=I;Ks(c[x>>2]|0)|0;W=s;X=M;Y=T;break}Ks(c[x>>2]|0)|0;M=e;c[z>>2]=c[M>>2];s=c[v>>2]|0;O=c[w>>2]|0;t=0;u=l;q=z;c[u+0>>2]=c[q+0>>2];Aa(40,y|0,l|0,U|0,s|0,O|0,f|0,g|0);O=t;t=0;if(O&1){V=T;K=58;break}O=c[y>>2]|0;c[M>>2]=O;c[b>>2]=O;do{if((T|0)!=0){t=0;ma(281,T|0);O=t;t=0;if(!(O&1)){break}O=Kb(-1,-1,0)|0;Xe(O)}}while(0);if((N|0)==0){i=d;return}t=0;ma(281,N|0);O=t;t=0;if(O&1){O=Kb(-1,-1,0)|0;Xe(O)}else{i=d;return}}}while(0);if((K|0)==58){K=Kb(-1,-1)|0;W=K;X=I;Y=V}do{if((Y|0)!=0){t=0;ma(281,Y|0);V=t;t=0;if(!(V&1)){break}V=Kb(-1,-1,0)|0;Xe(V)}}while(0);if((N|0)==0){P=W;Q=X;Wb(P|0)}t=0;ma(281,N|0);N=t;t=0;if(N&1){N=Kb(-1,-1,0)|0;Xe(N)}else{P=W;Q=X;Wb(P|0)}}function uw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=Dc(b|0)|0;t=0;b=sa(34,a|0,d|0,g|0)|0;g=t;t=0;if(g&1){g=Kb(-1,-1)|0;if((e|0)==0){Wb(g|0)}t=0;oa(108,e|0)|0;d=t;t=0;if(d&1){d=Kb(-1,-1,0)|0;Xe(d)}else{Wb(g|0)}}else{if((e|0)==0){i=f;return b|0}t=0;oa(108,e|0)|0;e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{i=f;return b|0}}return 0}function vw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;k=i;i=i+48|0;l=k;m=k+16|0;n=k+32|0;o=j;j=c[o>>2]|0;if(!((c[5342]|0)==-1)){c[m>>2]=21368;c[m+4>>2]=279;c[m+8>>2]=0;et(21368,m,280)}m=(c[21372>>2]|0)+ -1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=xc(4)|0;r=q;wB(r);Md(q|0,29328,218)}q=j;r=c[o>>2]|0;if(!((c[5378]|0)==-1)){c[l>>2]=21512;c[l+4>>2]=279;c[l+8>>2]=0;et(21512,l,280)}l=(c[21516>>2]|0)+ -1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=xc(4)|0;u=s;wB(u);Md(s|0,29328,218)}s=r;_d[c[(c[r>>2]|0)+20>>2]&255](n,s);c[h>>2]=f;u=a[b]|0;do{if(u<<24>>24==43|u<<24>>24==45){t=0;l=Ea(c[(c[j>>2]|0)+28>>2]|0,q|0,u|0)|0;o=t;t=0;if(o&1){break}o=c[h>>2]|0;c[h>>2]=o+1;a[o]=l;v=b+1|0;w=20}else{v=b;w=20}}while(0);a:do{if((w|0)==20){u=e;b:do{if((u-v|0)>1){if((a[v]|0)!=48){w=21;break}l=v+1|0;o=a[l]|0;if(!(o<<24>>24==88|o<<24>>24==120)){w=21;break}o=j;t=0;m=Ea(c[(c[o>>2]|0)+28>>2]|0,q|0,48)|0;p=t;t=0;if(p&1){break a}p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=v+2|0;t=0;p=Ea(c[(c[o>>2]|0)+28>>2]|0,q|0,a[l]|0)|0;l=t;t=0;if(l&1){break a}l=c[h>>2]|0;c[h>>2]=l+1;a[l]=p;if(m>>>0<e>>>0){x=m}else{y=m;z=m;break}c:while(1){p=a[x]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;l=sa(33,2147483647,21264,0)|0;o=t;t=0;if(o&1){w=32;break c}c[5312]=l;Nb(21256)}}while(0);t=0;l=Ea(44,p<<24>>24|0,c[5312]|0)|0;o=t;t=0;if(o&1){w=17;break}o=x+1|0;if((l|0)==0){y=m;z=x;break b}if(o>>>0<e>>>0){x=o}else{y=m;z=o;break b}}if((w|0)==17){m=Kb(-1,-1)|0;A=I;B=m;lt(n);Wb(B|0)}else if((w|0)==32){m=Kb(-1,-1)|0;o=I;rc(21256);A=o;B=m;lt(n);Wb(B|0)}}else{w=21}}while(0);d:do{if((w|0)==21){if(v>>>0<e>>>0){C=v}else{y=v;z=v;break}e:while(1){m=a[C]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;o=sa(33,2147483647,21264,0)|0;l=t;t=0;if(l&1){w=40;break e}c[5312]=o;Nb(21256)}}while(0);t=0;p=Ea(45,m<<24>>24|0,c[5312]|0)|0;o=t;t=0;if(o&1){w=16;break}o=C+1|0;if((p|0)==0){y=v;z=C;break d}if(o>>>0<e>>>0){C=o}else{y=v;z=o;break d}}if((w|0)==16){o=Kb(-1,-1)|0;A=I;B=o;lt(n);Wb(B|0)}else if((w|0)==40){o=Kb(-1,-1)|0;p=I;rc(21256);A=p;B=o;lt(n);Wb(B|0)}}}while(0);o=n;p=a[o]|0;if((p&1)==0){D=(p&255)>>>1}else{D=c[n+4>>2]|0}do{if((D|0)==0){t=0;Ja(c[(c[j>>2]|0)+32>>2]|0,q|0,y|0,z|0,c[h>>2]|0)|0;p=t;t=0;if(p&1){break a}c[h>>2]=(c[h>>2]|0)+(z-y)}else{do{if((y|0)!=(z|0)){p=z+ -1|0;if(p>>>0>y>>>0){E=y;F=p}else{break}do{p=a[E]|0;a[E]=a[F]|0;a[F]=p;E=E+1|0;F=F+ -1|0;}while(E>>>0<F>>>0)}}while(0);t=0;m=oa(c[(c[r>>2]|0)+16>>2]|0,s|0)|0;p=t;t=0;if(p&1){break a}f:do{if(y>>>0<z>>>0){p=n+1|0;l=n+4|0;G=n+8|0;H=j;J=0;K=0;L=y;while(1){M=(a[o]&1)==0;do{if((a[(M?p:c[G>>2]|0)+K|0]|0)>0){if((J|0)!=(a[(M?p:c[G>>2]|0)+K|0]|0)){N=J;O=K;break}P=c[h>>2]|0;c[h>>2]=P+1;a[P]=m;P=a[o]|0;if((P&1)==0){Q=(P&255)>>>1}else{Q=c[l>>2]|0}N=0;O=(K>>>0<(Q+ -1|0)>>>0)+K|0}else{N=J;O=K}}while(0);t=0;M=Ea(c[(c[H>>2]|0)+28>>2]|0,q|0,a[L]|0)|0;P=t;t=0;if(P&1){break}P=c[h>>2]|0;c[h>>2]=P+1;a[P]=M;M=L+1|0;if(M>>>0<z>>>0){J=N+1|0;K=O;L=M}else{break f}}L=Kb(-1,-1)|0;A=I;B=L;lt(n);Wb(B|0)}}while(0);m=f+(y-b)|0;L=c[h>>2]|0;if((m|0)==(L|0)){break}K=L+ -1|0;if(K>>>0>m>>>0){R=m;S=K}else{break}do{K=a[R]|0;a[R]=a[S]|0;a[S]=K;R=R+1|0;S=S+ -1|0;}while(R>>>0<S>>>0)}}while(0);g:do{if(z>>>0<e>>>0){o=j;K=z;while(1){m=a[K]|0;if(m<<24>>24==46){w=69;break}t=0;L=Ea(c[(c[o>>2]|0)+28>>2]|0,q|0,m|0)|0;m=t;t=0;if(m&1){w=14;break}m=c[h>>2]|0;c[h>>2]=m+1;a[m]=L;L=K+1|0;if(L>>>0<e>>>0){K=L}else{T=L;break g}}if((w|0)==14){o=Kb(-1,-1)|0;A=I;B=o;lt(n);Wb(B|0)}else if((w|0)==69){t=0;o=oa(c[(c[r>>2]|0)+12>>2]|0,s|0)|0;L=t;t=0;if(L&1){break a}L=c[h>>2]|0;c[h>>2]=L+1;a[L]=o;T=K+1|0;break}}else{T=z}}while(0);t=0;Ja(c[(c[j>>2]|0)+32>>2]|0,q|0,T|0,e|0,c[h>>2]|0)|0;o=t;t=0;if(o&1){break}o=(c[h>>2]|0)+(u-T)|0;c[h>>2]=o;if((d|0)==(e|0)){U=o;c[g>>2]=U;lt(n);i=k;return}U=f+(d-b)|0;c[g>>2]=U;lt(n);i=k;return}}while(0);k=Kb(-1,-1)|0;A=I;B=k;lt(n);Wb(B|0)}function ww(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+16|0;l=d;m=d+8|0;n=i;i=i+16|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+8|0;r=i;i=i+32|0;s=i;i=i+8|0;u=i;i=i+64|0;v=i;i=i+8|0;w=i;i=i+8|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;A=q;c[A>>2]=37;c[A+4>>2]=0;A=q;q=A+1|0;B=f+4|0;C=c[B>>2]|0;if((C&2048|0)==0){D=q}else{a[q]=43;D=A+2|0}if((C&1024|0)==0){E=D}else{a[D]=35;E=D+1|0}D=C&260;q=C>>>14;do{if((D|0)==260){a[E]=76;C=E+1|0;if((q&1|0)==0){a[C]=97;F=0;break}else{a[C]=65;F=0;break}}else{a[E]=46;a[E+1|0]=42;a[E+2|0]=76;C=E+3|0;if((D|0)==256){if((q&1|0)==0){a[C]=101;F=1;break}else{a[C]=69;F=1;break}}else if((D|0)==4){if((q&1|0)==0){a[C]=102;F=1;break}else{a[C]=70;F=1;break}}else{if((q&1|0)==0){a[C]=103;F=1;break}else{a[C]=71;F=1;break}}}}while(0);q=r;c[s>>2]=q;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;D=t;t=0;if(D&1){D=Kb(-1,-1)|0;rc(21256);Wb(D|0)}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;if(F){c[p>>2]=c[f+8>>2];D=p+4|0;h[k>>3]=j;c[D>>2]=c[k>>2];c[D+4>>2]=c[k+4>>2];G=ow(q,30,r,A,p)|0}else{p=o;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];G=ow(q,30,r,A,o)|0}a:do{if((G|0)>29){o=(a[21256]|0)==0;b:do{if(F){do{if(o){if((Va(21256)|0)==0){break}t=0;r=sa(33,2147483647,21264,0)|0;p=t;t=0;if(p&1){p=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=p;break b}else{c[5312]=r;Nb(21256);break}}}while(0);r=c[5312]|0;t=0;c[n>>2]=c[f+8>>2];p=n+4|0;h[k>>3]=j;c[p>>2]=c[k>>2];c[p+4>>2]=c[k+4>>2];p=Ja(18,s|0,r|0,A|0,n|0)|0;r=t;t=0;if(r&1){K=36}else{L=p;K=44}}else{do{if(o){if((Va(21256)|0)==0){break}t=0;p=sa(33,2147483647,21264,0)|0;r=t;t=0;if(r&1){r=Kb(-1,-1)|0;D=I;rc(21256);H=D;J=r;break b}else{c[5312]=p;Nb(21256);break}}}while(0);p=c[5312]|0;t=0;r=m;h[k>>3]=j;c[r>>2]=c[k>>2];c[r+4>>2]=c[k+4>>2];r=Ja(18,s|0,p|0,A|0,m|0)|0;p=t;t=0;if(p&1){K=36}else{L=r;K=44}}}while(0);do{if((K|0)==44){o=c[s>>2]|0;if((o|0)!=0){M=o;N=o;O=L;break a}t=0;Ma(5);o=t;t=0;if(o&1){K=36;break}o=c[s>>2]|0;M=o;N=o;O=L;break a}}while(0);if((K|0)==36){o=Kb(-1,-1)|0;H=I;J=o}P=J;Q=H;Wb(P|0)}else{M=c[s>>2]|0;N=0;O=G}}while(0);G=M+O|0;H=c[B>>2]&176;do{if((H|0)==16){B=a[M]|0;if(B<<24>>24==43|B<<24>>24==45){R=M+1|0;break}if(!((O|0)>1&B<<24>>24==48)){K=53;break}B=a[M+1|0]|0;if(!(B<<24>>24==88|B<<24>>24==120)){K=53;break}R=M+2|0}else if((H|0)==32){R=G}else{K=53}}while(0);if((K|0)==53){R=M}do{if((M|0)==(q|0)){S=q;T=0;U=u;K=59}else{H=TB(O<<1)|0;if((H|0)!=0){S=M;T=H;U=H;K=59;break}t=0;Ma(5);H=t;t=0;if(H&1){V=0;K=58;break}S=c[s>>2]|0;T=0;U=0;K=59}}while(0);do{if((K|0)==59){t=0;na(42,x|0,f|0);s=t;t=0;if(s&1){V=T;K=58;break}t=0;Aa(43,S|0,R|0,G|0,U|0,v|0,w|0,x|0);s=t;t=0;if(s&1){s=Kb(-1,-1)|0;M=I;Ks(c[x>>2]|0)|0;W=s;X=M;Y=T;break}Ks(c[x>>2]|0)|0;M=e;c[z>>2]=c[M>>2];s=c[v>>2]|0;O=c[w>>2]|0;t=0;u=l;q=z;c[u+0>>2]=c[q+0>>2];Aa(40,y|0,l|0,U|0,s|0,O|0,f|0,g|0);O=t;t=0;if(O&1){V=T;K=58;break}O=c[y>>2]|0;c[M>>2]=O;c[b>>2]=O;if((T|0)!=0){UB(T)}if((N|0)==0){i=d;return}UB(N);i=d;return}}while(0);if((K|0)==58){K=Kb(-1,-1)|0;W=K;X=I;Y=V}if((Y|0)!=0){UB(Y)}if((N|0)==0){P=W;Q=X;Wb(P|0)}UB(N);P=W;Q=X;Wb(P|0)}function xw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;d=i;i=i+16|0;j=d;k=d+8|0;l=i;i=i+16|0;m=i;i=i+8|0;n=i;i=i+24|0;o=i;i=i+40|0;p=i;i=i+8|0;q=i;i=i+8|0;r=m;a[r+0|0]=a[20160|0]|0;a[r+1|0]=a[20161|0]|0;a[r+2|0]=a[20162|0]|0;a[r+3|0]=a[20163|0]|0;a[r+4|0]=a[20164|0]|0;a[r+5|0]=a[20165|0]|0;m=n;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;s=sa(33,2147483647,21264,0)|0;u=t;t=0;if(u&1){u=Kb(-1,-1)|0;rc(21256);Wb(u|0)}else{c[5312]=s;Nb(21256);break}}}while(0);s=c[5312]|0;c[k>>2]=h;h=ow(m,20,s,r,k)|0;k=n+h|0;r=c[f+4>>2]&176;do{if((r|0)==16){s=a[m]|0;if(s<<24>>24==43|s<<24>>24==45){v=n+1|0;break}if(!((h|0)>1&s<<24>>24==48)){w=12;break}s=a[n+1|0]|0;if(!(s<<24>>24==88|s<<24>>24==120)){w=12;break}v=n+2|0}else if((r|0)==32){v=k}else{w=12}}while(0);if((w|0)==12){v=m}w=o;Ot(p,f);r=p;p=c[r>>2]|0;do{if(!((c[5342]|0)==-1)){c[l>>2]=21368;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21368,l|0,280);s=t;t=0;if(!(s&1)){break}x=Kb(-1,-1)|0;y=I;z=c[r>>2]|0;A=z;Ks(A)|0;Wb(x|0)}}while(0);l=(c[21372>>2]|0)+ -1|0;s=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-s>>2>>>0>l>>>0){u=c[s+(l<<2)>>2]|0;if((u|0)==0){break}Ks(c[r>>2]|0)|0;ue[c[(c[u>>2]|0)+32>>2]&31](u,m,k,w)|0;u=o+h|0;if((v|0)==(k|0)){B=u;C=e;D=c[C>>2]|0;E=q;c[E>>2]=D;F=j;G=j;H=q;c[G+0>>2]=c[H+0>>2];af(b,j,w,B,u,f,g);J=j;i=d;return}B=o+(v-n)|0;C=e;D=c[C>>2]|0;E=q;c[E>>2]=D;F=j;G=j;H=q;c[G+0>>2]=c[H+0>>2];af(b,j,w,B,u,f,g);J=j;i=d;return}}while(0);d=xc(4)|0;wB(d);t=0;La(13,d|0,29328,218);d=t;t=0;if(d&1){x=Kb(-1,-1)|0;y=I;z=c[r>>2]|0;A=z;Ks(A)|0;Wb(x|0)}}function yw(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function zw(a){a=a|0;i=i;return}



function wy(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;u=n+72|0;v=n+88|0;w=n+104|0;x=n+112|0;y=n+128|0;z=n+144|0;A=n+160|0;if(b){b=c[d>>2]|0;if(!((c[5232]|0)==-1)){c[p>>2]=20928;c[p+4>>2]=279;c[p+8>>2]=0;et(20928,p,280)}p=(c[20932>>2]|0)+ -1|0;B=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-B>>2>>>0>p>>>0)){C=xc(4)|0;D=C;wB(D);Md(C|0,29328,218)}b=c[B+(p<<2)>>2]|0;if((b|0)==0){C=xc(4)|0;D=C;wB(D);Md(C|0,29328,218)}C=b;_d[c[(c[b>>2]|0)+44>>2]&255](q,C);D=e;p=c[q>>2]|0;a[D]=p;a[D+1|0]=p>>8;a[D+2|0]=p>>16;a[D+3|0]=p>>24;p=b;_d[c[(c[p>>2]|0)+32>>2]&255](r,C);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;Xe(q)}q=r;c[D+0>>2]=c[q+0>>2];c[D+4>>2]=c[q+4>>2];c[D+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Dt(r);_d[c[(c[p>>2]|0)+28>>2]&255](s,C);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}t=0;na(134,k|0,0);q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;Xe(q)}q=s;c[r+0>>2]=c[q+0>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Dt(s);s=b;q=$d[c[(c[s>>2]|0)+12>>2]&127](C)|0;c[f>>2]=q;q=$d[c[(c[s>>2]|0)+16>>2]&127](C)|0;c[g>>2]=q;_d[c[(c[b>>2]|0)+20>>2]&255](u,C);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}t=0;na(45,h|0,0);q=t;t=0;if(q&1){q=Kb(-1,-1,0)|0;Xe(q)}q=u;c[b+0>>2]=c[q+0>>2];c[b+4>>2]=c[q+4>>2];c[b+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;lt(u);_d[c[(c[p>>2]|0)+24>>2]&255](v,C);p=j;if((a[p]&1)==0){c[j+4>>2]=0;a[p]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}t=0;na(134,j|0,0);u=t;t=0;if(u&1){u=Kb(-1,-1,0)|0;Xe(u)}u=v;c[p+0>>2]=c[u+0>>2];c[p+4>>2]=c[u+4>>2];c[p+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Dt(v);E=$d[c[(c[s>>2]|0)+36>>2]&127](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[5216]|0)==-1)){c[o>>2]=20864;c[o+4>>2]=279;c[o+8>>2]=0;et(20864,o,280)}o=(c[20868>>2]|0)+ -1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=xc(4)|0;G=F;wB(G);Md(F|0,29328,218)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=xc(4)|0;G=F;wB(G);Md(F|0,29328,218)}F=C;_d[c[(c[C>>2]|0)+44>>2]&255](w,F);G=e;e=c[w>>2]|0;a[G]=e;a[G+1|0]=e>>8;a[G+2|0]=e>>16;a[G+3|0]=e>>24;e=C;_d[c[(c[e>>2]|0)+32>>2]&255](x,F);G=l;if((a[G]&1)==0){c[l+4>>2]=0;a[G]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);l=t;t=0;if(l&1){l=Kb(-1,-1,0)|0;Xe(l)}l=x;c[G+0>>2]=c[l+0>>2];c[G+4>>2]=c[l+4>>2];c[G+8>>2]=c[l+8>>2];c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;Dt(x);_d[c[(c[e>>2]|0)+28>>2]&255](y,F);x=k;if((a[x]&1)==0){c[k+4>>2]=0;a[x]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}t=0;na(134,k|0,0);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}k=y;c[x+0>>2]=c[k+0>>2];c[x+4>>2]=c[k+4>>2];c[x+8>>2]=c[k+8>>2];c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;Dt(y);y=C;k=$d[c[(c[y>>2]|0)+12>>2]&127](F)|0;c[f>>2]=k;k=$d[c[(c[y>>2]|0)+16>>2]&127](F)|0;c[g>>2]=k;_d[c[(c[C>>2]|0)+20>>2]&255](z,F);C=h;if((a[C]&1)==0){a[h+1|0]=0;a[C]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}t=0;na(45,h|0,0);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}h=z;c[C+0>>2]=c[h+0>>2];c[C+4>>2]=c[h+4>>2];c[C+8>>2]=c[h+8>>2];c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;lt(z);_d[c[(c[e>>2]|0)+24>>2]&255](A,F);e=j;if((a[e]&1)==0){c[j+4>>2]=0;a[e]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}t=0;na(134,j|0,0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}j=A;c[e+0>>2]=c[j+0>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;Dt(A);E=$d[c[(c[y>>2]|0)+36>>2]&127](F)|0;c[m>>2]=E;i=n;return}}function xy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function yy(a){a=a|0;i=i;return}function zy(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,oa=0,pa=0,qa=0,ra=0;d=i;i=i+16|0;m=d;n=d+8|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+104|0;r=i;i=i+8|0;s=i;i=i+104|0;u=i;i=i+8|0;v=i;i=i+8|0;w=v;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+16|0;A=i;i=i+16|0;B=i;i=i+16|0;C=i;i=i+8|0;D=i;i=i+104|0;E=i;i=i+8|0;F=i;i=i+8|0;G=i;i=i+8|0;H=q;c[r>>2]=H;q=s;s=o;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];s=Gc(H|0,100,21112,o|0)|0;a:do{if(s>>>0>99){do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;o=sa(33,2147483647,21264,0)|0;H=t;t=0;if(H&1){H=Kb(-1,-1)|0;J=I;rc(21256);K=0;L=0;M=J;N=H;O=12;break a}else{c[5312]=o;Nb(21256);break}}}while(0);o=c[5312]|0;t=0;H=n;h[k>>3]=l;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];H=Ja(18,r|0,o|0,21112,n|0)|0;o=t;t=0;if(o&1){P=0;Q=0;O=11;break}o=c[r>>2]|0;if((o|0)==0){t=0;Ma(5);J=t;t=0;if(J&1){P=0;Q=0;O=11;break}R=c[r>>2]|0}else{R=o}o=TB(H)|0;if((o|0)!=0){S=R;T=o;U=o;V=H;O=15;break}t=0;Ma(5);o=t;t=0;if(o&1){P=R;Q=0;O=11}else{S=R;T=0;U=0;V=H;O=15}}else{S=0;T=0;U=q;V=s;O=15}}while(0);do{if((O|0)==15){t=0;na(42,u|0,g|0);s=t;t=0;if(s&1){P=S;Q=T;O=11;break}s=u;q=c[s>>2]|0;if((c[5342]|0)==-1){O=18}else{c[p>>2]=21368;c[p+4>>2]=279;c[p+8>>2]=0;t=0;La(55,21368,p|0,280);R=t;t=0;if(R&1){O=45}else{O=18}}b:do{if((O|0)==18){R=(c[21372>>2]|0)+ -1|0;n=c[q+8>>2]|0;do{if((c[q+12>>2]|0)-n>>2>>>0>R>>>0){H=c[n+(R<<2)>>2]|0;if((H|0)==0){break}o=H;J=c[r>>2]|0;t=0;Ja(c[(c[H>>2]|0)+32>>2]|0,o|0,J|0,J+V|0,U|0)|0;J=t;t=0;if(J&1){O=45;break b}if((V|0)==0){W=0}else{W=(a[c[r>>2]|0]|0)==45}c[v>>2]=0;J=z;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;J=A;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;H=B;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;t=0;Da(3,f|0,W|0,u|0,w|0,x|0,y|0,z|0,A|0,B|0,C|0);X=t;t=0;c:do{if(X&1){Y=Kb(-1,-1)|0;Z=Y;_=I}else{Y=D;$=c[C>>2]|0;if((V|0)>($|0)){aa=a[H]|0;if((aa&1)==0){ba=(aa&255)>>>1}else{ba=c[B+4>>2]|0}aa=a[J]|0;if((aa&1)==0){ca=(aa&255)>>>1}else{ca=c[A+4>>2]|0}da=ba+(V-$<<1|1)+ca|0}else{aa=a[H]|0;if((aa&1)==0){ea=(aa&255)>>>1}else{ea=c[B+4>>2]|0}aa=a[J]|0;if((aa&1)==0){fa=(aa&255)>>>1}else{fa=c[A+4>>2]|0}da=ea+2+fa|0}aa=da+$|0;do{if(aa>>>0>100){ga=TB(aa)|0;if((ga|0)!=0){ha=ga;ia=ga;break}t=0;Ma(5);ga=t;t=0;if(!(ga&1)){ha=0;ia=0;break}ga=Kb(-1,-1)|0;Z=ga;_=I;break c}else{ha=0;ia=Y}}while(0);t=0;ta(1,ia|0,E|0,F|0,c[g+4>>2]|0,U|0,U+V|0,o|0,W|0,w|0,a[x]|0,a[y]|0,z|0,A|0,B|0,$|0);Y=t;t=0;do{if(!(Y&1)){c[G>>2]=c[e>>2];aa=c[E>>2]|0;ga=c[F>>2]|0;t=0;ja=m;ka=G;c[ja+0>>2]=c[ka+0>>2];Aa(40,b|0,m|0,ia|0,aa|0,ga|0,g|0,j|0);ga=t;t=0;if(ga&1){break}if((ha|0)!=0){UB(ha)}lt(B);lt(A);lt(z);Ks(c[s>>2]|0)|0;if((T|0)!=0){UB(T)}if((S|0)==0){i=d;return}UB(S);i=d;return}}while(0);Y=Kb(-1,-1)|0;$=I;if((ha|0)==0){Z=Y;_=$;break}UB(ha);Z=Y;_=$}}while(0);lt(B);lt(A);lt(z);la=Z;ma=_;break b}}while(0);R=xc(4)|0;wB(R);t=0;La(13,R|0,29328,218);R=t;t=0;if(R&1){O=45;break}}}while(0);if((O|0)==45){q=Kb(-1,-1)|0;la=q;ma=I}Ks(c[s>>2]|0)|0;oa=la;pa=ma;qa=S;ra=T}}while(0);if((O|0)==11){T=Kb(-1,-1)|0;K=P;L=Q;M=I;N=T;O=12}if((O|0)==12){oa=N;pa=M;qa=K;ra=L}if((ra|0)!=0){UB(ra)}if((qa|0)==0){Wb(oa|0)}UB(qa);Wb(oa|0)}function Ay(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n;p=n+16|0;q=n+32|0;r=q;s=i;i=i+16|0;u=i;i=i+8|0;v=u;w=i;i=i+16|0;x=i;i=i+16|0;y=i;i=i+16|0;z=i;i=i+8|0;A=z;B=i;i=i+16|0;C=i;i=i+8|0;D=C;E=i;i=i+16|0;F=i;i=i+16|0;G=i;i=i+16|0;H=c[e>>2]|0;if(b){if(!((c[5200]|0)==-1)){c[p>>2]=20800;c[p+4>>2]=279;c[p+8>>2]=0;et(20800,p,280)}p=(c[20804>>2]|0)+ -1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=xc(4)|0;J=I;wB(J);Md(I|0,29328,218)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=xc(4)|0;J=I;wB(J);Md(I|0,29328,218)}I=e;J=c[e>>2]|0;do{if(d){_d[c[J+44>>2]&255](r,I);p=f;b=c[q>>2]|0;a[p]=b;a[p+1|0]=b>>8;a[p+2|0]=b>>16;a[p+3|0]=b>>24;_d[c[(c[e>>2]|0)+32>>2]&255](s,I);b=l;if((a[b]&1)==0){a[l+1|0]=0;a[b]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{p=s;c[b+0>>2]=c[p+0>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;lt(s);break}}else{_d[c[J+40>>2]&255](v,I);p=f;b=c[u>>2]|0;a[p]=b;a[p+1|0]=b>>8;a[p+2|0]=b>>16;a[p+3|0]=b>>24;_d[c[(c[e>>2]|0)+28>>2]&255](w,I);b=l;if((a[b]&1)==0){a[l+1|0]=0;a[b]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{p=w;c[b+0>>2]=c[p+0>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;lt(w);break}}}while(0);w=e;u=$d[c[(c[w>>2]|0)+12>>2]&127](I)|0;a[g]=u;u=$d[c[(c[w>>2]|0)+16>>2]&127](I)|0;a[h]=u;u=e;_d[c[(c[u>>2]|0)+20>>2]&255](x,I);w=j;if((a[w]&1)==0){a[j+1|0]=0;a[w]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);v=t;t=0;if(v&1){v=Kb(-1,-1,0)|0;Xe(v)}v=x;c[w+0>>2]=c[v+0>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;lt(x);_d[c[(c[u>>2]|0)+24>>2]&255](y,I);u=k;if((a[u]&1)==0){a[k+1|0]=0;a[u]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}t=0;na(45,k|0,0);x=t;t=0;if(x&1){x=Kb(-1,-1,0)|0;Xe(x)}x=y;c[u+0>>2]=c[x+0>>2];c[u+4>>2]=c[x+4>>2];c[u+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;lt(y);K=$d[c[(c[e>>2]|0)+36>>2]&127](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[5184]|0)==-1)){c[o>>2]=20736;c[o+4>>2]=279;c[o+8>>2]=0;et(20736,o,280)}o=(c[20740>>2]|0)+ -1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=xc(4)|0;M=L;wB(M);Md(L|0,29328,218)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=xc(4)|0;M=L;wB(M);Md(L|0,29328,218)}L=H;M=c[H>>2]|0;do{if(d){_d[c[M+44>>2]&255](A,L);o=f;I=c[z>>2]|0;a[o]=I;a[o+1|0]=I>>8;a[o+2|0]=I>>16;a[o+3|0]=I>>24;_d[c[(c[H>>2]|0)+32>>2]&255](B,L);I=l;if((a[I]&1)==0){a[l+1|0]=0;a[I]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{o=B;c[I+0>>2]=c[o+0>>2];c[I+4>>2]=c[o+4>>2];c[I+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;lt(B);break}}else{_d[c[M+40>>2]&255](D,L);o=f;I=c[C>>2]|0;a[o]=I;a[o+1|0]=I>>8;a[o+2|0]=I>>16;a[o+3|0]=I>>24;_d[c[(c[H>>2]|0)+28>>2]&255](E,L);I=l;if((a[I]&1)==0){a[l+1|0]=0;a[I]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}t=0;na(45,l|0,0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{o=E;c[I+0>>2]=c[o+0>>2];c[I+4>>2]=c[o+4>>2];c[I+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;lt(E);break}}}while(0);E=H;l=$d[c[(c[E>>2]|0)+12>>2]&127](L)|0;a[g]=l;l=$d[c[(c[E>>2]|0)+16>>2]&127](L)|0;a[h]=l;l=H;_d[c[(c[l>>2]|0)+20>>2]&255](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}j=F;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;lt(F);_d[c[(c[l>>2]|0)+24>>2]&255](G,L);l=k;if((a[l]&1)==0){a[k+1|0]=0;a[l]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}t=0;na(45,k|0,0);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}k=G;c[l+0>>2]=c[k+0>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;lt(G);K=$d[c[(c[H>>2]|0)+36>>2]&127](L)|0;c[m>>2]=K;i=n;return}}function By(d,e,f,g,h,j,k,l,m,n,o,p,q,r,s){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;t=i;c[f>>2]=d;u=k;v=r;w=r+1|0;x=r+8|0;y=r+4|0;r=q;z=(g&512|0)==0;A=q+1|0;B=q+8|0;C=q+4|0;q=(s|0)>0;D=p;E=p+1|0;F=p+8|0;G=p+4|0;p=k+8|0;H=0-s|0;I=h;h=0;while(1){a:do{switch(a[m+h|0]|0){case 3:{J=a[v]|0;K=(J&1)==0;if(K){L=(J&255)>>>1}else{L=c[y>>2]|0}if((L|0)==0){M=I;break a}if(K){N=w}else{N=c[x>>2]|0}K=a[N]|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=K;M=I;break};case 4:{K=c[f>>2]|0;J=l?I+1|0:I;b:do{if(J>>>0<j>>>0){O=J;while(1){P=a[O]|0;if(!(P<<24>>24>-1)){Q=O;break b}R=O+1|0;if((b[(c[p>>2]|0)+(P<<24>>24<<1)>>1]&2048)==0){Q=O;break b}if(R>>>0<j>>>0){O=R}else{Q=R;break}}}else{Q=J}}while(0);O=Q;if(q){if(Q>>>0>J>>>0){R=J+(0-O)|0;O=R>>>0<H>>>0?H:R;R=O+s|0;P=K;S=Q;T=s;while(1){U=S+ -1|0;V=a[U]|0;c[f>>2]=P+1;a[P]=V;V=T+ -1|0;W=(V|0)>0;if(!(U>>>0>J>>>0&W)){break}P=c[f>>2]|0;T=V;S=U}S=Q+O|0;if(W){X=S;Y=R;Z=32}else{_=0;$=S;aa=R}}else{X=Q;Y=s;Z=32}if((Z|0)==32){Z=0;_=pe[c[(c[u>>2]|0)+28>>2]&63](k,48)|0;$=X;aa=Y}S=c[f>>2]|0;c[f>>2]=S+1;if((aa|0)>0){T=S;P=aa;while(1){a[T]=_;U=P+ -1|0;V=c[f>>2]|0;c[f>>2]=V+1;if((U|0)>0){P=U;T=V}else{ba=V;break}}}else{ba=S}a[ba]=n;ca=$}else{ca=Q}if((ca|0)==(J|0)){T=pe[c[(c[u>>2]|0)+28>>2]&63](k,48)|0;P=c[f>>2]|0;c[f>>2]=P+1;a[P]=T}else{T=a[D]|0;P=(T&1)==0;if(P){da=(T&255)>>>1}else{da=c[G>>2]|0}if((da|0)==0){ea=ca;fa=-1;ga=0;ha=0}else{if(P){ia=E}else{ia=c[F>>2]|0}ea=ca;fa=a[ia]|0;ga=0;ha=0}while(1){do{if((ha|0)==(fa|0)){P=c[f>>2]|0;c[f>>2]=P+1;a[P]=o;P=ga+1|0;T=a[D]|0;R=(T&1)==0;if(R){ja=(T&255)>>>1}else{ja=c[G>>2]|0}if(!(P>>>0<ja>>>0)){ka=fa;la=P;ma=0;break}if(R){na=E}else{na=c[F>>2]|0}if((a[na+P|0]|0)==127){ka=-1;la=P;ma=0;break}if(R){oa=E}else{oa=c[F>>2]|0}ka=a[oa+P|0]|0;la=P;ma=0}else{ka=fa;la=ga;ma=ha}}while(0);P=ea+ -1|0;R=a[P]|0;T=c[f>>2]|0;c[f>>2]=T+1;a[T]=R;if((P|0)==(J|0)){break}else{ea=P;fa=ka;ga=la;ha=ma+1|0}}}S=c[f>>2]|0;if((K|0)==(S|0)){M=J;break a}P=S+ -1|0;if(P>>>0>K>>>0){pa=K;qa=P}else{M=J;break a}while(1){P=a[pa]|0;a[pa]=a[qa]|0;a[qa]=P;P=pa+1|0;S=qa+ -1|0;if(P>>>0<S>>>0){qa=S;pa=P}else{M=J;break}}break};case 0:{c[e>>2]=c[f>>2];M=I;break};case 1:{c[e>>2]=c[f>>2];J=pe[c[(c[u>>2]|0)+28>>2]&63](k,32)|0;K=c[f>>2]|0;c[f>>2]=K+1;a[K]=J;M=I;break};case 2:{J=a[r]|0;K=(J&1)==0;if(K){ra=(J&255)>>>1}else{ra=c[C>>2]|0}if((ra|0)==0|z){M=I;break a}if(K){sa=A;ta=A;ua=(J&255)>>>1}else{J=c[B>>2]|0;sa=J;ta=J;ua=c[C>>2]|0}J=ta+ua|0;K=c[f>>2]|0;if((sa|0)==(J|0)){va=K}else{P=K;K=sa;while(1){a[P]=a[K]|0;S=K+1|0;R=P+1|0;if((S|0)==(J|0)){va=R;break}else{K=S;P=R}}}c[f>>2]=va;M=I;break};default:{M=I}}}while(0);P=h+1|0;if((P|0)==4){break}else{I=M;h=P}}h=a[v]|0;v=(h&1)==0;if(v){wa=(h&255)>>>1}else{wa=c[y>>2]|0}if(wa>>>0>1){if(v){xa=w;ya=w;za=(h&255)>>>1}else{h=c[x>>2]|0;xa=h;ya=h;za=c[y>>2]|0}y=xa+1|0;xa=ya+za|0;za=c[f>>2]|0;if((y|0)==(xa|0)){Aa=za}else{ya=za;za=y;while(1){a[ya]=a[za]|0;y=za+1|0;h=ya+1|0;if((y|0)==(xa|0)){Aa=h;break}else{za=y;ya=h}}}c[f>>2]=Aa}Aa=g&176;if((Aa|0)==32){c[e>>2]=c[f>>2];i=t;return}else if((Aa|0)==16){i=t;return}else{c[e>>2]=d;i=t;return}}function Cy(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;d=i;i=i+40|0;k=d;l=d+8|0;m=d+24|0;n=d+32|0;o=n;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+16|0;s=i;i=i+16|0;u=i;i=i+16|0;v=i;i=i+8|0;w=i;i=i+104|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;Ot(m,g);A=m;B=c[A>>2]|0;if((c[5342]|0)==-1){C=3}else{c[l>>2]=21368;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21368,l|0,280);l=t;t=0;if(!(l&1)){C=3}}a:do{if((C|0)==3){l=(c[21372>>2]|0)+ -1|0;D=c[B+8>>2]|0;do{if((c[B+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=j;H=a[G]|0;J=(H&1)==0;if(J){K=(H&255)>>>1}else{K=c[j+4>>2]|0}if((K|0)==0){L=0}else{if(J){M=j+1|0}else{M=c[j+8>>2]|0}J=a[M]|0;t=0;H=Ea(c[(c[E>>2]|0)+28>>2]|0,F|0,45)|0;E=t;t=0;if(E&1){break a}L=J<<24>>24==H<<24>>24}c[n>>2]=0;H=r;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;H=s;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;J=u;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;t=0;Da(3,f|0,L|0,m|0,o|0,p|0,q|0,r|0,s|0,u|0,v|0);E=t;t=0;b:do{if(E&1){N=Kb(-1,-1)|0;O=N;P=I}else{N=w;Q=a[G]|0;R=(Q&1)==0;if(R){S=(Q&255)>>>1}else{S=c[j+4>>2]|0}T=c[v>>2]|0;if((S|0)>(T|0)){if(R){U=(Q&255)>>>1}else{U=c[j+4>>2]|0}R=a[J]|0;if((R&1)==0){V=(R&255)>>>1}else{V=c[u+4>>2]|0}R=a[H]|0;if((R&1)==0){W=(R&255)>>>1}else{W=c[s+4>>2]|0}X=V+(U-T<<1|1)+W|0}else{R=a[J]|0;if((R&1)==0){Y=(R&255)>>>1}else{Y=c[u+4>>2]|0}R=a[H]|0;if((R&1)==0){Z=(R&255)>>>1}else{Z=c[s+4>>2]|0}X=Y+2+Z|0}R=X+T|0;do{if(R>>>0>100){_=TB(R)|0;if((_|0)!=0){$=Q;aa=_;ba=_;break}t=0;Ma(5);_=t;t=0;if(_&1){_=Kb(-1,-1)|0;O=_;P=I;break b}else{$=a[G]|0;aa=0;ba=0;break}}else{$=Q;aa=0;ba=N}}while(0);if(($&1)==0){ca=j+1|0;da=($&255)>>>1}else{ca=c[j+8>>2]|0;da=c[j+4>>2]|0}t=0;ta(1,ba|0,x|0,y|0,c[g+4>>2]|0,ca|0,ca+da|0,F|0,L|0,o|0,a[p]|0,a[q]|0,r|0,s|0,u|0,T|0);N=t;t=0;do{if(!(N&1)){c[z>>2]=c[e>>2];Q=c[x>>2]|0;R=c[y>>2]|0;t=0;_=k;ea=z;c[_+0>>2]=c[ea+0>>2];Aa(40,b|0,k|0,ba|0,Q|0,R|0,g|0,h|0);R=t;t=0;if(R&1){break}if((aa|0)==0){lt(u);lt(s);lt(r);fa=c[A>>2]|0;ga=fa;Ks(ga)|0;i=d;return}UB(aa);lt(u);lt(s);lt(r);fa=c[A>>2]|0;ga=fa;Ks(ga)|0;i=d;return}}while(0);N=Kb(-1,-1)|0;T=I;if((aa|0)==0){O=N;P=T;break}UB(aa);O=N;P=T}}while(0);lt(u);lt(s);lt(r);ha=O;ia=P;ja=c[A>>2]|0;ka=ja;Ks(ka)|0;Wb(ha|0)}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){break}}}while(0);P=Kb(-1,-1)|0;ha=P;ia=I;ja=c[A>>2]|0;ka=ja;Ks(ka)|0;Wb(ha|0)}function Dy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Ey(a){a=a|0;i=i;return}function Fy(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,oa=0,pa=0,qa=0,ra=0;d=i;i=i+16|0;m=d;n=d+8|0;o=i;i=i+8|0;p=i;i=i+16|0;q=i;i=i+104|0;r=i;i=i+8|0;s=i;i=i+400|0;u=i;i=i+8|0;v=i;i=i+8|0;w=v;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+16|0;A=i;i=i+16|0;B=i;i=i+16|0;C=i;i=i+8|0;D=i;i=i+400|0;E=i;i=i+8|0;F=i;i=i+8|0;G=i;i=i+8|0;H=q;c[r>>2]=H;q=s;s=o;h[k>>3]=l;c[s>>2]=c[k>>2];c[s+4>>2]=c[k+4>>2];s=Gc(H|0,100,21112,o|0)|0;a:do{if(s>>>0>99){do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;o=sa(33,2147483647,21264,0)|0;H=t;t=0;if(H&1){H=Kb(-1,-1)|0;J=I;rc(21256);K=0;L=0;M=J;N=H;O=12;break a}else{c[5312]=o;Nb(21256);break}}}while(0);o=c[5312]|0;t=0;H=n;h[k>>3]=l;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];H=Ja(18,r|0,o|0,21112,n|0)|0;o=t;t=0;if(o&1){P=0;Q=0;O=11;break}o=c[r>>2]|0;if((o|0)==0){t=0;Ma(5);J=t;t=0;if(J&1){P=0;Q=0;O=11;break}R=c[r>>2]|0}else{R=o}o=TB(H<<2)|0;J=o;if((o|0)!=0){S=R;T=J;U=J;V=H;O=15;break}t=0;Ma(5);J=t;t=0;if(J&1){P=R;Q=0;O=11}else{S=R;T=0;U=0;V=H;O=15}}else{S=0;T=0;U=q;V=s;O=15}}while(0);do{if((O|0)==15){t=0;na(42,u|0,g|0);s=t;t=0;if(s&1){P=S;Q=T;O=11;break}s=u;q=c[s>>2]|0;if((c[5340]|0)==-1){O=18}else{c[p>>2]=21360;c[p+4>>2]=279;c[p+8>>2]=0;t=0;La(55,21360,p|0,280);R=t;t=0;if(R&1){O=45}else{O=18}}b:do{if((O|0)==18){R=(c[21364>>2]|0)+ -1|0;n=c[q+8>>2]|0;do{if((c[q+12>>2]|0)-n>>2>>>0>R>>>0){H=c[n+(R<<2)>>2]|0;if((H|0)==0){break}J=H;o=c[r>>2]|0;t=0;Ja(c[(c[H>>2]|0)+48>>2]|0,J|0,o|0,o+V|0,U|0)|0;o=t;t=0;if(o&1){O=45;break b}if((V|0)==0){W=0}else{W=(a[c[r>>2]|0]|0)==45}c[v>>2]=0;o=z;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;o=A;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;H=B;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;t=0;Da(4,f|0,W|0,u|0,w|0,x|0,y|0,z|0,A|0,B|0,C|0);X=t;t=0;c:do{if(X&1){Y=Kb(-1,-1)|0;Z=Y;_=I}else{Y=D;$=c[C>>2]|0;if((V|0)>($|0)){aa=a[H]|0;if((aa&1)==0){ba=(aa&255)>>>1}else{ba=c[B+4>>2]|0}aa=a[o]|0;if((aa&1)==0){ca=(aa&255)>>>1}else{ca=c[A+4>>2]|0}da=ba+(V-$<<1|1)+ca|0}else{aa=a[H]|0;if((aa&1)==0){ea=(aa&255)>>>1}else{ea=c[B+4>>2]|0}aa=a[o]|0;if((aa&1)==0){fa=(aa&255)>>>1}else{fa=c[A+4>>2]|0}da=ea+2+fa|0}aa=da+$|0;do{if(aa>>>0>100){ga=TB(aa<<2)|0;ha=ga;if((ga|0)!=0){ia=ha;ja=ha;break}t=0;Ma(5);ha=t;t=0;if(!(ha&1)){ia=0;ja=0;break}ha=Kb(-1,-1)|0;Z=ha;_=I;break c}else{ia=0;ja=Y}}while(0);t=0;ta(2,ja|0,E|0,F|0,c[g+4>>2]|0,U|0,U+(V<<2)|0,J|0,W|0,w|0,c[x>>2]|0,c[y>>2]|0,z|0,A|0,B|0,$|0);Y=t;t=0;do{if(!(Y&1)){c[G>>2]=c[e>>2];aa=c[E>>2]|0;ha=c[F>>2]|0;t=0;ga=m;ka=G;c[ga+0>>2]=c[ka+0>>2];Aa(46,b|0,m|0,ja|0,aa|0,ha|0,g|0,j|0);ha=t;t=0;if(ha&1){break}if((ia|0)!=0){UB(ia)}Dt(B);Dt(A);lt(z);Ks(c[s>>2]|0)|0;if((T|0)!=0){UB(T)}if((S|0)==0){i=d;return}UB(S);i=d;return}}while(0);Y=Kb(-1,-1)|0;$=I;if((ia|0)==0){Z=Y;_=$;break}UB(ia);Z=Y;_=$}}while(0);Dt(B);Dt(A);lt(z);la=Z;ma=_;break b}}while(0);R=xc(4)|0;wB(R);t=0;La(13,R|0,29328,218);R=t;t=0;if(R&1){O=45;break}}}while(0);if((O|0)==45){q=Kb(-1,-1)|0;la=q;ma=I}Ks(c[s>>2]|0)|0;oa=la;pa=ma;qa=S;ra=T}}while(0);if((O|0)==11){T=Kb(-1,-1)|0;K=P;L=Q;M=I;N=T;O=12}if((O|0)==12){oa=N;pa=M;qa=K;ra=L}if((ra|0)!=0){UB(ra)}if((qa|0)==0){Wb(oa|0)}UB(qa);Wb(oa|0)}function Gy(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n;p=n+16|0;q=n+32|0;r=q;s=i;i=i+16|0;u=i;i=i+8|0;v=u;w=i;i=i+16|0;x=i;i=i+16|0;y=i;i=i+16|0;z=i;i=i+8|0;A=z;B=i;i=i+16|0;C=i;i=i+8|0;D=C;E=i;i=i+16|0;F=i;i=i+16|0;G=i;i=i+16|0;H=c[e>>2]|0;if(b){if(!((c[5232]|0)==-1)){c[p>>2]=20928;c[p+4>>2]=279;c[p+8>>2]=0;et(20928,p,280)}p=(c[20932>>2]|0)+ -1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=xc(4)|0;J=I;wB(J);Md(I|0,29328,218)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=xc(4)|0;J=I;wB(J);Md(I|0,29328,218)}I=e;J=c[e>>2]|0;do{if(d){_d[c[J+44>>2]&255](r,I);p=f;b=c[q>>2]|0;a[p]=b;a[p+1|0]=b>>8;a[p+2|0]=b>>16;a[p+3|0]=b>>24;_d[c[(c[e>>2]|0)+32>>2]&255](s,I);b=l;if((a[b]&1)==0){c[l+4>>2]=0;a[b]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{p=s;c[b+0>>2]=c[p+0>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Dt(s);break}}else{_d[c[J+40>>2]&255](v,I);p=f;b=c[u>>2]|0;a[p]=b;a[p+1|0]=b>>8;a[p+2|0]=b>>16;a[p+3|0]=b>>24;_d[c[(c[e>>2]|0)+28>>2]&255](w,I);b=l;if((a[b]&1)==0){c[l+4>>2]=0;a[b]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);p=t;t=0;if(p&1){p=Kb(-1,-1,0)|0;Xe(p)}else{p=w;c[b+0>>2]=c[p+0>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Dt(w);break}}}while(0);w=e;u=$d[c[(c[w>>2]|0)+12>>2]&127](I)|0;c[g>>2]=u;u=$d[c[(c[w>>2]|0)+16>>2]&127](I)|0;c[h>>2]=u;_d[c[(c[e>>2]|0)+20>>2]&255](x,I);u=j;if((a[u]&1)==0){a[j+1|0]=0;a[u]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);v=t;t=0;if(v&1){v=Kb(-1,-1,0)|0;Xe(v)}v=x;c[u+0>>2]=c[v+0>>2];c[u+4>>2]=c[v+4>>2];c[u+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;lt(x);_d[c[(c[e>>2]|0)+24>>2]&255](y,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}t=0;na(134,k|0,0);x=t;t=0;if(x&1){x=Kb(-1,-1,0)|0;Xe(x)}x=y;c[e+0>>2]=c[x+0>>2];c[e+4>>2]=c[x+4>>2];c[e+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Dt(y);K=$d[c[(c[w>>2]|0)+36>>2]&127](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[5216]|0)==-1)){c[o>>2]=20864;c[o+4>>2]=279;c[o+8>>2]=0;et(20864,o,280)}o=(c[20868>>2]|0)+ -1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=xc(4)|0;M=L;wB(M);Md(L|0,29328,218)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=xc(4)|0;M=L;wB(M);Md(L|0,29328,218)}L=H;M=c[H>>2]|0;do{if(d){_d[c[M+44>>2]&255](A,L);o=f;I=c[z>>2]|0;a[o]=I;a[o+1|0]=I>>8;a[o+2|0]=I>>16;a[o+3|0]=I>>24;_d[c[(c[H>>2]|0)+32>>2]&255](B,L);I=l;if((a[I]&1)==0){c[l+4>>2]=0;a[I]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{o=B;c[I+0>>2]=c[o+0>>2];c[I+4>>2]=c[o+4>>2];c[I+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Dt(B);break}}else{_d[c[M+40>>2]&255](D,L);o=f;I=c[C>>2]|0;a[o]=I;a[o+1|0]=I>>8;a[o+2|0]=I>>16;a[o+3|0]=I>>24;_d[c[(c[H>>2]|0)+28>>2]&255](E,L);I=l;if((a[I]&1)==0){c[l+4>>2]=0;a[I]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}t=0;na(134,l|0,0);o=t;t=0;if(o&1){o=Kb(-1,-1,0)|0;Xe(o)}else{o=E;c[I+0>>2]=c[o+0>>2];c[I+4>>2]=c[o+4>>2];c[I+8>>2]=c[o+8>>2];c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Dt(E);break}}}while(0);E=H;l=$d[c[(c[E>>2]|0)+12>>2]&127](L)|0;c[g>>2]=l;l=$d[c[(c[E>>2]|0)+16>>2]&127](L)|0;c[h>>2]=l;_d[c[(c[H>>2]|0)+20>>2]&255](F,L);l=j;if((a[l]&1)==0){a[j+1|0]=0;a[l]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}t=0;na(45,j|0,0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}j=F;c[l+0>>2]=c[j+0>>2];c[l+4>>2]=c[j+4>>2];c[l+8>>2]=c[j+8>>2];c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;lt(F);_d[c[(c[H>>2]|0)+24>>2]&255](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}t=0;na(134,k|0,0);k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}k=G;c[H+0>>2]=c[k+0>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;Dt(G);K=$d[c[(c[E>>2]|0)+36>>2]&127](L)|0;c[m>>2]=K;i=n;return}}function Hy(b,d,e,f,g,h,j,k,l,m,n,o,p,q,r){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0;s=i;c[e>>2]=b;t=j;u=q;v=q+4|0;w=q+8|0;q=p;x=(f&512|0)==0;y=p+4|0;z=p+8|0;p=(r|0)>0;A=o;B=o+1|0;C=o+8|0;D=o+4|0;o=j;E=g;g=0;while(1){a:do{switch(a[l+g|0]|0){case 1:{c[d>>2]=c[e>>2];F=pe[c[(c[t>>2]|0)+44>>2]&63](j,32)|0;G=c[e>>2]|0;c[e>>2]=G+4;c[G>>2]=F;H=E;break};case 3:{F=a[u]|0;G=(F&1)==0;if(G){I=(F&255)>>>1}else{I=c[v>>2]|0}if((I|0)==0){H=E;break a}if(G){J=v}else{J=c[w>>2]|0}G=c[J>>2]|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=G;H=E;break};case 4:{G=c[e>>2]|0;F=k?E+4|0:E;b:do{if(F>>>0<h>>>0){K=F;while(1){L=K+4|0;if(!(de[c[(c[o>>2]|0)+12>>2]&63](j,2048,c[K>>2]|0)|0)){M=K;break b}if(L>>>0<h>>>0){K=L}else{M=L;break}}}else{M=F}}while(0);if(p){do{if(M>>>0>F>>>0){K=c[e>>2]|0;L=M;N=r;while(1){O=L+ -4|0;P=K+4|0;c[K>>2]=c[O>>2];Q=N+ -1|0;R=(Q|0)>0;if(O>>>0>F>>>0&R){N=Q;L=O;K=P}else{break}}c[e>>2]=P;if(R){S=O;T=Q;U=34;break}K=c[e>>2]|0;c[e>>2]=K+4;V=K;W=O}else{S=M;T=r;U=34}}while(0);do{if((U|0)==34){U=0;K=pe[c[(c[t>>2]|0)+44>>2]&63](j,48)|0;L=c[e>>2]|0;N=L+4|0;c[e>>2]=N;if((T|0)>0){X=N;Y=L;Z=T}else{V=L;W=S;break}while(1){c[Y>>2]=K;N=Z+ -1|0;if((N|0)>0){Z=N;Y=X;X=X+4|0}else{break}}c[e>>2]=L+(T+1<<2);V=L+(T<<2)|0;W=S}}while(0);c[V>>2]=m;_=W}else{_=M}if((_|0)==(F|0)){K=pe[c[(c[t>>2]|0)+44>>2]&63](j,48)|0;N=c[e>>2]|0;$=N+4|0;c[e>>2]=$;c[N>>2]=K;aa=$}else{$=a[A]|0;K=($&1)==0;if(K){ba=($&255)>>>1}else{ba=c[D>>2]|0}if((ba|0)==0){ca=_;da=-1;ea=0;fa=0}else{if(K){ga=B}else{ga=c[C>>2]|0}ca=_;da=a[ga]|0;ea=0;fa=0}while(1){K=c[e>>2]|0;do{if((fa|0)==(da|0)){$=K+4|0;c[e>>2]=$;c[K>>2]=n;N=ea+1|0;ha=a[A]|0;ia=(ha&1)==0;if(ia){ja=(ha&255)>>>1}else{ja=c[D>>2]|0}if(!(N>>>0<ja>>>0)){ka=$;la=da;ma=N;na=0;break}if(ia){oa=B}else{oa=c[C>>2]|0}if((a[oa+N|0]|0)==127){ka=$;la=-1;ma=N;na=0;break}if(ia){pa=B}else{pa=c[C>>2]|0}ka=$;la=a[pa+N|0]|0;ma=N;na=0}else{ka=K;la=da;ma=ea;na=fa}}while(0);K=ca+ -4|0;L=c[K>>2]|0;N=ka+4|0;c[e>>2]=N;c[ka>>2]=L;if((K|0)==(F|0)){aa=N;break}else{ca=K;da=la;ea=ma;fa=na+1|0}}}if((G|0)==(aa|0)){H=F;break a}K=aa+ -4|0;if(K>>>0>G>>>0){qa=G;ra=K}else{H=F;break a}while(1){K=c[qa>>2]|0;c[qa>>2]=c[ra>>2];c[ra>>2]=K;K=qa+4|0;N=ra+ -4|0;if(K>>>0<N>>>0){ra=N;qa=K}else{H=F;break}}break};case 0:{c[d>>2]=c[e>>2];H=E;break};case 2:{F=a[q]|0;G=(F&1)==0;if(G){sa=(F&255)>>>1}else{sa=c[y>>2]|0}if((sa|0)==0|x){H=E;break a}if(G){ta=y;ua=y;va=(F&255)>>>1}else{F=c[z>>2]|0;ta=F;ua=F;va=c[y>>2]|0}F=ua+(va<<2)|0;G=c[e>>2]|0;if((ta|0)==(F|0)){wa=G}else{K=(ua+(va+ -1<<2)+(0-ta)|0)>>>2;N=G;L=ta;while(1){c[N>>2]=c[L>>2];$=L+4|0;if(($|0)==(F|0)){break}N=N+4|0;L=$}wa=G+(K+1<<2)|0}c[e>>2]=wa;H=E;break};default:{H=E}}}while(0);L=g+1|0;if((L|0)==4){break}else{E=H;g=L}}g=a[u]|0;u=(g&1)==0;if(u){xa=(g&255)>>>1}else{xa=c[v>>2]|0}if(xa>>>0>1){if(u){ya=v;za=v;Aa=(g&255)>>>1}else{g=c[w>>2]|0;ya=g;za=g;Aa=c[v>>2]|0}v=ya+4|0;ya=za+(Aa<<2)|0;g=c[e>>2]|0;if((v|0)==(ya|0)){Ba=g}else{w=(za+(Aa+ -1<<2)+(0-v)|0)>>>2;Aa=g;za=v;while(1){c[Aa>>2]=c[za>>2];v=za+4|0;if((v|0)==(ya|0)){break}else{za=v;Aa=Aa+4|0}}Ba=g+(w+1<<2)|0}c[e>>2]=Ba}Ba=f&176;if((Ba|0)==16){i=s;return}else if((Ba|0)==32){c[d>>2]=c[e>>2];i=s;return}else{c[d>>2]=b;i=s;return}}function Iy(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;d=i;i=i+40|0;k=d;l=d+8|0;m=d+24|0;n=d+32|0;o=n;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+16|0;s=i;i=i+16|0;u=i;i=i+16|0;v=i;i=i+8|0;w=i;i=i+400|0;x=i;i=i+8|0;y=i;i=i+8|0;z=i;i=i+8|0;Ot(m,g);A=m;B=c[A>>2]|0;if((c[5340]|0)==-1){C=3}else{c[l>>2]=21360;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21360,l|0,280);l=t;t=0;if(!(l&1)){C=3}}a:do{if((C|0)==3){l=(c[21364>>2]|0)+ -1|0;D=c[B+8>>2]|0;do{if((c[B+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=j;H=a[G]|0;J=(H&1)==0;if(J){K=(H&255)>>>1}else{K=c[j+4>>2]|0}if((K|0)==0){L=0}else{if(J){M=j+4|0}else{M=c[j+8>>2]|0}J=c[M>>2]|0;t=0;H=Ea(c[(c[E>>2]|0)+44>>2]|0,F|0,45)|0;E=t;t=0;if(E&1){break a}L=(J|0)==(H|0)}c[n>>2]=0;H=r;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;H=s;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;J=u;c[J+0>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;t=0;Da(4,f|0,L|0,m|0,o|0,p|0,q|0,r|0,s|0,u|0,v|0);E=t;t=0;b:do{if(E&1){N=Kb(-1,-1)|0;O=N;P=I}else{N=w;Q=a[G]|0;R=(Q&1)==0;if(R){S=(Q&255)>>>1}else{S=c[j+4>>2]|0}T=c[v>>2]|0;if((S|0)>(T|0)){if(R){U=(Q&255)>>>1}else{U=c[j+4>>2]|0}R=a[J]|0;if((R&1)==0){V=(R&255)>>>1}else{V=c[u+4>>2]|0}R=a[H]|0;if((R&1)==0){W=(R&255)>>>1}else{W=c[s+4>>2]|0}X=V+(U-T<<1|1)+W|0}else{R=a[J]|0;if((R&1)==0){Y=(R&255)>>>1}else{Y=c[u+4>>2]|0}R=a[H]|0;if((R&1)==0){Z=(R&255)>>>1}else{Z=c[s+4>>2]|0}X=Y+2+Z|0}R=X+T|0;do{if(R>>>0>100){_=TB(R<<2)|0;$=_;if((_|0)!=0){aa=Q;ba=$;ca=$;break}t=0;Ma(5);$=t;t=0;if($&1){$=Kb(-1,-1)|0;O=$;P=I;break b}else{aa=a[G]|0;ba=0;ca=0;break}}else{aa=Q;ba=0;ca=N}}while(0);if((aa&1)==0){da=j+4|0;ea=(aa&255)>>>1}else{da=c[j+8>>2]|0;ea=c[j+4>>2]|0}t=0;ta(2,ca|0,x|0,y|0,c[g+4>>2]|0,da|0,da+(ea<<2)|0,F|0,L|0,o|0,c[p>>2]|0,c[q>>2]|0,r|0,s|0,u|0,T|0);N=t;t=0;do{if(!(N&1)){c[z>>2]=c[e>>2];Q=c[x>>2]|0;R=c[y>>2]|0;t=0;$=k;_=z;c[$+0>>2]=c[_+0>>2];Aa(46,b|0,k|0,ca|0,Q|0,R|0,g|0,h|0);R=t;t=0;if(R&1){break}if((ba|0)==0){Dt(u);Dt(s);lt(r);fa=c[A>>2]|0;ga=fa;Ks(ga)|0;i=d;return}UB(ba);Dt(u);Dt(s);lt(r);fa=c[A>>2]|0;ga=fa;Ks(ga)|0;i=d;return}}while(0);N=Kb(-1,-1)|0;T=I;if((ba|0)==0){O=N;P=T;break}UB(ba);O=N;P=T}}while(0);Dt(u);Dt(s);lt(r);ha=O;ia=P;ja=c[A>>2]|0;ka=ja;Ks(ka)|0;Wb(ha|0)}}while(0);l=xc(4)|0;wB(l);t=0;La(13,l|0,29328,218);l=t;t=0;if(l&1){break}}}while(0);P=Kb(-1,-1)|0;ha=P;ia=I;ja=c[A>>2]|0;ka=ja;Ks(ka)|0;Wb(ha|0)}function Jy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Ky(a){a=a|0;i=i;return}function Ly(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=pc(f|0,1)|0;i=e;return d>>>((d|0)!=(-1|0)|0)|0}function My(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+16|0;j=d;k=j;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;l=a[h]|0;if((l&1)==0){m=h+1|0;n=h+1|0;o=(l&255)>>>1}else{l=c[h+8>>2]|0;m=l;n=l;o=c[h+4>>2]|0}h=m+o|0;do{if(n>>>0<h>>>0){o=n;do{t=0;na(87,j|0,a[o]|0);m=t;t=0;if(m&1){p=12;break}o=o+1|0;}while((o|0)!=(h|0));if((p|0)==12){o=Kb(-1,-1)|0;q=o;r=I;break}o=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){s=o;p=10;break}u=o;v=c[j+8>>2]|0;p=11}else{s=(e|0)==-1?-1:e<<1;p=10}}while(0);if((p|0)==10){u=s;v=j+1|0;p=11}do{if((p|0)==11){t=0;s=Ja(20,u|0,f|0,g|0,v|0)|0;e=t;t=0;if(e&1){e=Kb(-1,-1)|0;q=e;r=I;break}e=b;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;e=sC(s|0)|0;k=s+e|0;if((e|0)>0){w=s}else{lt(j);i=d;return}while(1){t=0;na(87,b|0,a[w]|0);s=t;t=0;if(s&1){break}s=w+1|0;if((s|0)==(k|0)){p=19;break}else{w=s}}if((p|0)==19){lt(j);i=d;return}k=Kb(-1,-1)|0;s=I;lt(b);x=k;y=s;lt(j);Wb(x|0)}}while(0);x=q;y=r;lt(j);Wb(x|0)}function Ny(a,b){a=a|0;b=b|0;a=i;yb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function Oy(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Py(a){a=a|0;i=i;return}function Qy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=pc(f|0,1)|0;i=e;return d>>>((d|0)!=(-1|0)|0)|0}function Ry(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;d=i;i=i+240|0;j=d;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;u=d+232|0;v=r;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[s+4>>2]=0;c[s>>2]=23024;w=a[h]|0;if((w&1)==0){x=h+4|0;y=h+4|0;z=(w&255)>>>1}else{w=c[h+8>>2]|0;x=w;y=w;z=c[h+4>>2]|0}h=x+(z<<2)|0;z=k;x=j;w=j;c[w>>2]=0;c[w+4>>2]=0;a:do{if(y>>>0<h>>>0){w=s;j=s;A=k+32|0;B=y;C=23024|0;b:while(1){c[m>>2]=B;t=0;D=Ha(c[C+12>>2]|0,w|0,x|0,B|0,h|0,m|0,z|0,A|0,l|0)|0;E=t;t=0;if(E&1){F=22;break}E=c[m>>2]|0;if((D|0)==2|(E|0)==(B|0)){F=9;break}if(z>>>0<(c[l>>2]|0)>>>0){D=z;do{t=0;na(87,r|0,a[D]|0);G=t;t=0;if(G&1){F=21;break b}D=D+1|0;}while(D>>>0<(c[l>>2]|0)>>>0);H=c[m>>2]|0}else{H=E}if(!(H>>>0<h>>>0)){break a}B=H;C=c[j>>2]|0}do{if((F|0)==9){t=0;ma(276,22248);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;J=j;K=I;break}}else if((F|0)==21){j=Kb(-1,-1)|0;J=j;K=I}else if((F|0)==22){j=Kb(-1,-1)|0;J=j;K=I}}while(0);L=J;M=K;lt(r);Wb(L|0)}}while(0);if((a[v]&1)==0){N=r+1|0}else{N=c[r+8>>2]|0}t=0;v=Ja(20,((e|0)==-1?-1:e<<1)|0,f|0,g|0,N|0)|0;N=t;t=0;if(N&1){N=Kb(-1,-1)|0;L=N;M=I;lt(r);Wb(L|0)}N=b;c[N+0>>2]=0;c[N+4>>2]=0;c[N+8>>2]=0;c[u+4>>2]=0;c[u>>2]=23128;N=sC(v|0)|0;g=v+N|0;f=n;e=n;c[e>>2]=0;c[e+4>>2]=0;if((N|0)<=0){lt(r);i=d;return}N=u;e=u;u=g;n=o;K=o+128|0;o=v;v=23128|0;c:while(1){c[q>>2]=o;t=0;J=Ha(c[v+16>>2]|0,N|0,f|0,o|0,((u-o|0)>32?o+32|0:g)|0,q|0,n|0,K|0,p|0)|0;H=t;t=0;if(H&1){F=39;break}H=c[q>>2]|0;if((J|0)==2|(H|0)==(o|0)){F=30;break}if(n>>>0<(c[p>>2]|0)>>>0){J=n;do{t=0;na(133,b|0,c[J>>2]|0);h=t;t=0;if(h&1){F=38;break c}J=J+4|0;}while(J>>>0<(c[p>>2]|0)>>>0);O=c[q>>2]|0}else{O=H}if(!(O>>>0<g>>>0)){F=37;break}o=O;v=c[e>>2]|0}do{if((F|0)==30){t=0;ma(276,22248);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;P=e;Q=I;break}}else if((F|0)==37){lt(r);i=d;return}else if((F|0)==38){e=Kb(-1,-1)|0;P=e;Q=I}else if((F|0)==39){e=Kb(-1,-1)|0;P=e;Q=I}}while(0);Dt(b);L=P;M=Q;lt(r);Wb(L|0)}function Sy(a,b){a=a|0;b=b|0;a=i;yb(((b|0)==-1?-1:b<<1)|0)|0;i=a;return}function Ty(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;c[b>>2]=21456;e=b+8|0;b=c[e>>2]|0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;f=sa(33,2147483647,21264,0)|0;g=t;t=0;if(!(g&1)){c[5312]=f;Nb(21256);break}Kb(-1,-1,0)|0;rc(21256);Ta()}}while(0);if((b|0)==(c[5312]|0)){i=d;return}t=0;ma(282,c[e>>2]|0);e=t;t=0;if(!(e&1)){i=d;return}Kb(-1,-1,0)|0;Ta()}function Uy(a){a=a|0;var b=0;a=xc(8)|0;t=0;na(131,a|0,21240);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Jb(a|0);Wb(b|0)}else{c[a>>2]=18208;Md(a|0,18248,131)}}function Vy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+448|0;f=e;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;u=e+208|0;v=e+224|0;w=e+240|0;x=e+256|0;y=e+272|0;z=e+288|0;A=e+304|0;B=e+320|0;C=e+336|0;D=e+352|0;E=e+368|0;F=e+384|0;G=e+400|0;H=e+416|0;J=e+432|0;c[b+4>>2]=d+ -1;c[b>>2]=21280;d=b+8|0;K=b+12|0;L=b+136|0;a[L]=1;M=b+24|0;c[K>>2]=M;c[d>>2]=M;c[b+16>>2]=L;N=28;O=M;do{if((O|0)==0){P=0}else{c[O>>2]=0;P=c[K>>2]|0}O=P+4|0;c[K>>2]=O;N=N+ -1|0;}while((N|0)!=0);N=b+144|0;t=0;La(18,N|0,21264,1);O=t;t=0;if(O&1){O=Kb(-1,-1)|0;Q=I;R=O}else{O=c[d>>2]|0;P=c[K>>2]|0;if((P|0)!=(O|0)){c[K>>2]=P+(~((P+ -4+(0-O)|0)>>>2)<<2)}c[26180>>2]=0;c[6544]=19760;if((c[4946]|0)==-1){S=10}else{c[H>>2]=19784;c[H+4>>2]=279;c[H+8>>2]=0;t=0;La(55,19784,H|0,280);H=t;t=0;if(H&1){S=111}else{S=10}}a:do{if((S|0)==10){t=0;La(56,b|0,26176,(c[19788>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26172>>2]=0;c[6542]=19800;if(!((c[4956]|0)==-1)){c[G>>2]=19824;c[G+4>>2]=279;c[G+8>>2]=0;t=0;La(55,19824,G|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26168,(c[19828>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26156>>2]=0;c[6538]=21384;c[26160>>2]=0;a[26164|0]=0;t=0;H=Ia(6)|0;O=t;t=0;if(O&1){O=Kb(-1,-1,0)|0;Xe(O)}c[26160>>2]=c[H>>2];if(!((c[5342]|0)==-1)){c[F>>2]=21368;c[F+4>>2]=279;c[F+8>>2]=0;t=0;La(55,21368,F|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26152,(c[21372>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26148>>2]=0;c[6536]=22344;if(!((c[5340]|0)==-1)){c[E>>2]=21360;c[E+4>>2]=279;c[E+8>>2]=0;t=0;La(55,21360,E|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26144,(c[21364>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26140>>2]=0;c[6534]=22560;if(!((c[5358]|0)==-1)){c[D>>2]=21432;c[D+4>>2]=279;c[D+8>>2]=0;t=0;La(55,21432,D|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26136,(c[21436>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26124>>2]=0;c[6530]=21456;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;H=sa(33,2147483647,21264,0)|0;O=t;t=0;if(O&1){O=Kb(-1,-1)|0;P=I;rc(21256);T=P;U=O;break a}else{c[5312]=H;Nb(21256);break}}}while(0);c[26128>>2]=c[5312];if(!((c[5360]|0)==-1)){c[C>>2]=21440;c[C+4>>2]=279;c[C+8>>2]=0;t=0;La(55,21440,C|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26120,(c[21444>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26116>>2]=0;c[6528]=22784;if(!((c[5374]|0)==-1)){c[B>>2]=21496;c[B+4>>2]=279;c[B+8>>2]=0;t=0;La(55,21496,B|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26112,(c[21500>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26108>>2]=0;c[6526]=22904;if(!((c[5376]|0)==-1)){c[A>>2]=21504;c[A+4>>2]=279;c[A+8>>2]=0;t=0;La(55,21504,A|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26104,(c[21508>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26084>>2]=0;c[6520]=21536;a[26088|0]=46;a[26089|0]=44;c[26092>>2]=0;c[26096>>2]=0;c[26100>>2]=0;if(!((c[5378]|0)==-1)){c[z>>2]=21512;c[z+4>>2]=279;c[z+8>>2]=0;t=0;La(55,21512,z|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26080,(c[21516>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26052>>2]=0;c[6512]=21576;c[26056>>2]=46;c[26060>>2]=44;c[26064>>2]=0;c[26068>>2]=0;c[26072>>2]=0;if(!((c[5380]|0)==-1)){c[y>>2]=21520;c[y+4>>2]=279;c[y+8>>2]=0;t=0;La(55,21520,y|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26048,(c[21524>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26044>>2]=0;c[6510]=19840;if(!((c[4974]|0)==-1)){c[x>>2]=19896;c[x+4>>2]=279;c[x+8>>2]=0;t=0;La(55,19896,x|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26040,(c[19900>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26036>>2]=0;c[6508]=19960;if(!((c[5004]|0)==-1)){c[w>>2]=20016;c[w+4>>2]=279;c[w+8>>2]=0;t=0;La(55,20016,w|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26032,(c[20020>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26028>>2]=0;c[6506]=20032;if(!((c[5020]|0)==-1)){c[v>>2]=20080;c[v+4>>2]=279;c[v+8>>2]=0;t=0;La(55,20080,v|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26024,(c[20084>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26020>>2]=0;c[6504]=20096;if(!((c[5036]|0)==-1)){c[u>>2]=20144;c[u+4>>2]=279;c[u+8>>2]=0;t=0;La(55,20144,u|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26016,(c[20148>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26012>>2]=0;c[6502]=20688;if(!((c[5184]|0)==-1)){c[s>>2]=20736;c[s+4>>2]=279;c[s+8>>2]=0;t=0;La(55,20736,s|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26008,(c[20740>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[26004>>2]=0;c[6500]=20752;if(!((c[5200]|0)==-1)){c[r>>2]=20800;c[r+4>>2]=279;c[r+8>>2]=0;t=0;La(55,20800,r|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,26e3,(c[20804>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25996>>2]=0;c[6498]=20816;if(!((c[5216]|0)==-1)){c[q>>2]=20864;c[q+4>>2]=279;c[q+8>>2]=0;t=0;La(55,20864,q|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25992,(c[20868>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25988>>2]=0;c[6496]=20880;if(!((c[5232]|0)==-1)){c[p>>2]=20928;c[p+4>>2]=279;c[p+8>>2]=0;t=0;La(55,20928,p|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25984,(c[20932>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25980>>2]=0;c[6494]=20944;if(!((c[5242]|0)==-1)){c[o>>2]=20968;c[o+4>>2]=279;c[o+8>>2]=0;t=0;La(55,20968,o|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25976,(c[20972>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25972>>2]=0;c[6492]=21024;if(!((c[5262]|0)==-1)){c[n>>2]=21048;c[n+4>>2]=279;c[n+8>>2]=0;t=0;La(55,21048,n|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25968,(c[21052>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25964>>2]=0;c[6490]=21080;if(!((c[5276]|0)==-1)){c[m>>2]=21104;c[m+4>>2]=279;c[m+8>>2]=0;t=0;La(55,21104,m|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25960,(c[21108>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25956>>2]=0;c[6488]=21128;if(!((c[5288]|0)==-1)){c[l>>2]=21152;c[l+4>>2]=279;c[l+8>>2]=0;t=0;La(55,21152,l|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25952,(c[21156>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25940>>2]=0;c[6484]=20176;c[25944>>2]=20224;if(!((c[5064]|0)==-1)){c[k>>2]=20256;c[k+4>>2]=279;c[k+8>>2]=0;t=0;La(55,20256,k|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25936,(c[20260>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25924>>2]=0;c[6480]=20328;c[25928>>2]=20376;if(!((c[5102]|0)==-1)){c[j>>2]=20408;c[j+4>>2]=279;c[j+8>>2]=0;t=0;La(55,20408,j|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25920,(c[20412>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25908>>2]=0;c[6476]=22280;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;H=sa(33,2147483647,21264,0)|0;O=t;t=0;if(O&1){O=Kb(-1,-1)|0;P=I;rc(21256);T=P;U=O;break a}else{c[5312]=H;Nb(21256);break}}}while(0);c[25912>>2]=c[5312];c[6476]=20624;if(!((c[5160]|0)==-1)){c[h>>2]=20640;c[h+4>>2]=279;c[h+8>>2]=0;t=0;La(55,20640,h|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25904,(c[20644>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25892>>2]=0;c[6472]=22280;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;H=sa(33,2147483647,21264,0)|0;O=t;t=0;if(O&1){O=Kb(-1,-1)|0;P=I;rc(21256);T=P;U=O;break a}else{c[5312]=H;Nb(21256);break}}}while(0);c[25896>>2]=c[5312];c[6472]=20656;if(!((c[5168]|0)==-1)){c[g>>2]=20672;c[g+4>>2]=279;c[g+8>>2]=0;t=0;La(55,20672,g|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25888,(c[20676>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25884>>2]=0;c[6470]=21168;if(!((c[5298]|0)==-1)){c[f>>2]=21192;c[f+4>>2]=279;c[f+8>>2]=0;t=0;La(55,21192,f|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25880,(c[21196>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}c[25876>>2]=0;c[6468]=21208;if(!((c[5308]|0)==-1)){c[J>>2]=21232;c[J+4>>2]=279;c[J+8>>2]=0;t=0;La(55,21232,J|0,280);H=t;t=0;if(H&1){S=111;break}}t=0;La(56,b|0,25872,(c[21236>>2]|0)+ -1|0);H=t;t=0;if(H&1){S=111;break}i=e;return}}while(0);if((S|0)==111){S=Kb(-1,-1)|0;T=I;U=S}lt(N);Q=T;R=U}U=c[d>>2]|0;if((U|0)==0){Wb(R|0)}d=c[K>>2]|0;if((d|0)!=(U|0)){c[K>>2]=d+(~((d+ -4+(0-U)|0)>>>2)<<2)}if((M|0)==(U|0)){a[L]=0;Wb(R|0)}else{_B(U);Wb(R|0)}}function Wy(){var b=0,d=0;b=i;do{if((a[21320]|0)==0){if((Va(21320)|0)==0){break}t=0;na(135,25712,1);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;rc(21320);Wb(d|0)}else{c[5326]=25712;c[5328]=21304;Nb(21320);break}}}while(0);i=b;return c[5328]|0}function Xy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=b;Js(f);g=a+8|0;h=a+12|0;a=c[h>>2]|0;j=g;k=c[j>>2]|0;l=a-k>>2;do{if(l>>>0>d>>>0){m=k}else{n=d+1|0;if(!(l>>>0<n>>>0)){if(!(l>>>0>n>>>0)){m=k;break}o=k+(n<<2)|0;if((a|0)==(o|0)){m=k;break}c[h>>2]=a+(~((a+ -4+(0-o)|0)>>>2)<<2);m=k;break}t=0;na(136,g|0,n-l|0);n=t;t=0;if(!(n&1)){m=c[j>>2]|0;break}n=Kb(-1,-1)|0;if((b|0)==0){Wb(n|0)}Ks(f)|0;Wb(n|0)}}while(0);f=c[m+(d<<2)>>2]|0;if((f|0)==0){p=m;q=p+(d<<2)|0;c[q>>2]=b;i=e;return}Ks(f)|0;p=c[j>>2]|0;q=p+(d<<2)|0;c[q>>2]=b;i=e;return}function Yy(a){a=a|0;var b=0;b=i;Zy(a);_B(a);i=b;return}function Zy(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;c[b>>2]=21280;e=b+12|0;f=c[e>>2]|0;g=b+8|0;h=c[g>>2]|0;if((f|0)!=(h|0)){j=f;f=h;h=0;while(1){k=c[f+(h<<2)>>2]|0;if((k|0)==0){l=f;m=j}else{Ks(k)|0;l=c[g>>2]|0;m=c[e>>2]|0}k=h+1|0;if(k>>>0<m-l>>2>>>0){j=m;f=l;h=k}else{break}}}lt(b+144|0);h=c[g>>2]|0;if((h|0)==0){i=d;return}g=c[e>>2]|0;if((g|0)!=(h|0)){c[e>>2]=g+(~((g+ -4+(0-h)|0)>>>2)<<2)}if((b+24|0)==(h|0)){a[b+136|0]=0;i=d;return}else{_B(h);i=d;return}}function _y(){var b=0,d=0,e=0;b=i;if((a[21344]|0)!=0){d=c[5334]|0;i=b;return d|0}if((Va(21344)|0)==0){d=c[5334]|0;i=b;return d|0}do{if((a[21320]|0)==0){if((Va(21320)|0)==0){break}t=0;na(135,25712,1);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;rc(21320);rc(21344);Wb(e|0)}else{c[5326]=25712;c[5328]=21304;Nb(21320);break}}}while(0);e=c[c[5328]>>2]|0;c[5332]=e;Js(e);c[5334]=21328;Nb(21344);d=c[5334]|0;i=b;return d|0}function $y(a){a=a|0;var b=0,d=0,e=0;b=i;t=0;d=Ia(7)|0;e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{e=c[d>>2]|0;c[a>>2]=e;Js(e);i=b;return}}function az(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[b>>2]|0;c[a>>2]=e;Js(e);i=d;return}function bz(a){a=a|0;var b=0;b=i;Ks(c[a>>2]|0)|0;i=b;return}function cz(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=b;Js(c[e>>2]|0);b=a;Ks(c[b>>2]|0)|0;c[b>>2]=c[e>>2];i=d;return a|0}function dz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;a=b;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=279;c[e+8>>2]=0;et(a,e,280)}e=(c[b+4>>2]|0)+ -1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=0;i=d;return g|0}g=(c[b+(e<<2)>>2]|0)!=0;i=d;return g|0}function ez(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;a=b;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=279;c[e+8>>2]=0;et(a,e,280)}e=(c[b+4>>2]|0)+ -1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=xc(4)|0;h=g;wB(h);Md(g|0,29328,218)}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=xc(4)|0;h=g;wB(h);Md(g|0,29328,218)}else{i=d;return f|0}return 0}function fz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;f=b;b=c[f>>2]|0;g=d;if((b|0)==(c[g>>2]|0)){h=1;i=e;return h|0}if((At(b+144|0,21296)|0)==0){h=0;i=e;return h|0}b=c[f>>2]|0;f=b+144|0;d=c[g>>2]|0;g=d+144|0;j=a[f]|0;k=(j&1)==0;if(k){l=(j&255)>>>1}else{l=c[b+148>>2]|0}j=a[g]|0;m=(j&1)==0;if(m){n=(j&255)>>>1}else{n=c[d+148>>2]|0}if((l|0)!=(n|0)){h=0;i=e;return h|0}if(k){o=f+1|0}else{o=c[b+152>>2]|0}if(m){p=g+1|0}else{p=c[d+152>>2]|0}if(!k){h=(nC(o,p,l)|0)==0;i=e;return h|0}if((l|0)==0){h=1;i=e;return h|0}else{q=l;r=o;s=p}while(1){if((a[r]|0)!=(a[s]|0)){h=0;t=21;break}p=q+ -1|0;if((p|0)==0){h=1;t=21;break}else{q=p;r=r+1|0;s=s+1|0}}if((t|0)==21){i=e;return h|0}return 0}function gz(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function hz(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Zd[c[(c[a>>2]|0)+4>>2]&511](a);i=b;return}function iz(a){a=a|0;var b=0;b=c[5338]|0;c[5338]=b+1;c[a+4>>2]=b+1;i=i;return}function jz(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function kz(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=i;if(!(e>>>0<128)){f=0;i=a;return f|0}t=0;g=Ia(6)|0;h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}f=(b[(c[g>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;i=a;return f|0}function lz(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;a=i;if((d|0)==(e|0)){g=d;i=a;return g|0}else{h=d;j=f}while(1){f=c[h>>2]|0;if(f>>>0<128){t=0;d=Ia(6)|0;k=t;t=0;if(k&1){l=4;break}m=b[(c[d>>2]|0)+(f<<1)>>1]|0}else{m=0}b[j>>1]=m;f=h+4|0;if((f|0)==(e|0)){g=e;l=7;break}else{h=f;j=j+2|0}}if((l|0)==4){j=Kb(-1,-1,0)|0;Xe(j)}else if((l|0)==7){i=a;return g|0}return 0}function mz(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;a=i;if((e|0)==(f|0)){g=e;i=a;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128){t=0;j=Ia(6)|0;k=t;t=0;if(k&1){l=4;break}if(!((b[(c[j>>2]|0)+(e<<1)>>1]&d)<<16>>16==0)){g=h;l=7;break}}e=h+4|0;if((e|0)==(f|0)){g=f;l=7;break}else{h=e}}if((l|0)==4){h=Kb(-1,-1,0)|0;Xe(h)}else if((l|0)==7){i=a;return g|0}return 0}function nz(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;a=i;a:do{if((e|0)==(f|0)){g=e}else{h=e;while(1){j=c[h>>2]|0;if(!(j>>>0<128)){g=h;break a}t=0;k=Ia(6)|0;l=t;t=0;if(l&1){break}l=h+4|0;if((b[(c[k>>2]|0)+(j<<1)>>1]&d)<<16>>16==0){g=h;break a}if((l|0)==(f|0)){g=f;break a}else{h=l}}h=Kb(-1,-1,0)|0;Xe(h)}}while(0);i=a;return g|0}function oz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;if(!(b>>>0<128)){d=b;i=a;return d|0}t=0;e=Ia(8)|0;f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}d=c[(c[e>>2]|0)+(b<<2)>>2]|0;i=a;return d|0}function pz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;a=i;if((b|0)==(d|0)){e=b;i=a;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){t=0;g=Ia(8)|0;h=t;t=0;if(h&1){j=4;break}k=c[(c[g>>2]|0)+(b<<2)>>2]|0}else{k=b}c[f>>2]=k;b=f+4|0;if((b|0)==(d|0)){e=d;j=7;break}else{f=b}}if((j|0)==4){f=Kb(-1,-1,0)|0;Xe(f)}else if((j|0)==7){i=a;return e|0}return 0}function qz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;if(!(b>>>0<128)){d=b;i=a;return d|0}t=0;e=Ia(9)|0;f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}d=c[(c[e>>2]|0)+(b<<2)>>2]|0;i=a;return d|0}function rz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;a=i;if((b|0)==(d|0)){e=b;i=a;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){t=0;g=Ia(9)|0;h=t;t=0;if(h&1){j=4;break}k=c[(c[g>>2]|0)+(b<<2)>>2]|0}else{k=b}c[f>>2]=k;b=f+4|0;if((b|0)==(d|0)){e=d;j=7;break}else{f=b}}if((j|0)==4){f=Kb(-1,-1,0)|0;Xe(f)}else if((j|0)==7){i=a;return e|0}return 0}function sz(a,b){a=a|0;b=b|0;i=i;return b<<24>>24|0}function tz(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;if((d|0)==(e|0)){g=d;i=b;return g|0}else{h=d;j=f}while(1){c[j>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{j=j+4|0;h=f}}i=b;return g|0}function uz(a,b,c){a=a|0;b=b|0;c=c|0;i=i;return(b>>>0<128?b&255:c)|0}function vz(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;b=i;if((d|0)==(e|0)){h=d;i=b;return h|0}j=((e+ -4+(0-d)|0)>>>2)+1|0;k=d;l=g;while(1){g=c[k>>2]|0;a[l]=g>>>0<128?g&255:f;g=k+4|0;if((g|0)==(e|0)){break}else{l=l+1|0;k=g}}h=d+(j<<2)|0;i=b;return h|0}function wz(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=21384;e=c[b+8>>2]|0;do{if((e|0)!=0){if((a[b+12|0]|0)==0){break}$B(e)}}while(0);_B(b);i=d;return}function xz(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=21384;e=c[b+8>>2]|0;if((e|0)==0){i=d;return}if((a[b+12|0]|0)==0){i=d;return}$B(e);i=d;return}function yz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;if(!(b<<24>>24>-1)){d=b;i=a;return d|0}t=0;e=Ia(8)|0;f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}d=c[(c[e>>2]|0)+((b&255)<<2)>>2]&255;i=a;return d|0}function zz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){t=0;h=Ia(8)|0;j=t;t=0;if(j&1){k=4;break}l=c[(c[h>>2]|0)+(d<<24>>24<<2)>>2]&255}else{l=d}a[g]=l;d=g+1|0;if((d|0)==(e|0)){f=e;k=7;break}else{g=d}}if((k|0)==4){g=Kb(-1,-1,0)|0;Xe(g)}else if((k|0)==7){i=b;return f|0}return 0}function Az(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;if(!(b<<24>>24>-1)){d=b;i=a;return d|0}t=0;e=Ia(9)|0;f=t;t=0;if(f&1){f=Kb(-1,-1,0)|0;Xe(f)}d=c[(c[e>>2]|0)+(b<<24>>24<<2)>>2]&255;i=a;return d|0}function Bz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;b=i;if((d|0)==(e|0)){f=d;i=b;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){t=0;h=Ia(9)|0;j=t;t=0;if(j&1){k=4;break}l=c[(c[h>>2]|0)+(d<<24>>24<<2)>>2]&255}else{l=d}a[g]=l;d=g+1|0;if((d|0)==(e|0)){f=e;k=7;break}else{g=d}}if((k|0)==4){g=Kb(-1,-1,0)|0;Xe(g)}else if((k|0)==7){i=b;return f|0}return 0}function Cz(a,b){a=a|0;b=b|0;i=i;return b|0}function Dz(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;b=i;if((c|0)==(d|0)){f=c}else{g=c;c=e;while(1){a[c]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{c=c+1|0;g=e}}}i=b;return f|0}function Ez(a,b,c){a=a|0;b=b|0;c=c|0;i=i;return(b<<24>>24>-1?b:c)|0}function Fz(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;if((c|0)==(d|0)){g=c;i=b;return g|0}else{h=c;j=f}while(1){f=a[h]|0;a[j]=f<<24>>24>-1?f:e;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{j=j+1|0;h=f}}i=b;return g|0}function Gz(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Hz(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;c[f>>2]=d;c[j>>2]=g;i=i;return 3}function Iz(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;c[f>>2]=d;c[j>>2]=g;i=i;return 3}function Jz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;i=i;return 3}function Kz(a){a=a|0;i=i;return 1}function Lz(a){a=a|0;i=i;return 1}function Mz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;i=i;return(b>>>0<e>>>0?b:e)|0}function Nz(a){a=a|0;i=i;return 1}function Oz(a){a=a|0;var b=0;b=i;Ty(a);_B(a);i=b;return}function Pz(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;l=i;i=i+8|0;m=l;n=m;o=i;i=i+8|0;p=(e|0)==(f|0);a:do{if(p){c[k>>2]=h;c[g>>2]=e;q=e}else{r=e;while(1){s=r+4|0;if((c[r>>2]|0)==0){u=r;break}if((s|0)==(f|0)){u=f;break}else{r=s}}c[k>>2]=h;c[g>>2]=e;if(p|(h|0)==(j|0)){q=e;break}r=d;s=j;v=b+8|0;w=o;x=e;y=h;z=u;while(1){A=r;B=c[A+4>>2]|0;C=m;c[C>>2]=c[A>>2];c[C+4>>2]=B;D=Dc(c[v>>2]|0)|0;t=0;B=Fa(13,y|0,g|0,z-x>>2|0,s-y|0,d|0)|0;C=t;t=0;if(C&1){E=11;break}if((D|0)!=0){t=0;oa(108,D|0)|0;C=t;t=0;if(C&1){E=10;break}}if((B|0)==-1){E=16;break}else if((B|0)==0){F=1;E=51;break}C=(c[k>>2]|0)+B|0;c[k>>2]=C;if((C|0)==(j|0)){E=49;break}if((z|0)==(f|0)){G=c[g>>2]|0;H=C;I=f}else{J=Dc(c[v>>2]|0)|0;t=0;C=sa(37,w|0,0,d|0)|0;B=t;t=0;if(B&1){E=35;break}if((J|0)!=0){t=0;oa(108,J|0)|0;B=t;t=0;if(B&1){E=34;break}}if((C|0)==-1){F=2;E=51;break}B=c[k>>2]|0;if(C>>>0>(s-B|0)>>>0){F=1;E=51;break}b:do{if((C|0)!=0){A=B;K=C;L=w;while(1){M=a[L]|0;c[k>>2]=A+1;a[A]=M;M=K+ -1|0;if((M|0)==0){break b}A=c[k>>2]|0;L=L+1|0;K=M}}}while(0);C=(c[g>>2]|0)+4|0;c[g>>2]=C;c:do{if((C|0)==(f|0)){N=f}else{B=C;while(1){K=B+4|0;if((c[B>>2]|0)==0){N=B;break c}if((K|0)==(f|0)){N=f;break}else{B=K}}}}while(0);G=C;H=c[k>>2]|0;I=N}if((G|0)==(f|0)|(H|0)==(j|0)){q=G;break a}else{x=G;y=H;z=I}}if((E|0)==10){z=Kb(-1,-1,0)|0;Xe(z)}else if((E|0)==11){z=Kb(-1,-1)|0;if((D|0)==0){Wb(z|0)}t=0;oa(108,D|0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1,0)|0;Xe(w)}else{Wb(z|0)}}else if((E|0)==16){c[k>>2]=y;d:do{if((x|0)==(c[g>>2]|0)){O=x}else{z=x;w=y;while(1){s=c[z>>2]|0;P=Dc(c[v>>2]|0)|0;t=0;r=sa(37,w|0,s|0,n|0)|0;s=t;t=0;if(s&1){break}if((P|0)!=0){t=0;oa(108,P|0)|0;s=t;t=0;if(s&1){E=20;break}}if((r|0)==-1){O=z;break d}s=(c[k>>2]|0)+r|0;c[k>>2]=s;r=z+4|0;if((r|0)==(c[g>>2]|0)){O=r;break d}else{z=r;w=s}}if((E|0)==20){w=Kb(-1,-1,0)|0;Xe(w)}w=Kb(-1,-1)|0;if((P|0)==0){Wb(w|0)}t=0;oa(108,P|0)|0;z=t;t=0;if(z&1){z=Kb(-1,-1,0)|0;Xe(z)}else{Wb(w|0)}}}while(0);c[g>>2]=O;F=2;i=l;return F|0}else if((E|0)==34){v=Kb(-1,-1,0)|0;Xe(v)}else if((E|0)==35){v=Kb(-1,-1)|0;if((J|0)==0){Wb(v|0)}t=0;oa(108,J|0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1,0)|0;Xe(y)}else{Wb(v|0)}}else if((E|0)==49){q=c[g>>2]|0;break}else if((E|0)==51){i=l;return F|0}}}while(0);F=(q|0)!=(f|0)|0;i=l;return F|0}function Qz(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;l=i;i=i+8|0;m=l;n=m;o=(e|0)==(f|0);a:do{if(o){c[k>>2]=h;c[g>>2]=e;p=e}else{q=e;while(1){r=q+1|0;if((a[q]|0)==0){s=q;break}if((r|0)==(f|0)){s=f;break}else{q=r}}c[k>>2]=h;c[g>>2]=e;if(o|(h|0)==(j|0)){p=e;break}q=d;r=j;u=b+8|0;v=e;w=h;x=s;while(1){y=q;z=c[y+4>>2]|0;A=m;c[A>>2]=c[y>>2];c[A+4>>2]=z;B=x;C=Dc(c[u>>2]|0)|0;t=0;z=Fa(14,w|0,g|0,B-v|0,r-w>>2|0,d|0)|0;A=t;t=0;if(A&1){D=11;break}if((C|0)!=0){t=0;oa(108,C|0)|0;A=t;t=0;if(A&1){D=10;break}}if((z|0)==-1){D=16;break}else if((z|0)==0){E=2;D=50;break}A=(c[k>>2]|0)+(z<<2)|0;c[k>>2]=A;if((A|0)==(j|0)){D=48;break}z=c[g>>2]|0;if((x|0)==(f|0)){F=z;G=A;H=f}else{I=Dc(c[u>>2]|0)|0;t=0;y=Ja(21,A|0,z|0,1,d|0)|0;z=t;t=0;if(z&1){D=38;break}if((I|0)!=0){t=0;oa(108,I|0)|0;z=t;t=0;if(z&1){D=37;break}}if((y|0)!=0){E=2;D=50;break}c[k>>2]=(c[k>>2]|0)+4;y=(c[g>>2]|0)+1|0;c[g>>2]=y;b:do{if((y|0)==(f|0)){J=f}else{z=y;while(1){A=z+1|0;if((a[z]|0)==0){J=z;break b}if((A|0)==(f|0)){J=f;break}else{z=A}}}}while(0);F=y;G=c[k>>2]|0;H=J}if((F|0)==(f|0)|(G|0)==(j|0)){p=F;break a}else{v=F;w=G;x=H}}if((D|0)==10){x=Kb(-1,-1,0)|0;Xe(x)}else if((D|0)==11){x=Kb(-1,-1)|0;if((C|0)==0){Wb(x|0)}t=0;oa(108,C|0)|0;r=t;t=0;if(r&1){r=Kb(-1,-1,0)|0;Xe(r)}else{Wb(x|0)}}else if((D|0)==16){c[k>>2]=w;c:do{if((v|0)==(c[g>>2]|0)){K=v}else{x=v;r=w;while(1){L=Dc(c[u>>2]|0)|0;t=0;q=Ja(21,r|0,x|0,B-x|0,n|0)|0;z=t;t=0;if(z&1){D=21;break}if((L|0)!=0){t=0;oa(108,L|0)|0;z=t;t=0;if(z&1){D=20;break}}if((q|0)==-2){D=28;break}else if((q|0)==-1){D=27;break}else if((q|0)==0){M=x+1|0}else{M=x+q|0}q=(c[k>>2]|0)+4|0;c[k>>2]=q;if((M|0)==(c[g>>2]|0)){K=M;break c}else{x=M;r=q}}if((D|0)==20){r=Kb(-1,-1,0)|0;Xe(r)}else if((D|0)==21){r=Kb(-1,-1)|0;if((L|0)==0){Wb(r|0)}t=0;oa(108,L|0)|0;y=t;t=0;if(y&1){y=Kb(-1,-1,0)|0;Xe(y)}else{Wb(r|0)}}else if((D|0)==27){c[g>>2]=x;E=2;i=l;return E|0}else if((D|0)==28){c[g>>2]=x;E=1;i=l;return E|0}}}while(0);c[g>>2]=K;E=(K|0)!=(f|0)|0;i=l;return E|0}else if((D|0)==37){u=Kb(-1,-1,0)|0;Xe(u)}else if((D|0)==38){u=Kb(-1,-1)|0;if((I|0)==0){Wb(u|0)}t=0;oa(108,I|0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1,0)|0;Xe(w)}else{Wb(u|0)}}else if((D|0)==48){p=c[g>>2]|0;break}else if((D|0)==50){i=l;return E|0}}}while(0);E=(p|0)!=(f|0)|0;i=l;return E|0}function Rz(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+8|0;c[g>>2]=e;e=h;j=Dc(c[b+8>>2]|0)|0;t=0;b=sa(37,e|0,0,d|0)|0;d=t;t=0;if(d&1){d=Kb(-1,-1)|0;if((j|0)==0){Wb(d|0)}t=0;oa(108,j|0)|0;k=t;t=0;if(k&1){k=Kb(-1,-1,0)|0;Xe(k)}else{Wb(d|0)}}do{if((j|0)!=0){t=0;oa(108,j|0)|0;d=t;t=0;if(!(d&1)){break}d=Kb(-1,-1,0)|0;Xe(d)}}while(0);if((b|0)==0|(b|0)==-1){l=2;i=h;return l|0}j=b+ -1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){l=1;i=h;return l|0}if((j|0)==0){l=0;i=h;return l|0}else{m=b;n=j;o=e}while(1){e=a[o]|0;c[g>>2]=m+1;a[m]=e;e=n+ -1|0;if((e|0)==0){l=0;break}m=c[g>>2]|0;o=o+1|0;n=e}i=h;return l|0}function Sz(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;d=a+8|0;t=0;a=oa(108,c[d>>2]|0)|0;e=t;t=0;do{if(!(e&1)){t=0;f=sa(38,0,0,4)|0;g=t;t=0;if(g&1){g=Kb(-1,-1,0)|0;if((a|0)==0){h=g;Xe(h)}t=0;oa(108,a|0)|0;j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{h=g;Xe(h)}}do{if((a|0)!=0){t=0;oa(108,a|0)|0;g=t;t=0;if(!(g&1)){break}g=Kb(-1,-1,0)|0;Xe(g)}}while(0);if((f|0)!=0){k=-1;i=b;return k|0}g=c[d>>2]|0;if((g|0)==0){k=1;i=b;return k|0}t=0;j=oa(108,g|0)|0;g=t;t=0;if(g&1){break}if((j|0)==0){k=0;i=b;return k|0}t=0;oa(108,j|0)|0;j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{k=0;i=b;return k|0}}}while(0);k=Kb(-1,-1,0)|0;h=k;Xe(h);return 0}function Tz(a){a=a|0;i=i;return 0}function Uz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;if((f|0)==0|(d|0)==(e|0)){h=0;i=g;return h|0}j=e;k=a+8|0;a=d;d=0;l=0;while(1){m=Dc(c[k>>2]|0)|0;t=0;n=sa(39,a|0,j-a|0,b|0)|0;o=t;t=0;if(o&1){p=7;break}if((m|0)!=0){t=0;oa(108,m|0)|0;o=t;t=0;if(o&1){p=6;break}}if((n|0)==-2|(n|0)==-1){h=d;p=15;break}else if((n|0)==0){q=a+1|0;r=1}else{q=a+n|0;r=n}n=r+d|0;o=l+1|0;if(o>>>0>=f>>>0|(q|0)==(e|0)){h=n;p=15;break}else{a=q;d=n;l=o}}if((p|0)==6){l=Kb(-1,-1,0)|0;Xe(l)}else if((p|0)==7){l=Kb(-1,-1)|0;if((m|0)==0){Wb(l|0)}t=0;oa(108,m|0)|0;m=t;t=0;if(m&1){m=Kb(-1,-1,0)|0;Xe(m)}else{Wb(l|0)}}else if((p|0)==15){i=g;return h|0}return 0}function Vz(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a+8>>2]|0;if((d|0)==0){e=1;i=b;return e|0}t=0;a=oa(108,d|0)|0;d=t;t=0;if(d&1){d=Kb(-1,-1,0)|0;Xe(d)}if((a|0)==0){e=4;i=b;return e|0}t=0;oa(108,a|0)|0;a=t;t=0;if(a&1){a=Kb(-1,-1,0)|0;Xe(a)}else{e=4;i=b;return e|0}return 0}function Wz(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Xz(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Yz(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Yz(d,f,g,h,j,k,l,m){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0;n=i;c[g>>2]=d;c[k>>2]=h;do{if((m&2|0)!=0){if((j-h|0)<3){o=1;i=n;return o|0}else{c[k>>2]=h+1;a[h]=-17;d=c[k>>2]|0;c[k>>2]=d+1;a[d]=-69;d=c[k>>2]|0;c[k>>2]=d+1;a[d]=-65;break}}}while(0);h=f;m=c[g>>2]|0;if(!(m>>>0<f>>>0)){o=0;i=n;return o|0}d=j;j=m;a:while(1){m=b[j>>1]|0;p=m&65535;if(p>>>0>l>>>0){o=2;q=26;break}do{if((m&65535)<128){r=c[k>>2]|0;if((d-r|0)<1){o=1;q=26;break a}c[k>>2]=r+1;a[r]=m}else{if((m&65535)<2048){r=c[k>>2]|0;if((d-r|0)<2){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>6|192;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if((m&65535)<55296){r=c[k>>2]|0;if((d-r|0)<3){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>12|224;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p>>>6&63|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if(!((m&65535)<56320)){if((m&65535)<57344){o=2;q=26;break a}r=c[k>>2]|0;if((d-r|0)<3){o=1;q=26;break a}c[k>>2]=r+1;a[r]=p>>>12|224;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p>>>6&63|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p&63|128;break}if((h-j|0)<4){o=1;q=26;break a}r=j+2|0;s=e[r>>1]|0;if((s&64512|0)!=56320){o=2;q=26;break a}if((d-(c[k>>2]|0)|0)<4){o=1;q=26;break a}t=p&960;if(((t<<10)+65536|p<<10&64512|s&1023)>>>0>l>>>0){o=2;q=26;break a}c[g>>2]=r;r=(t>>>6)+1|0;t=c[k>>2]|0;c[k>>2]=t+1;a[t]=r>>>2|240;t=c[k>>2]|0;c[k>>2]=t+1;a[t]=p>>>2&15|r<<4&48|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=p<<4&48|s>>>6&15|128;r=c[k>>2]|0;c[k>>2]=r+1;a[r]=s&63|128}}while(0);p=(c[g>>2]|0)+2|0;c[g>>2]=p;if(p>>>0<f>>>0){j=p}else{o=0;q=26;break}}if((q|0)==26){i=n;return o|0}return 0}function Zz(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=_z(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function _z(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;n=i;c[g>>2]=e;c[k>>2]=h;h=c[g>>2]|0;do{if((m&4|0)==0){o=h}else{if((f-h|0)<=2){o=h;break}if(!((a[h]|0)==-17)){o=h;break}if(!((a[h+1|0]|0)==-69)){o=h;break}if(!((a[h+2|0]|0)==-65)){o=h;break}e=h+3|0;c[g>>2]=e;o=e}}while(0);a:do{if(o>>>0<f>>>0){h=f;m=j;e=o;p=c[k>>2]|0;b:while(1){if(!(p>>>0<j>>>0)){q=e;break a}r=a[e]|0;s=r&255;if(s>>>0>l>>>0){t=2;u=41;break}do{if(r<<24>>24>-1){b[p>>1]=r&255;c[g>>2]=e+1}else{if((r&255)<194){t=2;u=41;break b}if((r&255)<224){if((h-e|0)<2){t=1;u=41;break b}v=d[e+1|0]|0;if((v&192|0)!=128){t=2;u=41;break b}w=v&63|s<<6&1984;if(w>>>0>l>>>0){t=2;u=41;break b}b[p>>1]=w;c[g>>2]=e+2;break}if((r&255)<240){if((h-e|0)<3){t=1;u=41;break b}w=a[e+1|0]|0;v=a[e+2|0]|0;if((s|0)==237){if(!((w&-32)<<24>>24==-128)){t=2;u=41;break b}}else if((s|0)==224){if(!((w&-32)<<24>>24==-96)){t=2;u=41;break b}}else{if(!((w&-64)<<24>>24==-128)){t=2;u=41;break b}}x=v&255;if((x&192|0)!=128){t=2;u=41;break b}v=(w&255)<<6&4032|s<<12|x&63;if((v&65535)>>>0>l>>>0){t=2;u=41;break b}b[p>>1]=v;c[g>>2]=e+3;break}if(!((r&255)<245)){t=2;u=41;break b}if((h-e|0)<4){t=1;u=41;break b}v=a[e+1|0]|0;x=a[e+2|0]|0;w=a[e+3|0]|0;if((s|0)==244){if(!((v&-16)<<24>>24==-128)){t=2;u=41;break b}}else if((s|0)==240){if(!((v+112<<24>>24&255)<48)){t=2;u=41;break b}}else{if(!((v&-64)<<24>>24==-128)){t=2;u=41;break b}}y=x&255;if((y&192|0)!=128){t=2;u=41;break b}x=w&255;if((x&192|0)!=128){t=2;u=41;break b}if((m-p|0)<4){t=1;u=41;break b}w=s&7;z=v&255;v=y<<6;A=x&63;if((z<<12&258048|w<<18|v&4032|A)>>>0>l>>>0){t=2;u=41;break b}b[p>>1]=z<<2&60|y>>>4&3|((z>>>4&3|w<<2)<<6)+16320|55296;w=p+2|0;c[k>>2]=w;b[w>>1]=A|v&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);s=(c[k>>2]|0)+2|0;c[k>>2]=s;r=c[g>>2]|0;if(r>>>0<f>>>0){e=r;p=s}else{q=r;break a}}if((u|0)==41){i=n;return t|0}}else{q=o}}while(0);t=q>>>0<f>>>0|0;i=n;return t|0}function $z(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;i=i;return 3}function aA(a){a=a|0;i=i;return 0}function bA(a){a=a|0;i=i;return 0}function cA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=i;a=dA(c,d,e,1114111,0)|0;i=b;return a|0}function dA(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;do{if((g&4|0)==0){j=b}else{if((c-b|0)<=2){j=b;break}if(!((a[b]|0)==-17)){j=b;break}if(!((a[b+1|0]|0)==-69)){j=b;break}j=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(j>>>0<c>>>0&(e|0)!=0){g=c;k=j;l=0;b:while(1){m=a[k]|0;n=m&255;if(n>>>0>f>>>0){o=k;break a}do{if(m<<24>>24>-1){p=k+1|0;q=l}else{if((m&255)<194){o=k;break a}if((m&255)<224){if((g-k|0)<2){o=k;break a}r=d[k+1|0]|0;if((r&192|0)!=128){o=k;break a}if((r&63|n<<6&1984)>>>0>f>>>0){o=k;break a}p=k+2|0;q=l;break}if((m&255)<240){s=k;if((g-s|0)<3){o=k;break a}r=a[k+1|0]|0;t=a[k+2|0]|0;if((n|0)==224){if(!((r&-32)<<24>>24==-96)){u=21;break b}}else if((n|0)==237){if(!((r&-32)<<24>>24==-128)){u=23;break b}}else{if(!((r&-64)<<24>>24==-128)){u=25;break b}}v=t&255;if((v&192|0)!=128){o=k;break a}if(((r&255)<<6&4032|n<<12&61440|v&63)>>>0>f>>>0){o=k;break a}p=k+3|0;q=l;break}if(!((m&255)<245)){o=k;break a}w=k;if((g-w|0)<4){o=k;break a}if((e-l|0)>>>0<2){o=k;break a}v=a[k+1|0]|0;r=a[k+2|0]|0;t=a[k+3|0]|0;if((n|0)==244){if(!((v&-16)<<24>>24==-128)){u=36;break b}}else if((n|0)==240){if(!((v+112<<24>>24&255)<48)){u=34;break b}}else{if(!((v&-64)<<24>>24==-128)){u=38;break b}}x=r&255;if((x&192|0)!=128){o=k;break a}r=t&255;if((r&192|0)!=128){o=k;break a}if(((v&255)<<12&258048|n<<18&1835008|x<<6&4032|r&63)>>>0>f>>>0){o=k;break a}p=k+4|0;q=l+1|0}}while(0);n=q+1|0;if(p>>>0<c>>>0&n>>>0<e>>>0){k=p;l=n}else{o=p;break a}}if((u|0)==21){y=s-b|0;i=h;return y|0}else if((u|0)==23){y=s-b|0;i=h;return y|0}else if((u|0)==25){y=s-b|0;i=h;return y|0}else if((u|0)==34){y=w-b|0;i=h;return y|0}else if((u|0)==36){y=w-b|0;i=h;return y|0}else if((u|0)==38){y=w-b|0;i=h;return y|0}}else{o=j}}while(0);y=o-b|0;i=h;return y|0}function eA(a){a=a|0;i=i;return 4}function fA(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function gA(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=hA(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function hA(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0;l=i;c[e>>2]=b;c[h>>2]=f;do{if((k&2|0)!=0){if((g-f|0)<3){m=1;i=l;return m|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){m=0;i=l;return m|0}k=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>j>>>0){m=2;n=19;break}do{if(f>>>0<128){b=c[h>>2]|0;if((k-b|0)<1){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048){b=c[h>>2]|0;if((k-b|0)<2){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;o=k-b|0;if(f>>>0<65536){if((o|0)<3){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=f>>>6&63|128;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=f&63|128;break}else{if((o|0)<4){m=1;n=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{m=0;n=19;break}}if((n|0)==19){i=l;return m|0}return 0}function iA(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=jA(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function jA(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;m=i;c[f>>2]=b;c[j>>2]=g;g=c[f>>2]|0;do{if((l&4|0)==0){n=g}else{if((e-g|0)<=2){n=g;break}if(!((a[g]|0)==-17)){n=g;break}if(!((a[g+1|0]|0)==-69)){n=g;break}if(!((a[g+2|0]|0)==-65)){n=g;break}b=g+3|0;c[f>>2]=b;n=b}}while(0);a:do{if(n>>>0<e>>>0){g=e;l=n;b=c[j>>2]|0;while(1){if(!(b>>>0<h>>>0)){o=l;p=39;break a}q=a[l]|0;r=q&255;do{if(q<<24>>24>-1){if(r>>>0>k>>>0){s=2;break a}c[b>>2]=r;c[f>>2]=l+1}else{if((q&255)<194){s=2;break a}if((q&255)<224){if((g-l|0)<2){s=1;break a}t=d[l+1|0]|0;if((t&192|0)!=128){s=2;break a}u=t&63|r<<6&1984;if(u>>>0>k>>>0){s=2;break a}c[b>>2]=u;c[f>>2]=l+2;break}if((q&255)<240){if((g-l|0)<3){s=1;break a}u=a[l+1|0]|0;t=a[l+2|0]|0;if((r|0)==224){if(!((u&-32)<<24>>24==-96)){s=2;break a}}else if((r|0)==237){if(!((u&-32)<<24>>24==-128)){s=2;break a}}else{if(!((u&-64)<<24>>24==-128)){s=2;break a}}v=t&255;if((v&192|0)!=128){s=2;break a}t=(u&255)<<6&4032|r<<12&61440|v&63;if(t>>>0>k>>>0){s=2;break a}c[b>>2]=t;c[f>>2]=l+3;break}if(!((q&255)<245)){s=2;break a}if((g-l|0)<4){s=1;break a}t=a[l+1|0]|0;v=a[l+2|0]|0;u=a[l+3|0]|0;if((r|0)==244){if(!((t&-16)<<24>>24==-128)){s=2;break a}}else if((r|0)==240){if(!((t+112<<24>>24&255)<48)){s=2;break a}}else{if(!((t&-64)<<24>>24==-128)){s=2;break a}}w=v&255;if((w&192|0)!=128){s=2;break a}v=u&255;if((v&192|0)!=128){s=2;break a}u=(t&255)<<12&258048|r<<18&1835008|w<<6&4032|v&63;if(u>>>0>k>>>0){s=2;break a}c[b>>2]=u;c[f>>2]=l+4}}while(0);r=(c[j>>2]|0)+4|0;c[j>>2]=r;q=c[f>>2]|0;if(q>>>0<e>>>0){l=q;b=r}else{o=q;p=39;break}}}else{o=n;p=39}}while(0);if((p|0)==39){s=o>>>0<e>>>0|0}i=m;return s|0}function kA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;i=i;return 3}function lA(a){a=a|0;i=i;return 0}function mA(a){a=a|0;i=i;return 0}function nA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=i;a=oA(c,d,e,1114111,0)|0;i=b;return a|0}function oA(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;do{if((g&4|0)==0){j=b}else{if((c-b|0)<=2){j=b;break}if(!((a[b]|0)==-17)){j=b;break}if(!((a[b+1|0]|0)==-69)){j=b;break}j=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(j>>>0<c>>>0&(e|0)!=0){g=c;k=j;l=1;b:while(1){m=a[k]|0;n=m&255;do{if(m<<24>>24>-1){if(n>>>0>f>>>0){o=k;break a}p=k+1|0}else{if((m&255)<194){o=k;break a}if((m&255)<224){if((g-k|0)<2){o=k;break a}q=d[k+1|0]|0;if((q&192|0)!=128){o=k;break a}if((q&63|n<<6&1984)>>>0>f>>>0){o=k;break a}p=k+2|0;break}if((m&255)<240){r=k;if((g-r|0)<3){o=k;break a}q=a[k+1|0]|0;s=a[k+2|0]|0;if((n|0)==237){if(!((q&-32)<<24>>24==-128)){t=23;break b}}else if((n|0)==224){if(!((q&-32)<<24>>24==-96)){t=21;break b}}else{if(!((q&-64)<<24>>24==-128)){t=25;break b}}u=s&255;if((u&192|0)!=128){o=k;break a}if(((q&255)<<6&4032|n<<12&61440|u&63)>>>0>f>>>0){o=k;break a}p=k+3|0;break}if(!((m&255)<245)){o=k;break a}v=k;if((g-v|0)<4){o=k;break a}u=a[k+1|0]|0;q=a[k+2|0]|0;s=a[k+3|0]|0;if((n|0)==244){if(!((u&-16)<<24>>24==-128)){t=35;break b}}else if((n|0)==240){if(!((u+112<<24>>24&255)<48)){t=33;break b}}else{if(!((u&-64)<<24>>24==-128)){t=37;break b}}w=q&255;if((w&192|0)!=128){o=k;break a}q=s&255;if((q&192|0)!=128){o=k;break a}if(((u&255)<<12&258048|n<<18&1835008|w<<6&4032|q&63)>>>0>f>>>0){o=k;break a}p=k+4|0}}while(0);if(!(p>>>0<c>>>0&l>>>0<e>>>0)){o=p;break a}k=p;l=l+1|0}if((t|0)==21){x=r-b|0;i=h;return x|0}else if((t|0)==23){x=r-b|0;i=h;return x|0}else if((t|0)==25){x=r-b|0;i=h;return x|0}else if((t|0)==33){x=v-b|0;i=h;return x|0}else if((t|0)==35){x=v-b|0;i=h;return x|0}else if((t|0)==37){x=v-b|0;i=h;return x|0}}else{o=j}}while(0);x=o-b|0;i=h;return x|0}function pA(a){a=a|0;i=i;return 4}function qA(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function rA(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function sA(a){a=a|0;var b=0;b=i;c[a>>2]=21536;lt(a+12|0);_B(a);i=b;return}function tA(a){a=a|0;var b=0;b=i;c[a>>2]=21536;lt(a+12|0);i=b;return}function uA(a){a=a|0;var b=0;b=i;c[a>>2]=21576;lt(a+16|0);_B(a);i=b;return}function vA(a){a=a|0;var b=0;b=i;c[a>>2]=21576;lt(a+16|0);i=b;return}function wA(b){b=b|0;i=i;return a[b+8|0]|0}function xA(a){a=a|0;i=i;return c[a+8>>2]|0}function yA(b){b=b|0;i=i;return a[b+9|0]|0}function zA(a){a=a|0;i=i;return c[a+12>>2]|0}function AA(a,b){a=a|0;b=b|0;var c=0;c=i;ht(a,b+12|0);i=c;return}function BA(a,b){a=a|0;b=b|0;var c=0;c=i;ht(a,b+16|0);i=c;return}function CA(a,b){a=a|0;b=b|0;b=i;jt(a,21608,4);i=b;return}function DA(a,b){a=a|0;b=b|0;b=i;Bt(a,21616,rB(21616)|0);i=b;return}function EA(a,b){a=a|0;b=b|0;b=i;jt(a,21640,5);i=b;return}function FA(a,b){a=a|0;b=b|0;b=i;Bt(a,21648,rB(21648)|0);i=b;return}function GA(b){b=b|0;var d=0,e=0,f=0;b=i;if((a[21680]|0)!=0){d=c[5418]|0;i=b;return d|0}if((Va(21680)|0)==0){d=c[5418]|0;i=b;return d|0}do{if((a[28880]|0)==0){if((Va(28880)|0)==0){break}tC(28712,0,168)|0;Td(284,0,p|0)|0;Nb(28880)}}while(0);t=0;Ea(23,28712,28888)|0;e=t;t=0;do{if(!(e&1)){t=0;Ea(23,28724|0,28896)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28736|0,28904)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28748|0,28912)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28760|0,28928)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28772|0,28944)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28784|0,28952)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28796|0,28968)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28808|0,28976)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28820|0,28984)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28832|0,28992)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28844|0,29e3)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28856|0,29008)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,28868|0,29016)|0;f=t;t=0;if(f&1){break}c[5418]=28712;Nb(21680);d=c[5418]|0;i=b;return d|0}}while(0);d=Kb(-1,-1)|0;rc(21680);Wb(d|0);return 0}function HA(b){b=b|0;var d=0,e=0,f=0;b=i;if((a[21696]|0)!=0){d=c[5422]|0;i=b;return d|0}if((Va(21696)|0)==0){d=c[5422]|0;i=b;return d|0}do{if((a[28344]|0)==0){if((Va(28344)|0)==0){break}tC(28176,0,168)|0;Td(285,0,p|0)|0;Nb(28344)}}while(0);t=0;Ea(46,28176,28352)|0;e=t;t=0;do{if(!(e&1)){t=0;Ea(46,28188|0,28384)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28200|0,28416)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28212|0,28448)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28224|0,28488)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28236|0,28528)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28248|0,28560)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28260|0,28600)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28272|0,28616)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28284|0,28632)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28296|0,28648)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28308|0,28664)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28320|0,28680)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,28332|0,28696)|0;f=t;t=0;if(f&1){break}c[5422]=28176;Nb(21696);d=c[5422]|0;i=b;return d|0}}while(0);d=Kb(-1,-1)|0;rc(21696);Wb(d|0);return 0}function IA(b){b=b|0;var d=0,e=0,f=0;b=i;if((a[21712]|0)!=0){d=c[5426]|0;i=b;return d|0}if((Va(21712)|0)==0){d=c[5426]|0;i=b;return d|0}do{if((a[27952]|0)==0){if((Va(27952)|0)==0){break}tC(27664,0,288)|0;Td(286,0,p|0)|0;Nb(27952)}}while(0);t=0;Ea(23,27664,27960)|0;e=t;t=0;do{if(!(e&1)){t=0;Ea(23,27676|0,27968)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27688|0,27984)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27700|0,27992)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27712|0,28e3)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27724|0,28008)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27736|0,28016)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27748|0,28024)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27760|0,28032)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27772|0,28048)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27784|0,28056)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27796|0,28072)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27808|0,28088)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27820|0,28096)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27832|0,28104)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27844|0,28112)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27856|0,28e3)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27868|0,28120)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27880|0,28128)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27892|0,28136)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27904|0,28144)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27916|0,28152)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27928|0,28160)|0;f=t;t=0;if(f&1){break}t=0;Ea(23,27940|0,28168)|0;f=t;t=0;if(f&1){break}c[5426]=27664;Nb(21712);d=c[5426]|0;i=b;return d|0}}while(0);d=Kb(-1,-1)|0;rc(21712);Wb(d|0);return 0}function JA(b){b=b|0;var d=0,e=0,f=0;b=i;if((a[21728]|0)!=0){d=c[5430]|0;i=b;return d|0}if((Va(21728)|0)==0){d=c[5430]|0;i=b;return d|0}do{if((a[27112]|0)==0){if((Va(27112)|0)==0){break}tC(26824,0,288)|0;Td(287,0,p|0)|0;Nb(27112)}}while(0);t=0;Ea(46,26824,27120)|0;e=t;t=0;do{if(!(e&1)){t=0;Ea(46,26836|0,27152)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26848|0,27192)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26860|0,27216)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26872|0,27536)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26884|0,27240)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26896|0,27264)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26908|0,27288)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26920|0,27320)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26932|0,27360)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26944|0,27392)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26956|0,27432)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26968|0,27472)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26980|0,27488)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,26992|0,27504)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27004|0,27520)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27016|0,27536)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27028|0,27552)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27040|0,27568)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27052|0,27584)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27064|0,27600)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27076|0,27616)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27088|0,27632)|0;f=t;t=0;if(f&1){break}t=0;Ea(46,27100|0,27648)|0;f=t;t=0;if(f&1){break}c[5430]=26824;Nb(21728);d=c[5430]|0;i=b;return d|0}}while(0);d=Kb(-1,-1)|0;rc(21728);Wb(d|0);return 0}function KA(b){b=b|0;var d=0,e=0,f=0,g=0;b=i;if((a[21744]|0)!=0){d=c[5434]|0;i=b;return d|0}if((Va(21744)|0)==0){d=c[5434]|0;i=b;return d|0}do{if((a[26800]|0)==0){if((Va(26800)|0)==0){break}tC(26512,0,288)|0;Td(288,0,p|0)|0;Nb(26800)}}while(0);t=0;Ea(23,26512,26808)|0;e=t;t=0;if(e&1){f=Kb(-1,-1)|0;g=I;rc(21744);Wb(f|0)}t=0;Ea(23,26524|0,26816)|0;e=t;t=0;if(e&1){f=Kb(-1,-1)|0;g=I;rc(21744);Wb(f|0)}c[5434]=26512;Nb(21744);d=c[5434]|0;i=b;return d|0}function LA(b){b=b|0;var d=0,e=0,f=0,g=0;b=i;if((a[21760]|0)!=0){d=c[5438]|0;i=b;return d|0}if((Va(21760)|0)==0){d=c[5438]|0;i=b;return d|0}do{if((a[26472]|0)==0){if((Va(26472)|0)==0){break}tC(26184,0,288)|0;Td(289,0,p|0)|0;Nb(26472)}}while(0);t=0;Ea(46,26184,26480)|0;e=t;t=0;if(e&1){f=Kb(-1,-1)|0;g=I;rc(21760);Wb(f|0)}t=0;Ea(46,26196|0,26496)|0;e=t;t=0;if(e&1){f=Kb(-1,-1)|0;g=I;rc(21760);Wb(f|0)}c[5438]=26184;Nb(21760);d=c[5438]|0;i=b;return d|0}function MA(b){b=b|0;var c=0;b=i;if((a[21784]|0)!=0){i=b;return 21768}if((Va(21784)|0)==0){i=b;return 21768}t=0;La(18,21768,21792,8);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;rc(21784);Wb(c|0)}Td(290,21768,p|0)|0;Nb(21784);i=b;return 21768}function NA(b){b=b|0;var c=0,d=0,e=0;b=i;if((a[21824]|0)!=0){i=b;return 21808}if((Va(21824)|0)==0){i=b;return 21808}t=0;c=oa(109,21832)|0;d=t;t=0;do{if(!(d&1)){t=0;La(57,21808,21832,c|0);e=t;t=0;if(e&1){break}Td(291,21808,p|0)|0;Nb(21824);i=b;return 21808}}while(0);b=Kb(-1,-1)|0;rc(21824);Wb(b|0);return 0}function OA(b){b=b|0;var c=0;b=i;if((a[21888]|0)!=0){i=b;return 21872}if((Va(21888)|0)==0){i=b;return 21872}t=0;La(18,21872,21896,8);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;rc(21888);Wb(c|0)}Td(290,21872,p|0)|0;Nb(21888);i=b;return 21872}function PA(b){b=b|0;var c=0,d=0,e=0;b=i;if((a[21928]|0)!=0){i=b;return 21912}if((Va(21928)|0)==0){i=b;return 21912}t=0;c=oa(109,21936)|0;d=t;t=0;do{if(!(d&1)){t=0;La(57,21912,21936,c|0);e=t;t=0;if(e&1){break}Td(291,21912,p|0)|0;Nb(21928);i=b;return 21912}}while(0);b=Kb(-1,-1)|0;rc(21928);Wb(b|0);return 0}function QA(b){b=b|0;var c=0;b=i;if((a[21992]|0)!=0){i=b;return 21976}if((Va(21992)|0)==0){i=b;return 21976}t=0;La(18,21976,22e3,20);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;rc(21992);Wb(c|0)}Td(290,21976,p|0)|0;Nb(21992);i=b;return 21976}function RA(b){b=b|0;var c=0,d=0,e=0;b=i;if((a[22040]|0)!=0){i=b;return 22024}if((Va(22040)|0)==0){i=b;return 22024}t=0;c=oa(109,22048)|0;d=t;t=0;do{if(!(d&1)){t=0;La(57,22024,22048,c|0);e=t;t=0;if(e&1){break}Td(291,22024,p|0)|0;Nb(22040);i=b;return 22024}}while(0);b=Kb(-1,-1)|0;rc(22040);Wb(b|0);return 0}function SA(b){b=b|0;var c=0;b=i;if((a[22152]|0)!=0){i=b;return 22136}if((Va(22152)|0)==0){i=b;return 22136}t=0;La(18,22136,22160,11);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;rc(22152);Wb(c|0)}Td(290,22136,p|0)|0;Nb(22152);i=b;return 22136}function TA(b){b=b|0;var c=0,d=0,e=0;b=i;if((a[22192]|0)!=0){i=b;return 22176}if((Va(22192)|0)==0){i=b;return 22176}t=0;c=oa(109,22200)|0;d=t;t=0;do{if(!(d&1)){t=0;La(57,22176,22200,c|0);e=t;t=0;if(e&1){break}Td(291,22176,p|0)|0;Nb(22192);i=b;return 22176}}while(0);b=Kb(-1,-1)|0;rc(22192);Wb(b|0);return 0}function UA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0,n=0.0;f=i;i=i+8|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Hc()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;l=sa(33,2147483647,21264,0)|0;m=t;t=0;if(m&1){m=Kb(-1,-1)|0;rc(21256);Wb(m|0)}else{c[5312]=l;Nb(21256);break}}}while(0);n=+mC(b,g,c[5312]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=n;i=f;return+h}c[e>>2]=4;h=n;i=f;return+h}function VA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0,n=0.0;f=i;i=i+8|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Hc()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;l=sa(33,2147483647,21264,0)|0;m=t;t=0;if(m&1){m=Kb(-1,-1)|0;rc(21256);Wb(m|0)}else{c[5312]=l;Nb(21256);break}}}while(0);n=+mC(b,g,c[5312]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=n;i=f;return+h}c[e>>2]=4;h=n;i=f;return+h}function WA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0,n=0.0;f=i;i=i+8|0;g=f;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Hc()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;l=sa(33,2147483647,21264,0)|0;m=t;t=0;if(m&1){m=Kb(-1,-1)|0;rc(21256);Wb(m|0)}else{c[5312]=l;Nb(21256);break}}}while(0);n=+mC(b,g,c[5312]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=n;i=f;return+h}function XA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;I=k;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;I=k;i=g;return j|0}l=Hc()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;n=sa(33,2147483647,21264,0)|0;o=t;t=0;if(o&1){o=Kb(-1,-1)|0;rc(21256);Wb(o|0)}else{c[5312]=n;Nb(21256);break}}}while(0);n=ic(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;I=k;i=g;return j|0}if((b|0)!=34){j=n;k=f;I=k;i=g;return j|0}c[e>>2]=4;j=-1;k=-1;I=k;i=g;return j|0}function YA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Hc()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;m=sa(33,2147483647,21264,0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1)|0;rc(21256);Wb(n|0)}else{c[5312]=m;Nb(21256);break}}}while(0);m=ic(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function ZA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Hc()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;m=sa(33,2147483647,21264,0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1)|0;rc(21256);Wb(n|0)}else{c[5312]=m;Nb(21256);break}}}while(0);m=ic(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function _A(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Hc()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;m=sa(33,2147483647,21264,0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1)|0;rc(21256);Wb(n|0)}else{c[5312]=m;Nb(21256);break}}}while(0);m=ic(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((b|0)==34|(f>>>0>0|(f|0)==0&m>>>0>65535)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function $A(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;I=k;i=g;return j|0}l=Hc()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;n=sa(33,2147483647,21264,0)|0;o=t;t=0;if(o&1){o=Kb(-1,-1)|0;rc(21256);Wb(o|0)}else{c[5312]=n;Nb(21256);break}}}while(0);n=wb(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;I=k;i=g;return j|0}if((b|0)==34){c[e>>2]=4;e=(f|0)>0|(f|0)==0&n>>>0>0;I=e?2147483647:-2147483648;i=g;return(e?-1:0)|0}else{j=n;k=f;I=k;i=g;return j|0}return 0}function aB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Hc()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21256]|0)==0){if((Va(21256)|0)==0){break}t=0;m=sa(33,2147483647,21264,0)|0;n=t;t=0;if(n&1){n=Kb(-1,-1)|0;rc(21256);Wb(n|0)}else{c[5312]=m;Nb(21256);break}}}while(0);m=wb(b|0,h|0,f|0,c[5312]|0)|0;f=I;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;if((f|0)>0|(f|0)==0&m>>>0>0){j=2147483647}else{break}i=g;return j|0}else{if((f|0)<-1|(f|0)==-1&m>>>0<2147483648){c[e>>2]=4;break}if((f|0)>0|(f|0)==0&m>>>0>2147483647){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function bB(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;b=i;e=a+4|0;f=e;g=d[f]|d[f+1|0]<<8|d[f+2|0]<<16|d[f+3|0]<<24;f=e+4|0;e=d[f]|d[f+1|0]<<8|d[f+2|0]<<16|d[f+3|0]<<24;f=(c[a>>2]|0)+(e>>1)|0;a=f;if((e&1|0)==0){h=g;Zd[h&511](a);i=b;return}else{h=c[(c[f>>2]|0)+g>>2]|0;Zd[h&511](a);i=b;return}}function cB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;f=b+8|0;g=b+4|0;h=c[g>>2]|0;j=c[f>>2]|0;k=h;if(!(j-k>>2>>>0<d>>>0)){l=d;m=h;do{if((m|0)==0){n=0}else{c[m>>2]=0;n=c[g>>2]|0}m=n+4|0;c[g>>2]=m;l=l+ -1|0;}while((l|0)!=0);i=e;return}l=b+16|0;m=b;n=c[m>>2]|0;h=k-n>>2;k=h+d|0;if(k>>>0>1073741823){Uy(0)}o=j-n|0;do{if(o>>2>>>0<536870911){n=o>>1;j=n>>>0<k>>>0?k:n;if((j|0)==0){p=0;q=0;break}n=b+128|0;if(!((a[n]|0)==0&j>>>0<29)){r=j;s=11;break}a[n]=1;p=j;q=l}else{r=1073741823;s=11}}while(0);if((s|0)==11){p=r;q=YB(r<<2)|0}r=d;d=q+(h<<2)|0;do{if((d|0)==0){t=0}else{c[d>>2]=0;t=d}d=t+4|0;r=r+ -1|0;}while((r|0)!=0);r=c[m>>2]|0;t=(c[g>>2]|0)-r|0;s=q+(h-(t>>2)<<2)|0;h=r;qC(s|0,h|0,t|0)|0;c[m>>2]=s;c[g>>2]=d;c[f>>2]=q+(p<<2);if((r|0)==0){i=e;return}if((l|0)==(r|0)){a[b+128|0]=0;i=e;return}else{_B(h);i=e;return}}function dB(a){a=a|0;a=i;Dt(26460|0);Dt(26448|0);Dt(26436|0);Dt(26424|0);Dt(26412|0);Dt(26400|0);Dt(26388|0);Dt(26376|0);Dt(26364|0);Dt(26352|0);Dt(26340|0);Dt(26328|0);Dt(26316|0);Dt(26304|0);Dt(26292|0);Dt(26280|0);Dt(26268|0);Dt(26256|0);Dt(26244|0);Dt(26232|0);Dt(26220|0);Dt(26208|0);Dt(26196|0);Dt(26184);i=a;return}function eB(a){a=a|0;a=i;lt(26788|0);lt(26776|0);lt(26764|0);lt(26752|0);lt(26740|0);lt(26728|0);lt(26716|0);lt(26704|0);lt(26692|0);lt(26680|0);lt(26668|0);lt(26656|0);lt(26644|0);lt(26632|0);lt(26620|0);lt(26608|0);lt(26596|0);lt(26584|0);lt(26572|0);lt(26560|0);lt(26548|0);lt(26536|0);lt(26524|0);lt(26512);i=a;return}function fB(a){a=a|0;a=i;Dt(27100|0);Dt(27088|0);Dt(27076|0);Dt(27064|0);Dt(27052|0);Dt(27040|0);Dt(27028|0);Dt(27016|0);Dt(27004|0);Dt(26992|0);Dt(26980|0);Dt(26968|0);Dt(26956|0);Dt(26944|0);Dt(26932|0);Dt(26920|0);Dt(26908|0);Dt(26896|0);Dt(26884|0);Dt(26872|0);Dt(26860|0);Dt(26848|0);Dt(26836|0);Dt(26824);i=a;return}function gB(a){a=a|0;a=i;lt(27940|0);lt(27928|0);lt(27916|0);lt(27904|0);lt(27892|0);lt(27880|0);lt(27868|0);lt(27856|0);lt(27844|0);lt(27832|0);lt(27820|0);lt(27808|0);lt(27796|0);lt(27784|0);lt(27772|0);lt(27760|0);lt(27748|0);lt(27736|0);lt(27724|0);lt(27712|0);lt(27700|0);lt(27688|0);lt(27676|0);lt(27664);i=a;return}function hB(a){a=a|0;a=i;Dt(28332|0);Dt(28320|0);Dt(28308|0);Dt(28296|0);Dt(28284|0);Dt(28272|0);Dt(28260|0);Dt(28248|0);Dt(28236|0);Dt(28224|0);Dt(28212|0);Dt(28200|0);Dt(28188|0);Dt(28176);i=a;return}function iB(a){a=a|0;a=i;lt(28868|0);lt(28856|0);lt(28844|0);lt(28832|0);lt(28820|0);lt(28808|0);lt(28796|0);lt(28784|0);lt(28772|0);lt(28760|0);lt(28748|0);lt(28736|0);lt(28724|0);lt(28712);i=a;return}function jB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;e=kB(0,a,b,(c|0)!=0?c:29232)|0;i=d;return e|0}function kB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g;c[h>>2]=b;j=(f|0)==0?29240:f;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n+ -194|0;if(l>>>0>50){break a}o=e+ -1|0;p=c[29024+(l<<2)>>2]|0;q=d+1|0;break}}else{o=e;p=f;q=d}}while(0);b:do{if((o|0)==0){r=p}else{l=a[q]|0;n=(l&255)>>>3;if((n+ -16|n+(p>>26))>>>0>7){break a}else{s=o;t=l;u=p;v=q}while(1){v=v+1|0;u=(t&255)+ -128|u<<6;s=s+ -1|0;if((u|0)>=0){break}if((s|0)==0){r=u;break b}t=a[v]|0;if(((t&255)+ -128|0)>>>0>63){break a}}c[j>>2]=0;c[m>>2]=u;k=e-s|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;j=Hc()|0;c[j>>2]=84;k=-1;i=g;return k|0}function lB(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;g=i;i=i+1032|0;h=g+1024|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=g;m=k?e:256;e=k?a:l;a:do{if((j|0)==0|(m|0)==0){n=d;o=m;p=j;q=0;r=e}else{a=d;s=m;t=j;u=0;v=e;while(1){w=a>>>2;x=w>>>0>=s>>>0;if(!(x|a>>>0>131)){n=a;o=s;p=t;q=u;r=v;break a}y=x?s:w;z=a-y|0;w=mB(v,h,y,f)|0;if((w|0)==-1){break}if((v|0)==(l|0)){A=s;B=l}else{A=s-w|0;B=v+(w<<2)|0}y=w+u|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){n=z;o=A;p=w;q=y;r=B;break a}else{a=z;s=A;t=w;u=y;v=B}}n=z;o=0;p=c[h>>2]|0;q=-1;r=v}}while(0);b:do{if((p|0)==0){C=q}else{if((o|0)==0|(n|0)==0){C=q;break}else{D=n;E=o;F=p;G=q;H=r}while(1){I=kB(H,F,D,f)|0;if((I+2|0)>>>0<3){break}z=(c[h>>2]|0)+I|0;c[h>>2]=z;B=E+ -1|0;A=G+1|0;if((B|0)==0|(D|0)==(I|0)){C=A;break b}else{D=D-I|0;E=B;F=z;G=A;H=H+4|0}}if((I|0)==-1){C=-1;break}else if((I|0)==0){c[h>>2]=0;C=G;break}else{c[f>>2]=0;C=G;break}}}while(0);if(!k){i=g;return C|0}c[b>>2]=c[h>>2];i=g;return C|0}function mB(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;h=i;j=c[e>>2]|0;do{if((g|0)==0){k=5}else{l=g;m=c[l>>2]|0;if((m|0)==0){k=5;break}if((b|0)==0){n=f;o=m;p=j;k=16;break}c[l>>2]=0;q=b;r=f;s=m;t=j;k=36}}while(0);if((k|0)==5){if((b|0)==0){u=f;v=j;k=7}else{w=b;x=f;y=j;k=6}}a:while(1){if((k|0)==6){k=0;if((x|0)==0){z=f;k=53;break}else{A=w;B=x;C=y}while(1){j=a[C]|0;do{if(((j&255)+ -1|0)>>>0<127){if((C&3|0)==0&B>>>0>3){D=A;E=B;F=C}else{G=A;H=B;I=j;J=C;break}while(1){K=c[F>>2]|0;if(((K+ -16843009|K)&-2139062144|0)!=0){k=30;break}c[D>>2]=K&255;c[D+4>>2]=d[F+1|0]|0;c[D+8>>2]=d[F+2|0]|0;L=F+4|0;M=D+16|0;c[D+12>>2]=d[F+3|0]|0;N=E+ -4|0;if(N>>>0>3){D=M;E=N;F=L}else{k=31;break}}if((k|0)==30){k=0;G=D;H=E;I=K&255;J=F;break}else if((k|0)==31){k=0;G=M;H=N;I=a[L]|0;J=L;break}}else{G=A;H=B;I=j;J=C}}while(0);O=I&255;if(!((O+ -1|0)>>>0<127)){break}c[G>>2]=O;j=H+ -1|0;if((j|0)==0){z=f;k=53;break a}else{A=G+4|0;B=j;C=J+1|0}}j=O+ -194|0;if(j>>>0>50){P=G;Q=H;R=J;k=47;break}q=G;r=H;s=c[29024+(j<<2)>>2]|0;t=J+1|0;k=36;continue}else if((k|0)==7){k=0;j=a[v]|0;do{if(((j&255)+ -1|0)>>>0<127){if((v&3|0)!=0){S=u;T=j;U=v;break}g=c[v>>2]|0;if(((g+ -16843009|g)&-2139062144|0)==0){m=u;l=v;while(1){V=l+4|0;W=m+ -4|0;X=c[V>>2]|0;if(((X+ -16843009|X)&-2139062144|0)==0){l=V;m=W}else{Y=W;Z=X;_=V;break}}}else{Y=u;Z=g;_=v}S=Y;T=Z&255;U=_}else{S=u;T=j;U=v}}while(0);j=T&255;if((j+ -1|0)>>>0<127){u=S+ -1|0;v=U+1|0;k=7;continue}m=j+ -194|0;if(m>>>0>50){P=b;Q=S;R=U;k=47;break}n=S;o=c[29024+(m<<2)>>2]|0;p=U+1|0;k=16;continue}else if((k|0)==16){k=0;m=(d[p]|0)>>>3;if((m+ -16|m+(o>>26))>>>0>7){k=17;break}m=p+1|0;do{if((o&33554432|0)==0){$=m}else{if(((d[m]|0)+ -128|0)>>>0>63){k=20;break a}j=p+2|0;if((o&524288|0)==0){$=j;break}if(((d[j]|0)+ -128|0)>>>0>63){k=23;break a}$=p+3|0}}while(0);u=n+ -1|0;v=$;k=7;continue}else if((k|0)==36){k=0;m=d[t]|0;j=m>>>3;if((j+ -16|j+(s>>26))>>>0>7){k=37;break}j=t+1|0;aa=m+ -128|s<<6;do{if((aa|0)<0){m=(d[j]|0)+ -128|0;if(m>>>0>63){k=40;break a}l=t+2|0;ba=m|aa<<6;if((ba|0)>=0){ca=ba;da=l;break}m=(d[l]|0)+ -128|0;if(m>>>0>63){k=43;break a}ca=m|ba<<6;da=t+3|0}else{ca=aa;da=j}}while(0);c[q>>2]=ca;w=q+4|0;x=r+ -1|0;y=da;k=6;continue}}if((k|0)==17){ea=b;fa=n;ga=o;ha=p+ -1|0;k=46}else if((k|0)==20){ea=b;fa=n;ga=o;ha=p+ -1|0;k=46}else if((k|0)==23){ea=b;fa=n;ga=o;ha=p+ -1|0;k=46}else if((k|0)==37){ea=q;fa=r;ga=s;ha=t+ -1|0;k=46}else if((k|0)==40){ea=q;fa=r;ga=aa;ha=t+ -1|0;k=46}else if((k|0)==43){ea=q;fa=r;ga=ba;ha=t+ -1|0;k=46}else if((k|0)==53){i=h;return z|0}if((k|0)==46){if((ga|0)==0){P=ea;Q=fa;R=ha;k=47}else{ia=ea;ja=ha}}do{if((k|0)==47){if((a[R]|0)!=0){ia=P;ja=R;break}if((P|0)!=0){c[P>>2]=0;c[e>>2]=0}z=f-Q|0;i=h;return z|0}}while(0);Q=Hc()|0;c[Q>>2]=84;if((ia|0)==0){z=-1;i=h;return z|0}c[e>>2]=ja;z=-1;i=h;return z|0}function nB(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m+ -194|0;if(k>>>0>50){break}m=e+1|0;n=c[29024+(k<<2)>>2]|0;if(f>>>0<4){if((n&-2147483648>>>((f*6|0)+ -6|0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m+ -16|m+(n>>26))>>>0>7){break}m=k+ -128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)+ -128|0;if(n>>>0>63){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)+ -128|0;if(m>>>0>63){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);l=Hc()|0;c[l>>2]=84;j=-1;i=g;return j|0}function oB(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=i;if((b|0)==0){f=1;i=e;return f|0}if(d>>>0<128){a[b]=d;f=1;i=e;return f|0}if(d>>>0<2048){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;i=e;return f|0}if(d>>>0<55296|(d+ -57344|0)>>>0<8192){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;i=e;return f|0}if((d+ -65536|0)>>>0<1048576){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;i=e;return f|0}else{d=Hc()|0;c[d>>2]=84;f=-1;i=e;return f|0}return 0}function pB(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+264|0;g=f+256|0;h=f;j=c[b>>2]|0;c[g>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:h;a:do{if((j|0)==0|(l|0)==0){m=d;n=l;o=j;p=0;q=e}else{a=d;r=l;s=j;t=0;u=e;while(1){v=a>>>0>=r>>>0;if(!(v|a>>>0>32)){m=a;n=r;o=s;p=t;q=u;break a}w=v?r:a;x=a-w|0;v=qB(u,g,w,0)|0;if((v|0)==-1){break}if((u|0)==(h|0)){y=r;z=h}else{y=r-v|0;z=u+v|0}w=v+t|0;v=c[g>>2]|0;if((v|0)==0|(y|0)==0){m=x;n=y;o=v;p=w;q=z;break a}else{a=x;r=y;s=v;t=w;u=z}}m=x;n=0;o=c[g>>2]|0;p=-1;q=u}}while(0);b:do{if((o|0)==0){A=p}else{if((n|0)==0|(m|0)==0){A=p;break}else{B=m;C=n;D=o;E=p;F=q}while(1){G=oB(F,c[D>>2]|0,0)|0;if((G+1|0)>>>0<2){break}x=(c[g>>2]|0)+4|0;c[g>>2]=x;z=B+ -1|0;y=E+1|0;if((C|0)==(G|0)|(z|0)==0){A=y;break b}else{B=z;C=C-G|0;D=x;E=y;F=F+G|0}}if((G|0)!=0){A=-1;break}c[g>>2]=0;A=E}}while(0);if(!k){i=f;return A|0}c[b>>2]=c[g>>2];i=f;return A|0}function qB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f;if((b|0)==0){h=c[d>>2]|0;j=g;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=k;o=h}while(1){if(n>>>0>127){h=oB(j,n,0)|0;if((h|0)==-1){l=-1;p=26;break}else{q=h}}else{q=1}h=q+m|0;k=o+4|0;r=c[k>>2]|0;if((r|0)==0){l=h;p=26;break}else{m=h;n=r;o=k}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3){o=b;n=e;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127){j=oB(o,q,0)|0;if((j|0)==-1){l=-1;break}u=o+j|0;v=n-j|0;w=m}else{a[o]=q;u=o+1|0;v=n+ -1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3){o=u;n=v;m=q}else{s=u;t=v;break a}}i=f;return l|0}else{s=b;t=e}}while(0);b:do{if((t|0)==0){x=0}else{b=g;v=s;u=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127){n=oB(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(n>>>0>u>>>0){p=20;break}oB(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u+ -1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break b}else{v=y;u=z;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==26){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function rB(a){a=a|0;var b=0,d=0;b=i;d=a;while(1){if((c[d>>2]|0)==0){break}else{d=d+4|0}}i=b;return d-a>>2|0}function sB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((d|0)==0){i=e;return a|0}else{f=d;g=b;h=a}while(1){b=f+ -1|0;c[h>>2]=c[g>>2];if((b|0)==0){break}else{h=h+4|0;g=g+4|0;f=b}}i=e;return a|0}function tB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=(d|0)==0;do{if(a-b>>2>>>0<d>>>0){if(f){break}else{g=d}do{g=g+ -1|0;c[a+(g<<2)>>2]=c[b+(g<<2)>>2];}while((g|0)!=0)}else{if(f){break}else{h=b;j=a;k=d}while(1){l=k+ -1|0;c[j>>2]=c[h>>2];if((l|0)==0){break}else{k=l;j=j+4|0;h=h+4|0}}}}while(0);i=e;return a|0}function uB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;if((d|0)!=0){f=d;d=a;while(1){g=f+ -1|0;c[d>>2]=b;if((g|0)==0){break}else{d=d+4|0;f=g}}}i=e;return a|0}function vB(a){a=a|0;i=i;return}function wB(a){a=a|0;c[a>>2]=29256;i=i;return}function xB(a){a=a|0;var b=0;b=i;ub(a|0);_B(a);i=b;return}function yB(a){a=a|0;var b=0;b=i;ub(a|0);i=b;return}function zB(a){a=a|0;i=i;return 29272}function AB(a){a=a|0;i=i;return}function BB(a){a=a|0;i=i;return}function CB(a){a=a|0;i=i;return}function DB(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function EB(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function FB(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function GB(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function HB(a,b,c){a=a|0;b=b|0;c=c|0;i=i;return(a|0)==(b|0)|0}function IB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+56|0;f=e;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=MB(b,29384,29440,0)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}j=f+0|0;k=j+56|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;ze[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function JB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((c[d+8>>2]|0)!=(b|0)){i=g;return}b=d+16|0;h=c[b>>2]|0;if((h|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function KB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((b|0)!=(c[d+8>>2]|0)){h=c[b+8>>2]|0;ze[c[(c[h>>2]|0)+28>>2]&31](h,d,e,f);i=g;return}h=d+16|0;b=c[h>>2]|0;if((b|0)==0){c[h>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function LB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;if((b|0)==(c[d+8>>2]|0)){h=d+16|0;j=c[h>>2]|0;if((j|0)==0){c[h>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((j|0)!=(e|0)){j=d+36|0;c[j>>2]=(c[j>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}j=d+24|0;if((c[j>>2]|0)!=2){i=g;return}c[j>>2]=f;i=g;return}j=c[b+12>>2]|0;h=b+(j<<3)+16|0;k=c[b+20>>2]|0;l=k>>8;if((k&1|0)==0){m=l}else{m=c[(c[e>>2]|0)+l>>2]|0}l=c[b+16>>2]|0;ze[c[(c[l>>2]|0)+28>>2]&31](l,d,e+m|0,(k&2|0)!=0?f:2);if((j|0)<=1){i=g;return}j=d+54|0;k=e;m=b+24|0;while(1){b=c[m+4>>2]|0;l=b>>8;if((b&1|0)==0){n=l}else{n=c[(c[k>>2]|0)+l>>2]|0}l=c[m>>2]|0;ze[c[(c[l>>2]|0)+28>>2]&31](l,d,e+n|0,(b&2|0)!=0?f:2);if((a[j]|0)!=0){o=16;break}b=m+8|0;if(b>>>0<h>>>0){m=b}else{o=16;break}}if((o|0)==16){i=g;return}}function MB(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+56|0;j=h;k=c[d>>2]|0;l=d+(c[k+ -8>>2]|0)|0;m=c[k+ -4>>2]|0;k=m;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;n=j+28|0;o=j+32|0;p=j+40|0;q=(m|0)==(f|0);f=g;r=f+0|0;s=r+36|0;do{c[r>>2]=0;r=r+4|0}while((r|0)<(s|0));b[f+36>>1]=0;a[f+38|0]=0;if(q){c[j+48>>2]=1;he[c[(c[m>>2]|0)+20>>2]&31](k,j,l,l,1,0);t=(c[d>>2]|0)==1?l:0;i=h;return t|0}Yd[c[(c[m>>2]|0)+24>>2]&3](k,j,l,1,0);l=c[j+36>>2]|0;if((l|0)==1){do{if((c[d>>2]|0)!=1){if((c[p>>2]|0)!=0){t=0;i=h;return t|0}if((c[n>>2]|0)!=1){t=0;i=h;return t|0}if((c[o>>2]|0)==1){break}else{t=0}i=h;return t|0}}while(0);t=c[g>>2]|0;i=h;return t|0}else if((l|0)==0){if((c[p>>2]|0)!=1){t=0;i=h;return t|0}if((c[n>>2]|0)!=1){t=0;i=h;return t|0}t=(c[o>>2]|0)==1?c[e>>2]|0:0;i=h;return t|0}else{t=0;i=h;return t|0}return 0}function NB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;h=i;j=b;if((j|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}k=d+28|0;if((c[k>>2]|0)==1){i=h;return}c[k>>2]=f;i=h;return}if((j|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){j=d+20|0;if((c[j>>2]|0)==(e|0)){break}c[d+32>>2]=f;k=d+44|0;if((c[k>>2]|0)==4){i=h;return}l=c[b+12>>2]|0;m=b+(l<<3)+16|0;a:do{if((l|0)>0){n=d+52|0;o=d+53|0;p=d+54|0;q=b+8|0;r=d+24|0;s=e;t=0;u=0;v=b+16|0;b:while(1){a[n]=0;a[o]=0;w=c[v+4>>2]|0;x=w>>8;if((w&1|0)==0){y=x}else{y=c[(c[s>>2]|0)+x>>2]|0}x=c[v>>2]|0;he[c[(c[x>>2]|0)+20>>2]&31](x,d,e,e+y|0,2-(w>>>1&1)|0,g);if((a[p]|0)!=0){z=t;A=u;break}do{if((a[o]|0)==0){B=t;C=u}else{if((a[n]|0)==0){if((c[q>>2]&1|0)==0){z=t;A=1;break b}else{B=t;C=1;break}}if((c[r>>2]|0)==1){D=27;break a}if((c[q>>2]&2|0)==0){D=27;break a}else{B=1;C=1}}}while(0);w=v+8|0;if(w>>>0<m>>>0){t=B;u=C;v=w}else{z=B;A=C;break}}if(z){E=A;D=26}else{F=A;D=23}}else{F=0;D=23}}while(0);do{if((D|0)==23){c[j>>2]=e;m=d+40|0;c[m>>2]=(c[m>>2]|0)+1;if((c[d+36>>2]|0)!=1){E=F;D=26;break}if((c[d+24>>2]|0)!=2){E=F;D=26;break}a[d+54|0]=1;if(F){D=27}else{D=28}}}while(0);if((D|0)==26){if(E){D=27}else{D=28}}if((D|0)==27){c[k>>2]=3;i=h;return}else if((D|0)==28){c[k>>2]=4;i=h;return}}}while(0);if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}E=c[b+12>>2]|0;F=b+(E<<3)+16|0;A=c[b+20>>2]|0;z=A>>8;if((A&1|0)==0){G=z}else{G=c[(c[e>>2]|0)+z>>2]|0}z=c[b+16>>2]|0;Yd[c[(c[z>>2]|0)+24>>2]&3](z,d,e+G|0,(A&2|0)!=0?f:2,g);A=b+24|0;if((E|0)<=1){i=h;return}E=c[b+8>>2]|0;do{if((E&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((E&1|0)==0){G=d+54|0;z=e;C=A;while(1){if((a[G]|0)!=0){D=53;break}if((c[b>>2]|0)==1){D=53;break}B=c[C+4>>2]|0;y=B>>8;if((B&1|0)==0){H=y}else{H=c[(c[z>>2]|0)+y>>2]|0}y=c[C>>2]|0;Yd[c[(c[y>>2]|0)+24>>2]&3](y,d,e+H|0,(B&2|0)!=0?f:2,g);B=C+8|0;if(B>>>0<F>>>0){C=B}else{D=53;break}}if((D|0)==53){i=h;return}}C=d+24|0;z=d+54|0;G=e;k=A;while(1){if((a[z]|0)!=0){D=53;break}if((c[b>>2]|0)==1){if((c[C>>2]|0)==1){D=53;break}}B=c[k+4>>2]|0;y=B>>8;if((B&1|0)==0){I=y}else{I=c[(c[G>>2]|0)+y>>2]|0}y=c[k>>2]|0;Yd[c[(c[y>>2]|0)+24>>2]&3](y,d,e+I|0,(B&2|0)!=0?f:2,g);B=k+8|0;if(B>>>0<F>>>0){k=B}else{D=53;break}}if((D|0)==53){i=h;return}}}while(0);I=d+54|0;H=e;E=A;while(1){if((a[I]|0)!=0){D=53;break}A=c[E+4>>2]|0;k=A>>8;if((A&1|0)==0){J=k}else{J=c[(c[H>>2]|0)+k>>2]|0}k=c[E>>2]|0;Yd[c[(c[k>>2]|0)+24>>2]&3](k,d,e+J|0,(A&2|0)!=0?f:2,g);A=E+8|0;if(A>>>0<F>>>0){E=A}else{D=53;break}}if((D|0)==53){i=h;return}}function OB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=b;if((j|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}k=d+28|0;if((c[k>>2]|0)==1){i=h;return}c[k>>2]=f;i=h;return}if((j|0)!=(c[d>>2]|0)){j=c[b+8>>2]|0;Yd[c[(c[j>>2]|0)+24>>2]&3](j,d,e,f,g);i=h;return}do{if((c[d+16>>2]|0)!=(e|0)){j=d+20|0;if((c[j>>2]|0)==(e|0)){break}c[d+32>>2]=f;k=d+44|0;if((c[k>>2]|0)==4){i=h;return}l=d+52|0;a[l]=0;m=d+53|0;a[m]=0;n=c[b+8>>2]|0;he[c[(c[n>>2]|0)+20>>2]&31](n,d,e,e,1,g);if((a[m]|0)==0){o=0;p=13}else{if((a[l]|0)==0){o=1;p=13}}a:do{if((p|0)==13){c[j>>2]=e;l=d+40|0;c[l>>2]=(c[l>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){p=16;break}a[d+54|0]=1;if(o){break a}}else{p=16}}while(0);if((p|0)==16){if(o){break}}c[k>>2]=4;i=h;return}}while(0);c[k>>2]=3;i=h;return}}while(0);if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function PB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}h=d+28|0;if((c[h>>2]|0)==1){i=g;return}c[h>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;i=g;return}}while(0);if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function QB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;if((b|0)!=(c[d+8>>2]|0)){k=d+52|0;l=a[k]|0;m=d+53|0;n=a[m]|0;o=c[b+12>>2]|0;p=b+(o<<3)+16|0;a[k]=0;a[m]=0;q=c[b+20>>2]|0;r=q>>8;if((q&1|0)==0){s=r}else{s=c[(c[f>>2]|0)+r>>2]|0}r=c[b+16>>2]|0;he[c[(c[r>>2]|0)+20>>2]&31](r,d,e,f+s|0,(q&2|0)!=0?g:2,h);a:do{if((o|0)>1){q=d+24|0;s=b+8|0;r=d+54|0;t=f;u=b+24|0;do{if((a[r]|0)!=0){break a}do{if((a[k]|0)==0){if((a[m]|0)==0){break}if((c[s>>2]&1|0)==0){break a}}else{if((c[q>>2]|0)==1){break a}if((c[s>>2]&2|0)==0){break a}}}while(0);a[k]=0;a[m]=0;v=c[u+4>>2]|0;w=v>>8;if((v&1|0)==0){x=w}else{x=c[(c[t>>2]|0)+w>>2]|0}w=c[u>>2]|0;he[c[(c[w>>2]|0)+20>>2]&31](w,d,e,f+x|0,(v&2|0)!=0?g:2,h);u=u+8|0;}while(u>>>0<p>>>0)}}while(0);a[k]=l;a[m]=n;i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;f=d+16|0;n=c[f>>2]|0;if((n|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((n|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;n=c[e>>2]|0;if((n|0)==2){c[e>>2]=g;y=g}else{y=n}if(!((c[d+48>>2]|0)==1&(y|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function RB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;if((b|0)!=(c[d+8>>2]|0)){k=c[b+8>>2]|0;he[c[(c[k>>2]|0)+20>>2]&31](k,d,e,f,g,h);i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;l=g}else{l=h}if(!((c[d+48>>2]|0)==1&(l|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function SB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;h=i;if((c[d+8>>2]|0)!=(b|0)){i=h;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=h;return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;i=h;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;j=g}else{j=b}if(!((c[d+48>>2]|0)==1&(j|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}



function pk(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,pa=0,qa=0,ra=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;g=i;i=i+80|0;h=g;j=g+8|0;k=g+16|0;l=g+32|0;m=g+40|0;n=g+72|0;o=i;i=i+8|0;p=i;i=i+24|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+32|0;u=i;i=i+8|0;v=u;w=i;i=i+8|0;x=i;i=i+16|0;y=i;i=i+8|0;z=i;i=i+16|0;A=i;i=i+192|0;B=i;i=i+16|0;C=i;i=i+16|0;D=i;i=i+16|0;qk(k,0,5024);Kl(j,k);rk(n,4904,4784);k=n;n=c[k+4>>2]|0;E=m+8|0;c[E>>2]=c[k>>2];c[E+4>>2]=n;n=m+16|0;c[n>>2]=79;c[n+4>>2]=0;c[m+24>>2]=d;t=0;na(80,l|0,m|0);m=t;t=0;a:do{if(m&1){F=26}else{rk(q,4912,4784);n=q;E=c[n+4>>2]|0;k=p+4|0;c[k>>2]=c[n>>2];c[k+4>>2]=E;E=p+12|0;c[E>>2]=81;c[E+4>>2]=0;c[p+20>>2]=d;t=0;na(82,o|0,p|0);E=t;t=0;b:do{if(E&1){F=27}else{rk(v,4920,4784);k=u;n=c[k+4>>2]|0;G=s+8|0;c[G>>2]=c[k>>2];c[G+4>>2]=n;n=s+16|0;c[n>>2]=83;c[n+4>>2]=0;c[s+24>>2]=d;t=0;na(80,r|0,s|0);n=t;t=0;c:do{if(n&1){F=28}else{G=x;c[G>>2]=l;c[G+4>>2]=o;c[x+8>>2]=r;t=0;na(84,w|0,x|0);G=t;t=0;d:do{if(G&1){F=29}else{b[z>>1]=102;k=z+4|0;c[k>>2]=85;c[k+4>>2]=0;c[z+12>>2]=d;t=0;na(86,y|0,z|0);k=t;t=0;e:do{if(k&1){F=30}else{H=A;J=e;if((a[J]&1)==0){K=e+1|0}else{K=c[e+8>>2]|0}L=A+108|0;M=A;N=A+8|0;O=A;c[M>>2]=3868;c[A+108>>2]=3888;c[A+4>>2]=0;t=0;na(54,A+108|0,N|0);P=t;t=0;f:do{if(P&1){Q=Kb(-1,-1)|0;R=I;S=Q;F=16}else{c[A+180>>2]=0;c[A+184>>2]=-1;c[M>>2]=3748;c[L>>2]=3768;t=0;ma(249,N|0);Q=t;t=0;if(Q&1){Q=Kb(-1,-1)|0;R=I;S=Q;F=16;break}do{if((bf(N,K,8)|0)==0){Q=c[(c[O>>2]|0)+ -12>>2]|0;t=0;na(43,H+Q|0,c[H+(Q+16)>>2]|4|0);Q=t;t=0;if(!(Q&1)){break}Q=Kb(-1,-1)|0;T=I;t=0;ma(233,N|0);U=t;t=0;if(!(U&1)){R=T;S=Q;F=16;break f}V=Kb(-1,-1,0)|0;W=I;Xe(V)}}while(0);g:do{if((c[A+72>>2]|0)==0){t=0;Q=Ea(25,16632,5032)|0;T=t;t=0;do{if(!(T&1)){if((a[J]&1)==0){X=e+1|0}else{X=c[e+8>>2]|0}t=0;U=Ea(25,Q|0,X|0)|0;Y=t;t=0;if(Y&1){break}t=0;Ea(25,U|0,5056)|0;U=t;t=0;if(!(U&1)){Z=0;break g}}}while(0);Q=Kb(-1,-1)|0;_=I;$=Q;F=55}else{Q=B;c[Q+0>>2]=0;c[Q+4>>2]=0;c[Q+8>>2]=0;T=A;U=B+1|0;Y=C;aa=w;ba=y;ca=C+8|0;da=C;ea=B+8|0;while(1){t=0;na(42,h|0,H+(c[(c[O>>2]|0)+ -12>>2]|0)|0);fa=t;t=0;if(fa&1){F=44;break}t=0;fa=Ea(20,h|0,21368)|0;ga=t;t=0;if(ga&1){F=38;break}t=0;ga=Ea(c[(c[fa>>2]|0)+28>>2]|0,fa|0,10)|0;fa=t;t=0;if(fa&1){F=38;break}t=0;ma(230,h|0);fa=t;t=0;if(fa&1){F=44;break}t=0;fa=sa(28,T|0,B|0,ga|0)|0;ga=t;t=0;if(ga&1){F=44;break}if((c[fa+((c[(c[fa>>2]|0)+ -12>>2]|0)+16)>>2]&5|0)!=0){F=47;break}fa=(a[Q]&1)==0?U:c[ea>>2]|0;ga=Y;c[ga>>2]=aa;c[ga+4>>2]=ba;c[ca>>2]=j;t=0;Oa(17,D|0,fa|0,da|0,4712);fa=t;t=0;if(fa&1){F=44;break}}do{if((F|0)==38){da=Kb(-1,-1)|0;ca=I;t=0;ma(230,h|0);ba=t;t=0;if(!(ba&1)){ha=ca;ia=da;break}da=Kb(-1,-1,0)|0;Xe(da)}else if((F|0)==44){da=Kb(-1,-1)|0;ha=I;ia=da}else if((F|0)==47){t=0;da=oa(91,N|0)|0;ca=t;t=0;do{if(!(ca&1)){if((da|0)==0){ba=c[(c[O>>2]|0)+ -12>>2]|0;t=0;na(43,H+ba|0,c[H+(ba+16)>>2]|4|0);ba=t;t=0;if(ba&1){break}}c[d+4>>2]=((c[d+24>>2]|0)-(c[d+20>>2]|0)|0)/12|0;c[d+8>>2]=((c[d+36>>2]|0)-(c[d+32>>2]|0)|0)/12|0;c[d+12>>2]=((c[d+48>>2]|0)-(c[d+44>>2]|0)|0)/12|0;c[d+16>>2]=((c[d+60>>2]|0)-(c[d+56>>2]|0)|0)/44|0;if(f){t=0;ma(250,d|0);ba=t;t=0;if(ba&1){break}}mt(B);Z=1;break g}}while(0);da=Kb(-1,-1)|0;ha=I;ia=da}}while(0);mt(B);_=ha;$=ia;F=55}}while(0);if((F|0)==55){t=0;ma(63,A|0);da=t;t=0;if(!(da&1)){ja=_;ka=$;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}t=0;ma(63,A|0);da=t;t=0;if(da&1){da=Kb(-1,-1)|0;qa=I;ra=da;F=32;break}t=0;ma(248,c[y>>2]|0);da=t;t=0;if(da&1){F=30;break e}t=0;ma(248,c[w>>2]|0);da=t;t=0;if(da&1){F=29;break d}t=0;ma(248,c[r>>2]|0);da=t;t=0;if(da&1){F=28;break c}t=0;ma(248,c[o>>2]|0);da=t;t=0;if(da&1){F=27;break b}t=0;ma(248,c[l>>2]|0);da=t;t=0;if(da&1){F=26;break a}$m(c[j>>2]|0);i=g;return Z|0}}while(0);do{if((F|0)==16){t=0;ma(155,L|0);H=t;t=0;if(H&1){V=Kb(-1,-1,0)|0;W=I;Xe(V)}else{qa=R;ra=S;F=32;break}}}while(0);if((F|0)==32){ja=qa;ka=ra}t=0;ma(248,c[y>>2]|0);L=t;t=0;if(!(L&1)){ta=ja;ua=ka;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}}while(0);if((F|0)==30){k=Kb(-1,-1)|0;ta=I;ua=k}t=0;ma(248,c[w>>2]|0);k=t;t=0;if(!(k&1)){va=ta;wa=ua;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}}while(0);if((F|0)==29){G=Kb(-1,-1)|0;va=I;wa=G}t=0;ma(248,c[r>>2]|0);G=t;t=0;if(!(G&1)){xa=va;ya=wa;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}}while(0);if((F|0)==28){n=Kb(-1,-1)|0;xa=I;ya=n}t=0;ma(248,c[o>>2]|0);n=t;t=0;if(!(n&1)){za=xa;Aa=ya;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}}while(0);if((F|0)==27){E=Kb(-1,-1)|0;za=I;Aa=E}t=0;ma(248,c[l>>2]|0);E=t;t=0;if(!(E&1)){Ba=za;Ca=Aa;break}la=Kb(-1,-1,0)|0;pa=I;Xe(la)}}while(0);if((F|0)==26){F=Kb(-1,-1)|0;Ba=I;Ca=F}t=0;ma(248,c[j>>2]|0);j=t;t=0;if(j&1){la=Kb(-1,-1,0)|0;pa=I;Xe(la)}else{Wb(Ca|0)}return 0}function qk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;f=e;while(1){if((a[f]|0)==0){break}else{f=f+1|0}}g=b;c[g>>2]=e;c[g+4>>2]=f;i=d;return}function rk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;f=d;while(1){if((a[f]|0)==0){break}else{f=f+1|0}}g=b;c[g>>2]=d;c[g+4>>2]=f;i=e;return}function sk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=f+8|0;c[g>>2]=d;j=d;while(1){c[h>>2]=j;if((a[j]|0)==0){break}else{j=j+1|0}}wk(b,g,h,e,0);i=f;return}function tk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0;e=i;f=b;a[b+121|0]=0;h=b+169|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+173|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+177|0;g[k>>2]=0.0;a[h]=a[k];a[h+1|0]=a[k+1|0];a[h+2|0]=a[k+2|0];a[h+3|0]=a[k+3|0];h=b+20|0;j=h+84|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(j|0));c[f>>2]=5072;a[b+120|0]=0;f=b+128|0;h=b+4|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;h=f;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;t=0;h=sa(5,b|0,d|0,1)|0;d=t;t=0;if(!(d&1)){a[b+168|0]=h&1;a[b+123|0]=0;i=e;return}e=Kb(-1,-1)|0;t=0;ma(1,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1,0)|0;Xe(b)}else{Wb(e|0)}}function uk(a){a=a|0;var b=0;b=i;Se(a);i=b;return}function vk(a){a=a|0;var b=0,c=0;b=i;t=0;ma(1,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function wk(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;g=i;i=i+24|0;h=g;j=g+8|0;k=g+16|0;c[h>>2]=c[d>>2];d=c[e>>2]|0;c[j>>2]=h;c[j+4>>2]=d;Ak(j,j)|0;xk(k,f,j);j=c[k>>2]|0;k=j>>31;f=c[h>>2]|0;if((k|0)==-1){l=0}else{l=(f|0)==(c[e>>2]|0)|0}c[b>>2]=f;a[b+4|0]=(k|0)!=-1|0;a[b+5|0]=l;c[b+8>>2]=j;i=g;return}function xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e;g=d;h=c[c[g>>2]>>2]|0;yk(f,b,d);j=c[f>>2]|0;if((j|0)<0){c[c[g>>2]>>2]=h;zk(a,c[b+8>>2]|0,d);i=e;return}else{c[a>>2]=j;i=e;return}}function yk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e;g=d;h=c[c[g>>2]>>2]|0;zk(f,c[b>>2]|0,d);j=c[f>>2]|0;if((j|0)<0){c[c[g>>2]>>2]=h;zk(a,c[b+4>>2]|0,d);i=e;return}else{c[a>>2]=j;i=e;return}}function zk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e;g=a;c[g>>2]=-1;a=c[b>>2]|0;if((a|0)==0){h=-1;c[g>>2]=h;i=e;return}we[c[(c[a>>2]|0)+8>>2]&63](f,a,d);h=c[f>>2]|0;c[g>>2]=h;i=e;return}function Ak(a,b){a=a|0;b=b|0;a=i;Bk(b,b);i=a;return(c[c[b>>2]>>2]|0)==(c[b+4>>2]|0)|0}function Bk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;b=i;e=d;f=c[c[e>>2]>>2]|0;g=d+4|0;if((f|0)==(c[g>>2]|0)){i=b;return}else{h=f}while(1){if(!(Ck(a[h]|0)|0)){j=4;break}f=c[e>>2]|0;c[f>>2]=(c[f>>2]|0)+1;f=c[c[e>>2]>>2]|0;if((f|0)==(c[g>>2]|0)){j=4;break}else{h=f}}if((j|0)==4){i=b;return}}function Ck(a){a=a|0;var b=0,c=0;b=i;c=(cd(a&255|0)|0)!=0;i=b;return c|0}function Dk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;g=i;i=i+8|0;h=g;t=0;La(25,h|0,b|0,1);j=t;t=0;do{if(j&1){k=12}else{if((a[h]|0)==0){i=g;return b|0}l=e;if((a[l]&1)==0){a[e+1|0]=0;a[l]=0;m=e+4|0}else{a[c[e+8>>2]|0]=0;n=e+4|0;c[n>>2]=0;m=n}n=b;o=b;p=0;while(1){q=c[o+((c[(c[n>>2]|0)+ -12>>2]|0)+24)>>2]|0;r=q+12|0;s=c[r>>2]|0;if((s|0)==(c[q+16>>2]|0)){t=0;u=oa(c[(c[q>>2]|0)+40>>2]|0,q|0)|0;q=t;t=0;if(q&1){k=11;break}if((u|0)==-1){v=2;w=p;break}else{x=u}}else{c[r>>2]=s+1;x=d[s]|0}s=p+1|0;r=x&255;if(r<<24>>24==f<<24>>24){v=0;w=s;break}t=0;na(87,e|0,r|0);r=t;t=0;if(r&1){k=11;break}if((a[l]&1)==0){p=s;continue}if((c[m>>2]|0)==-17){v=4;w=s;break}else{p=s}}if((k|0)==11){p=Kb(-1,-1,0)|0;y=n;z=o;A=p;break}p=c[(c[n>>2]|0)+ -12>>2]|0;t=0;na(43,o+p|0,c[o+(p+16)>>2]|((w|0)==0?v|4:v)|0);p=t;t=0;if(p&1){k=12;break}i=g;return b|0}}while(0);if((k|0)==12){k=Kb(-1,-1,0)|0;y=b;z=b;A=k}hb(A|0)|0;t=0;ma(232,z+(c[(c[y>>2]|0)+ -12>>2]|0)|0);y=t;t=0;if(!(y&1)){Ic();i=g;return b|0}b=Kb(-1,-1)|0;t=0;Ma(2);g=t;t=0;if(g&1){g=Kb(-1,-1,0)|0;Xe(g)}else{Wb(b|0)}return 0}function Ek(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(20)|0;c[e>>2]=5128;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[a>>2]=e;i=d;return}function Fk(a){a=a|0;i=i;return}function Gk(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Hk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Jk(a,b+4|0,c);i=d;return}function Ik(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(20)|0;c[d>>2]=5128;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];i=b;return d|0}function Jk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;Ak(d,d)|0;f=c[c[d>>2]>>2]|0;Kk(a,b,d);if((c[a>>2]|0)<0){i=e;return}Lk(b+4|0,c[b+12>>2]|0,f);i=e;return}function Kk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+24|0;g=f;h=f+8|0;j=f+16|0;Mk(h,d,e);k=g;l=c[h>>2]|0;c[k>>2]=l;m=h+4|0;if((a[m]|0)!=0){a[m]=0}do{if((l|0)>=0){Nk(j,d+1|0,e);if((c[j>>2]|0)<0){break}Ok(g,j);c[b>>2]=c[k>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function Lk(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=a;a=g;h=d[a]|d[a+1|0]<<8|d[a+2|0]<<16|d[a+3|0]<<24;a=g+4|0;g=d[a]|d[a+1|0]<<8|d[a+2|0]<<16|d[a+3|0]<<24;a=b+(g>>1)|0;b=a;if((g&1|0)==0){j=h;_d[j&255](b,e);i=f;return}else{j=c[(c[a>>2]|0)+h>>2]|0;_d[j&255](b,e);i=f;return}}function Mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;do{if(!(Ak(e,e)|0)){g=c[e>>2]|0;h=c[g>>2]|0;j=a[h]|0;if(!((a[d]|0)==j<<24>>24)){break}c[g>>2]=h+1;c[b>>2]=1;a[b+5|0]=j;a[b+4|0]=1;i=f;return}}while(0);c[b>>2]=-1;a[b+4|0]=0;i=f;return}function Nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;h=f+8|0;c[b>>2]=0;j=e;k=d;d=g;l=h;m=h+4|0;while(1){n=c[c[j>>2]>>2]|0;Pk(h,k,e);o=c[l>>2]|0;c[d>>2]=o;if((a[m]|0)!=0){a[m]=0}if((o|0)<0){break}Ok(b,g)}c[c[j>>2]>>2]=n;i=f;return}function Ok(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=c[e>>2]|0;do{if((a|0)>=0){f=c[b>>2]|0;if((f|0)<0){break}c[e>>2]=a+f;i=d;return}}while(0);Xa(5736,5752,165,5816)}function Pk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;if(Ak(e,e)|0){c[b>>2]=-1;a[b+4|0]=0;i=d;return}else{f=c[e>>2]|0;e=c[f>>2]|0;g=a[e]|0;c[f>>2]=e+1;c[b>>2]=1;a[b+5|0]=g;a[b+4|0]=1;i=d;return}}function Qk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(16)|0;c[e>>2]=5832;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[a>>2]=e;i=d;return}function Rk(a){a=a|0;i=i;return}function Sk(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Tk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;xk(a,b+4|0,c);i=d;return}function Uk(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(16)|0;c[d>>2]=5832;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];i=b;return d|0}function Vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(28)|0;c[e>>2]=6120;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[a>>2]=e;i=d;return}function Wk(a){a=a|0;i=i;return}function Xk(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Yk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;_k(a,b+4|0,c);i=d;return}function Zk(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(28)|0;c[d>>2]=6120;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];i=b;return d|0}function _k(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;Ak(d,d)|0;f=c[c[d>>2]>>2]|0;$k(a,b,d);if((c[a>>2]|0)<0){i=e;return}Lk(b+12|0,c[b+20>>2]|0,f);i=e;return}function $k(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;al(g,d+4|0,e);d=g;do{if((c[d>>2]|0)>=0){bl(j,e);k=c[j>>2]|0;c[h>>2]=k;l=j+8|0;if((a[l]|0)!=0){a[l]=0}if((k|0)<0){break}Ok(g,h);c[b>>2]=c[d>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function al(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;Al(g,d,e,0);d=g;do{if((c[d>>2]|0)>=0){bl(j,e);k=c[j>>2]|0;c[h>>2]=k;l=j+8|0;if((a[l]|0)!=0){a[l]=0}if((k|0)<0){break}Ok(g,h);c[b>>2]=c[d>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function bl(a,b){a=a|0;b=b|0;var c=0;c=i;cl(a,6552,b,0);i=c;return}function cl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=i;i=i+8|0;b=e;Bk(d,d);f=c[d+4>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=f;dl(a,0,b);i=e;return}function dl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0,F=0,G=0.0,H=0,J=0,K=0.0,L=0,M=0,N=0,O=0.0,P=0,Q=0,R=0.0,S=0,T=0,U=0.0,W=0,X=0,Y=0.0,Z=0,_=0,$=0;d=i;i=i+120|0;f=d;g=d+8|0;j=d+32|0;k=d+40|0;l=d+48|0;m=d+72|0;n=d+80|0;o=d+88|0;p=d+96|0;if((c[c[e>>2]>>2]|0)==(c[e+4>>2]|0)){c[b>>2]=-1;a[b+8|0]=0;i=d;return}zl(f,0,e);q=c[f>>2]|0;r=(q|0)<0?0:q;q=f+4|0;do{if((a[q]|0)==0){s=0;u=6}else{t=0;v=oa(94,f|0)|0;w=t;t=0;if(w&1){u=11;break}s=(a[v]|0)!=0;u=6}}while(0);do{if((u|0)==6){t=0;La(26,g|0,0,e|0);f=t;t=0;if(f&1){u=11;break}f=g+8|0;do{if((a[f]|0)==0){x=0.0;u=10}else{t=0;v=oa(95,g|0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;y=w;z=I;break}else{x=+h[v>>3];u=10;break}}}while(0);do{if((u|0)==10){v=c[g>>2]|0;w=(v|0)>-1;A=j;c[A>>2]=-1;B=j+4|0;a[B]=0;C=v+r|0;if(s){D=-x}else{D=x}t=0;na(88,k|0,e|0);v=t;t=0;a:do{if(v&1){u=13}else{E=c[k>>2]|0;F=k+4|0;if((a[F]|0)!=0){a[F]=0}do{if((E|0)<0){if(!w){c[b>>2]=-1;a[b+8|0]=0;break}t=0;na(89,o|0,e|0);F=t;t=0;if(F&1){u=13;break a}hl(j,o)|0;F=o+4|0;if((a[F]|0)==0){G=D;H=C;u=43;break}a[F]=0;G=D;H=C;u=43}else{t=0;La(26,l|0,0,e|0);F=t;t=0;if(F&1){u=13;break a}F=l;b:do{if((c[F>>2]|0)<0){if(w){J=0;K=D;L=C;break}c[b>>2]=-1;a[b+8|0]=0;J=1;K=D;L=C}else{t=0;M=oa(95,l|0)|0;N=t;t=0;do{if(!(N&1)){O=+h[M>>3]*+V(10.0,+(+(0-(c[F>>2]|0)|0)));h[m>>3]=O;ul(l+8|0,m);if(s){t=0;P=oa(95,l|0)|0;Q=t;t=0;if(Q&1){break}R=D- +h[P>>3]}else{t=0;P=oa(95,l|0)|0;Q=t;t=0;if(Q&1){break}R=D+ +h[P>>3]}J=0;K=R;L=C+1+(c[F>>2]|0)|0;break b}}while(0);M=Kb(-1,-1)|0;N=I;P=l+8|0;if((a[P]|0)==0){S=M;T=N;break a}a[P]=0;S=M;T=N;break a}}while(0);F=l+8|0;if((a[F]|0)!=0){a[F]=0}if((J|0)!=0){break}t=0;na(89,n|0,e|0);F=t;t=0;if(F&1){u=13;break a}hl(j,n)|0;F=n+4|0;if((a[F]|0)==0){G=K;H=L;u=43;break}a[F]=0;G=K;H=L;u=43}}while(0);do{if((u|0)==43){if((c[A>>2]|0)<0){U=G;W=H}else{t=0;La(27,p|0,0,e|0);E=t;t=0;if(E&1){u=13;break a}E=p;do{if((c[E>>2]|0)<0){c[b>>2]=-1;a[b+8|0]=0;X=1;Y=G;Z=H}else{t=0;F=oa(95,p|0)|0;N=t;t=0;if(!(N&1)){O=G*+V(10.0,+(+h[F>>3]));X=0;Y=O;Z=(c[E>>2]|0)+H+(c[A>>2]|0)|0;break}F=Kb(-1,-1)|0;N=I;M=p+8|0;if((a[M]|0)==0){S=F;T=N;break a}a[M]=0;S=F;T=N;break a}}while(0);E=p+8|0;if((a[E]|0)!=0){a[E]=0}if((X|0)==0){U=Y;W=Z}else{break}}c[b>>2]=W;h[b+16>>3]=U;a[b+8|0]=1}}while(0);if((a[B]|0)!=0){a[B]=0}if((a[f]|0)!=0){a[f]=0}if((a[q]|0)==0){i=d;return}a[q]=0;i=d;return}}while(0);if((u|0)==13){A=Kb(-1,-1)|0;S=A;T=I}if((a[B]|0)==0){y=S;z=T;break}a[B]=0;y=S;z=T}}while(0);if((a[f]|0)==0){_=y;$=z;break}a[f]=0;_=y;$=z}}while(0);if((u|0)==11){u=Kb(-1,-1)|0;_=u;$=I}if((a[q]|0)==0){Wb(_|0)}a[q]=0;Wb(_|0)}function el(b){b=b|0;var c=0,d=0;c=i;d=b+4|0;if((a[d]|0)==0){Xa(6624,6648,54,6720)}else{b=yl(d)|0;i=c;return b|0}return 0}function fl(b){b=b|0;var c=0,d=0;c=i;d=b+8|0;if((a[d]|0)==0){Xa(6624,6648,54,6720)}else{b=xl(d)|0;i=c;return b|0}return 0}function gl(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+8|0;e=d;a[e]=46;wl(b,e,c);i=d;return}function hl(a,b){a=a|0;b=b|0;var d=0;d=i;c[a>>2]=c[b>>2];tl(a+4|0,b+4|0);i=d;return a|0}function il(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+8|0;e=d;a[e]=101;pl(b,e,c,0);i=d;return}function jl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0;d=i;i=i+16|0;f=d;g=d+8|0;j=e;k=c[c[j>>2]>>2]|0;do{if((k|0)!=(c[e+4>>2]|0)){h[f>>3]=0.0;c[g>>2]=0;if(kl(e,g)|0){if(!(ll(e,f,g)|0)){l=6}}else{if(!(ml(e,f,g)|0)){l=6}}if((l|0)==6){c[c[j>>2]>>2]=k;break}c[b>>2]=c[g>>2];h[b+16>>3]=+h[f>>3];a[b+8|0]=1;i=d;return}}while(0);c[b>>2]=-1;a[b+8|0]=0;i=d;return}function kl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;c[d>>2]=0;f=c[b>>2]|0;b=c[f>>2]|0;g=a[b]|0;if(!(g<<24>>24==43|g<<24>>24==45)){h=0;i=e;return h|0}c[f>>2]=b+1;c[d>>2]=1;h=g<<24>>24==45;i=e;return h|0}function ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=c[c[g>>2]>>2]|0;j=b+4|0;a:do{if((h|0)==(c[j>>2]|0)){k=0}else{b=h;l=0;while(1){m=a[b]|0;if(!(((m&255)+ -48|0)>>>0<10)){k=l;break a}if(!(ol(d,+((m<<24>>24)+ -48|0))|0)){n=0;break}m=l+1|0;o=c[g>>2]|0;c[o>>2]=(c[o>>2]|0)+1;c[e>>2]=(c[e>>2]|0)+1;o=c[c[g>>2]>>2]|0;if((o|0)==(c[j>>2]|0)){k=m;break a}else{b=o;l=m}}i=f;return n|0}}while(0);n=(k|0)!=0;i=f;return n|0}function ml(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=c[c[g>>2]>>2]|0;j=b+4|0;a:do{if((h|0)==(c[j>>2]|0)){k=0}else{b=h;l=0;while(1){m=a[b]|0;if(!(((m&255)+ -48|0)>>>0<10)){k=l;break a}if(!(nl(d,+((m<<24>>24)+ -48|0))|0)){n=0;break}m=l+1|0;o=c[g>>2]|0;c[o>>2]=(c[o>>2]|0)+1;c[e>>2]=(c[e>>2]|0)+1;o=c[c[g>>2]>>2]|0;if((o|0)==(c[j>>2]|0)){k=m;break a}else{b=o;l=m}}i=f;return n|0}}while(0);n=(k|0)!=0;i=f;return n|0}function nl(b,c){b=b|0;c=+c;var d=0,e=0.0,f=0,g=0.0;d=i;do{if((a[6568]|0)==0){if((Va(6568)|0)==0){break}h[820]=1.7976931348623157e+308;Nb(6568)}}while(0);do{if((a[6584]|0)==0){if((Va(6584)|0)==0){break}h[822]=+h[820]/10.0;Nb(6584)}}while(0);e=+h[b>>3];if(e>+h[822]){f=0;i=d;return f|0}g=e*10.0;h[b>>3]=g;if(g>+h[820]-c){f=0;i=d;return f|0}h[b>>3]=g+c;f=1;i=d;return f|0}function ol(b,c){b=b|0;c=+c;var d=0,e=0.0,f=0,g=0.0;d=i;do{if((a[6600]|0)==0){if((Va(6600)|0)==0){break}h[824]=-1.7976931348623157e+308;Nb(6600)}}while(0);do{if((a[6616]|0)==0){if((Va(6616)|0)==0){break}h[826]=+h[824]/10.0;Nb(6616)}}while(0);e=+h[b>>3];if(e<+h[826]){f=0;i=d;return f|0}g=e*10.0;h[b>>3]=g;if(g<+h[824]+c){f=0;i=d;return f|0}h[b>>3]=g-c;f=1;i=d;return f|0}function pl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+8|0;f=e;g=c[d+4>>2]|0;c[f>>2]=c[d>>2];c[f+4>>2]=g;ql(a,b,f);i=e;return}function ql(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=e;do{if((c[c[g>>2]>>2]|0)!=(c[e+4>>2]|0)){h=rl(e)|0;if(!((a[d]|0)==h<<24>>24)){break}j=c[g>>2]|0;c[j>>2]=(c[j>>2]|0)+1;c[b>>2]=1;a[b+5|0]=h;a[b+4|0]=1;i=f;return}}while(0);c[b>>2]=-1;a[b+4|0]=0;i=f;return}function rl(b){b=b|0;var d=0,e=0;d=i;e=sl(a[c[c[b>>2]>>2]|0]|0)|0;i=d;return e|0}function sl(a){a=a|0;var b=0,c=0;b=i;c=(xC(a&255|0)|0)&255;i=b;return c|0}function tl(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=b;f=(a[c]|0)!=0;do{if((a[e]|0)==0){if(!f){break}a[b+1|0]=a[c+1|0]|0;a[e]=1}else{if(f){a[b+1|0]=a[c+1|0]|0;break}else{a[e]=0;break}}}while(0);i=d;return}function ul(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=b;if((a[e]|0)==0){h[b+8>>3]=+h[c>>3];a[e]=1;i=d;return}else{h[b+8>>3]=+h[c>>3];i=d;return}}function vl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;i=i+16|0;f=d;g=d+8|0;do{if((c[c[e>>2]>>2]|0)!=(c[e+4>>2]|0)){h[f>>3]=0.0;c[g>>2]=0;if(!(ml(e,f,g)|0)){break}c[b>>2]=c[g>>2];h[b+16>>3]=+h[f>>3];a[b+8|0]=1;i=d;return}}while(0);c[b>>2]=-1;a[b+8|0]=0;i=d;return}function wl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=c[e>>2]|0;h=c[g>>2]|0;do{if((h|0)!=(c[e+4>>2]|0)){j=a[h]|0;if(!((a[d]|0)==j<<24>>24)){break}c[g>>2]=h+1;c[b>>2]=1;a[b+5|0]=j;a[b+4|0]=1;i=f;return}}while(0);c[b>>2]=-1;a[b+4|0]=0;i=f;return}function xl(b){b=b|0;var c=0;c=i;if((a[b]|0)==0){Xa(6728,6752,630,6800)}else{i=c;return b+8|0}return 0}function yl(b){b=b|0;var c=0;c=i;if((a[b]|0)==0){Xa(6728,6752,630,6800)}else{i=c;return b+1|0}return 0}function zl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;i=i+8|0;f=d;do{if((c[c[e>>2]>>2]|0)!=(c[e+4>>2]|0)){g=kl(e,f)|0;if((c[f>>2]|0)==0){break}c[b>>2]=1;a[b+5|0]=g&1;a[b+4|0]=1;i=d;return}}while(0);c[b>>2]=-1;a[b+4|0]=0;i=d;return}function Al(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+8|0;f=e;Bk(d,d);g=c[d+4>>2]|0;c[f>>2]=c[d>>2];c[f+4>>2]=g;Bl(a,b,f);i=e;return}function Bl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Cl(a,c[b>>2]|0,c[b+4>>2]|0,d);i=e;return}function Cl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;h=e-d|0;a:do{if((d|0)!=(e|0)){j=f;k=f+4|0;l=d;while(1){m=c[j>>2]|0;n=c[m>>2]|0;if((n|0)==(c[k>>2]|0)){break}if((a[l]|0)!=(a[n]|0)){break}l=l+1|0;c[m>>2]=n+1;if((l|0)==(e|0)){break a}}c[b>>2]=-1;i=g;return}}while(0);c[b>>2]=h;i=g;return}function Dl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(32)|0;c[e>>2]=6816;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[f+24>>2]=c[g+24>>2];c[a>>2]=e;i=d;return}function El(a){a=a|0;i=i;return}function Fl(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Gl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Il(a,b+4|0,c);i=d;return}function Hl(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(32)|0;c[d>>2]=6816;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];c[e+24>>2]=c[f+24>>2];i=b;return d|0}function Il(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;Ak(d,d)|0;f=c[c[d>>2]>>2]|0;Jl(a,b,d);if((c[a>>2]|0)<0){i=e;return}Lk(b+16|0,c[b+24>>2]|0,f);i=e;return}function Jl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;$k(g,d+4|0,e);d=g;do{if((c[d>>2]|0)>=0){bl(j,e);k=c[j>>2]|0;c[h>>2]=k;l=j+8|0;if((a[l]|0)!=0){a[l]=0}if((k|0)<0){break}Ok(g,h);c[b>>2]=c[d>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function Kl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(16)|0;c[e>>2]=7272;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[a>>2]=e;i=d;return}function Ll(a){a=a|0;i=i;return}function Ml(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Nl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Pl(a,b+4|0,c);i=d;return}function Ol(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(16)|0;c[d>>2]=7272;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];i=b;return d|0}function Pl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Ql(a,0,0,c,b,b+8|0,b+9|0);i=d;return}function Ql(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;g=i;i=i+16|0;f=g;m=a[4824]|0;n=a[l]|0;l=(n&255)<<8&65535|(d[k]|0);k=j;j=c[k+4>>2]|0;o=f;c[o>>2]=c[k>>2];c[o+4>>2]=j;b[f+8>>1]=l;a[f+10|0]=m;a[f+12|0]=n;Rl(e,f,h,0);i=g;return}function Rl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+8|0;f=e;Bk(d,d);g=c[d+4>>2]|0;c[f>>2]=c[d>>2];c[f+4>>2]=g;Sl(a,b,f);i=e;return}function Sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;Tl(f,b,d);h=f;do{if((c[h>>2]|0)>=0){Ul(g,b+12|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function Tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;Bl(f,b,d);h=f;do{if((c[h>>2]|0)>=0){Wl(g,b+8|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function Ul(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;b=i;i=i+8|0;e=b;f=d;g=c[c[f>>2]>>2]|0;Vl(e,0,d);h=c[e>>2]|0;if((h|0)<0){c[c[f>>2]>>2]=g;c[a>>2]=((c[c[f>>2]>>2]|0)!=(c[d+4>>2]|0))<<31>>31;i=b;return}else{c[a>>2]=h;i=b;return}}function Vl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;f=e;g=c[f>>2]|0;h=c[g>>2]|0;j=e+4|0;e=c[j>>2]|0;do{if((h|0)!=(e|0)){if((a[h]|0)==13){c[g>>2]=h+1;k=c[f>>2]|0;l=c[j>>2]|0;m=c[k>>2]|0;n=k;o=1}else{l=e;m=h;n=g;o=0}do{if((m|0)==(l|0)){p=7}else{if((a[m]|0)!=10){p=7;break}c[n>>2]=m+1;q=o+1|0}}while(0);if((p|0)==7){if((o|0)==0){break}else{q=1}}c[b>>2]=q;i=d;return}}while(0);c[b>>2]=-1;i=d;return}function Wl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Xl(a,0,c,b,b+2|0);i=d;return}function Xl(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;i=i+8|0;c=g;h=f;a[c]=((d[h]|d[h+1|0]<<8)&65535)>>>8;Yl(b,c,e);i=g;return}function Yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e;c[a>>2]=0;g=d;h=c[c[g>>2]>>2]|0;j=b;Zl(f,j,d);b=f;if((c[b>>2]|0)<0){k=h;l=c[g>>2]|0;c[l>>2]=k;i=e;return}while(1){Ok(a,f);h=c[c[g>>2]>>2]|0;Zl(f,j,d);if((c[b>>2]|0)<0){k=h;break}}l=c[g>>2]|0;c[l>>2]=k;i=e;return}function Zl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f;h=f+8|0;j=e;k=c[c[j>>2]>>2]|0;_l(g,d,e);l=c[g>>2]|0;m=g+4|0;if((a[m]|0)!=0){a[m]=0}do{if((l|0)>=0){m=c[j>>2]|0;g=c[m>>2]|0;c[m>>2]=k;Ul(h,d,e);m=c[h>>2]|0;if(!((m|0)<0|(m|0)<(l|0))){break}c[c[j>>2]>>2]=g;c[b>>2]=l;i=f;return}}while(0);c[b>>2]=-1;i=f;return}function _l(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;f=c[e>>2]|0;g=c[f>>2]|0;if((g|0)==(c[e+4>>2]|0)){c[b>>2]=-1;a[b+4|0]=0;i=d;return}else{e=a[g]|0;c[f>>2]=g+1;c[b>>2]=1;a[b+5|0]=e;a[b+4|0]=1;i=d;return}}function $l(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=((c[a+4>>2]|0)-f|0)/44|0;h=g+1|0;if(h>>>0>97612893){Uy(0)}j=((c[a+8>>2]|0)-f|0)/44|0;if(j>>>0<48806446){f=j<<1;k=f>>>0<h>>>0?h:f}else{k=97612893}cm(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;do{if((k|0)!=0){t=0;na(77,k|0,b|0);f=t;t=0;if(!(f&1)){break}l=Kb(-1,-1)|0;m=I;bm(e);Wb(l|0)}}while(0);c[g>>2]=k+44;t=0;na(90,a|0,e|0);a=t;t=0;if(a&1){l=Kb(-1,-1)|0;m=I;bm(e);Wb(l|0)}else{bm(e);i=d;return}}function am(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=c[g>>2]|0;j=b+4|0;k=c[j>>2]|0;if((h|0)==(f|0)){l=k;m=f}else{n=h;h=k;do{n=n+ -44|0;ck(h+ -44|0,n);h=(c[j>>2]|0)+ -44|0;c[j>>2]=h;}while((n|0)!=(f|0));l=h;m=c[e>>2]|0}c[e>>2]=l;c[j>>2]=m;m=b+8|0;l=c[g>>2]|0;c[g>>2]=c[m>>2];c[m>>2]=l;l=a+8|0;a=b+12|0;m=c[l>>2]|0;c[l>>2]=c[a>>2];c[a>>2]=m;c[b>>2]=c[j>>2];i=d;return}function bm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=c[a+4>>2]|0;e=a+8|0;while(1){f=c[e>>2]|0;if((f|0)==(d|0)){break}g=f+ -44|0;c[e>>2]=g;t=0;ma(229,g|0);g=t;t=0;if(g&1){h=4;break}}if((h|0)==4){h=Kb(-1,-1)|0;Yb(h|0)}h=c[a>>2]|0;if((h|0)==0){i=b;return}_B(h);i=b;return}function cm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b*44|0)|0}c[a>>2]=h;e=h+(d*44|0)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b*44|0);i=f;return}function dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(28)|0;c[e>>2]=7696;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[a>>2]=e;i=d;return}function em(a){a=a|0;i=i;return}function fm(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function gm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;im(a,b+4|0,c);i=d;return}function hm(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(28)|0;c[d>>2]=7696;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];i=b;return d|0}function im(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;jm(f,b,d);h=f;do{if((c[h>>2]|0)>=0){km(g,b+20|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function jm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;lm(f,b,d);h=f;do{if((c[h>>2]|0)>=0){zk(g,c[b+16>>2]|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function km(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e;c[a>>2]=0;g=d;h=c[c[g>>2]>>2]|0;j=b;zk(f,c[j>>2]|0,d);b=f;if((c[b>>2]|0)<0){k=h;l=c[g>>2]|0;c[l>>2]=k;i=e;return}while(1){Ok(a,f);h=c[c[g>>2]>>2]|0;zk(f,c[j>>2]|0,d);if((c[b>>2]|0)<0){k=h;break}}l=c[g>>2]|0;c[l>>2]=k;i=e;return}function lm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;mm(f,b,d);h=f;do{if((c[h>>2]|0)>=0){zk(g,c[b+12>>2]|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function mm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;Al(f,b,d,0);h=f;do{if((c[h>>2]|0)>=0){zk(g,c[b+8>>2]|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function nm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(44)|0;c[e>>2]=8032;f=e+4|0;g=b+0|0;b=f+40|0;do{c[f>>2]=c[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(b|0));c[a>>2]=e;i=d;return}function om(a){a=a|0;i=i;return}function pm(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function qm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;sm(a,b+4|0,c);i=d;return}function rm(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(44)|0;c[d>>2]=8032;e=d+4|0;f=a+4|0;a=e+40|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(a|0));i=b;return d|0}function sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f;h=f+8|0;j=f+24|0;tm(h,d,e);k=g;l=c[h>>2]|0;c[k>>2]=l;m=h+4|0;if((a[m]|0)!=0){a[m]=0}do{if((l|0)>=0){um(j,d+8|0,e);if((c[j>>2]|0)<0){break}Ok(g,j);c[b>>2]=c[k>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function tm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;Ak(e,e)|0;zm(b,0,e);if((c[b>>2]|0)<0){i=f;return}t=0;e=oa(96,b|0)|0;g=t;t=0;do{if(!(g&1)){t=0;na(91,d+4|0,e|0);h=t;t=0;if(h&1){break}i=f;return}}while(0);f=Kb(-1,-1)|0;e=b+4|0;if((a[e]|0)==0){Wb(f|0)}a[e]=0;Wb(f|0)}function um(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e;g=d;h=c[c[g>>2]>>2]|0;vm(f,b,d);d=c[f>>2]|0;if((d|0)<0){c[c[g>>2]>>2]=h;c[a>>2]=0;i=e;return}else{c[a>>2]=d;i=e;return}}function vm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;wm(f,b,d);h=f;do{if((c[h>>2]|0)>=0){xm(g,b+24|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function wm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;ym(f,b,d);h=f;do{if((c[h>>2]|0)>=0){Al(g,b+16|0,d,0);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function xm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=e;j=c[c[h>>2]>>2]|0;tm(g,d,e);e=c[g>>2]|0;d=g+4|0;if((a[d]|0)!=0){a[d]=0}if((e|0)<0){c[c[h>>2]>>2]=j;c[b>>2]=0;i=f;return}else{c[b>>2]=e;i=f;return}}function ym(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;Al(f,b,d,0);h=f;do{if((c[h>>2]|0)>=0){xm(g,b+8|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function zm(a,b,c){a=a|0;b=b|0;c=c|0;b=i;i=i+8|0;Im(a,b,c,0);i=b;return}function Am(b){b=b|0;var c=0,d=0;c=i;d=b+4|0;if((a[d]|0)==0){Xa(6624,6648,54,6720)}else{b=Hm(d)|0;i=c;return b|0}return 0}function Bm(a,b){a=a|0;b=b|0;var d=0;d=i;Cm(0,c[a>>2]|0,b);i=d;return}function Cm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=i;e=b+4|0;f=c[e>>2]|0;if((f|0)==(c[b+8>>2]|0)){Dm(b,d);i=a;return}if((f|0)!=0){c[f>>2]=c[d>>2]}c[e>>2]=f+4;i=a;return}function Dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=(c[a+4>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823){Uy(0)}j=(c[a+8>>2]|0)-f|0;if(j>>2>>>0<536870911){f=j>>1;k=f>>>0<h>>>0?h:f}else{k=1073741823}Gm(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;if((k|0)!=0){c[k>>2]=c[b>>2]}c[g>>2]=k+4;Em(a,e);Fm(e);i=d;return}function Em(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=b+4|0;j=(c[g>>2]|0)-f|0;k=(c[h>>2]|0)+(0-(j>>2)<<2)|0;c[h>>2]=k;qC(k|0,f|0,j|0)|0;j=c[e>>2]|0;c[e>>2]=c[h>>2];c[h>>2]=j;j=b+8|0;e=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=e;e=a+8|0;a=b+12|0;j=c[e>>2]|0;c[e>>2]=c[a>>2];c[a>>2]=j;c[b>>2]=c[h>>2];i=d;return}function Fm(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){c[e>>2]=f+(~((f+ -4+(0-d)|0)>>>2)<<2)}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function Gm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b<<2)|0}c[a>>2]=h;e=h+(d<<2)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b<<2);i=f;return}function Hm(b){b=b|0;var c=0;c=i;if((a[b]|0)==0){Xa(6728,6752,630,6800)}else{i=c;return b+4|0}return 0}function Im(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=i;i=i+8|0;b=e;Bk(d,d);f=c[d+4>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=f;Jm(a,0,b);i=e;return}function Jm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;f=d;g=d+8|0;h=e;j=c[c[h>>2]>>2]|0;do{if((j|0)!=(c[e+4>>2]|0)){c[f>>2]=0;c[g>>2]=0;if(kl(e,g)|0){if(!(Km(e,f,g)|0)){k=6}}else{if(!(Lm(e,f,g)|0)){k=6}}if((k|0)==6){c[c[h>>2]>>2]=j;break}c[b>>2]=c[g>>2];c[b+8>>2]=c[f>>2];a[b+4|0]=1;i=d;return}}while(0);c[b>>2]=-1;a[b+4|0]=0;i=d;return}function Km(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=c[c[g>>2]>>2]|0;j=b+4|0;a:do{if((h|0)==(c[j>>2]|0)){k=0}else{b=h;l=0;while(1){m=a[b]|0;if(!(((m&255)+ -48|0)>>>0<10)){k=l;break a}if(!(Nm(d,(m<<24>>24)+ -48|0)|0)){n=0;break}m=l+1|0;o=c[g>>2]|0;c[o>>2]=(c[o>>2]|0)+1;c[e>>2]=(c[e>>2]|0)+1;o=c[c[g>>2]>>2]|0;if((o|0)==(c[j>>2]|0)){k=m;break a}else{b=o;l=m}}i=f;return n|0}}while(0);n=(k|0)!=0;i=f;return n|0}function Lm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;h=c[c[g>>2]>>2]|0;j=b+4|0;a:do{if((h|0)==(c[j>>2]|0)){k=0}else{b=h;l=0;while(1){m=a[b]|0;if(!(((m&255)+ -48|0)>>>0<10)){k=l;break a}if(!(Mm(d,(m<<24>>24)+ -48|0)|0)){n=0;break}m=l+1|0;o=c[g>>2]|0;c[o>>2]=(c[o>>2]|0)+1;c[e>>2]=(c[e>>2]|0)+1;o=c[c[g>>2]>>2]|0;if((o|0)==(c[j>>2]|0)){k=m;break a}else{b=o;l=m}}i=f;return n|0}}while(0);n=(k|0)!=0;i=f;return n|0}function Mm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;do{if((a[8512]|0)==0){if((Va(8512)|0)==0){break}c[2126]=2147483647;Nb(8512)}}while(0);do{if((a[8528]|0)==0){if((Va(8528)|0)==0){break}c[2130]=(c[2126]|0)/10|0;Nb(8528)}}while(0);f=c[b>>2]|0;if((f|0)>(c[2130]|0)){g=0;i=e;return g|0}h=f*10|0;c[b>>2]=h;if((h|0)>((c[2126]|0)-d|0)){g=0;i=e;return g|0}c[b>>2]=h+d;g=1;i=e;return g|0}function Nm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;do{if((a[8544]|0)==0){if((Va(8544)|0)==0){break}c[2134]=-2147483648;Nb(8544)}}while(0);do{if((a[8560]|0)==0){if((Va(8560)|0)==0){break}c[2138]=(c[2134]|0)/10|0;Nb(8560)}}while(0);f=c[b>>2]|0;if((f|0)<(c[2138]|0)){g=0;i=e;return g|0}h=f*10|0;c[b>>2]=h;if((h|0)<((c[2134]|0)+d|0)){g=0;i=e;return g|0}c[b>>2]=h-d;g=1;i=e;return g|0}function Om(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(36)|0;c[e>>2]=8576;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[f+24>>2]=c[g+24>>2];c[f+28>>2]=c[g+28>>2];c[a>>2]=e;i=d;return}function Pm(a){a=a|0;i=i;return}function Qm(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function Rm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Tm(a,b+4|0,c);i=d;return}function Sm(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(36)|0;c[d>>2]=8576;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];c[e+24>>2]=c[f+24>>2];c[e+28>>2]=c[f+28>>2];i=b;return d|0}function Tm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=e+8|0;Um(f,b,d);h=f;do{if((c[h>>2]|0)>=0){Vm(g,b+24|0,d);if((c[g>>2]|0)<0){break}Ok(f,g);c[a>>2]=c[h>>2];i=e;return}}while(0);c[a>>2]=-1;i=e;return}function Um(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;Zm(g,d,e);k=g;do{if((c[k>>2]|0)>=0){Wm(j,d+16|0,e);l=c[j>>2]|0;c[h>>2]=l;m=j+8|0;if((a[m]|0)!=0){a[m]=0}if((l|0)<0){break}Ok(g,h);c[b>>2]=c[k>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function Vm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f;h=f+8|0;c[b>>2]=0;j=e;k=d;d=g;l=h;m=h+8|0;while(1){n=c[c[j>>2]>>2]|0;Wm(h,k,e);o=c[l>>2]|0;c[d>>2]=o;if((a[m]|0)!=0){a[m]=0}if((o|0)<0){break}Ok(b,g)}c[c[j>>2]>>2]=n;i=f;return}function Wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;Ak(e,e)|0;bl(b,e);if((c[b>>2]|0)<0){i=f;return}t=0;e=oa(95,b|0)|0;g=t;t=0;do{if(!(g&1)){t=0;na(92,d+4|0,e|0);h=t;t=0;if(h&1){break}i=f;return}}while(0);f=Kb(-1,-1)|0;e=b+8|0;if((a[e]|0)==0){Wb(f|0)}a[e]=0;Wb(f|0)}function Xm(a,b){a=a|0;b=b|0;var d=0;d=i;Ym(0,c[a>>2]|0,b);i=d;return}function Ym(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,j=0;a=i;i=i+8|0;e=a;f=+h[d>>3];g[e>>2]=f;d=b+4|0;j=c[d>>2]|0;if((j|0)==(c[b+8>>2]|0)){vf(b,e);i=a;return}if((j|0)!=0){g[j>>2]=f}c[d>>2]=j+4;i=a;return}function Zm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;Al(g,d,e,0);k=g;do{if((c[k>>2]|0)>=0){Wm(j,d+8|0,e);l=c[j>>2]|0;c[h>>2]=l;m=j+8|0;if((a[m]|0)!=0){a[m]=0}if((l|0)<0){break}Ok(g,h);c[b>>2]=c[k>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function _m(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+24|0;h=g;j=g+8|0;k=g+16|0;c[h>>2]=c[d>>2];d=c[e>>2]|0;c[j>>2]=h;c[j+4>>2]=d;Ak(j,j)|0;zk(k,f,j);j=c[k>>2]|0;k=j>>31;f=(k|0)!=-1;d=c[h>>2]|0;if((k|0)==-1){l=0;m=b;c[m>>2]=d;n=b+4|0;o=f&1;a[n]=o;p=b+5|0;a[p]=l;q=b+8|0;c[q>>2]=j;i=g;return}l=(d|0)==(c[e>>2]|0)|0;m=b;c[m>>2]=d;n=b+4|0;o=f&1;a[n]=o;p=b+5|0;a[p]=l;q=b+8|0;c[q>>2]=j;i=g;return}function $m(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Zd[c[(c[a>>2]|0)+4>>2]&511](a);i=b;return}function an(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=YB(36)|0;c[e>>2]=9032;f=e+4|0;g=b;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[f+24>>2]=c[g+24>>2];c[f+28>>2]=c[g+28>>2];c[a>>2]=e;i=d;return}function bn(a){a=a|0;i=i;return}function cn(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function dn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;fn(a,b+4|0,c);i=d;return}function en(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=YB(36)|0;c[d>>2]=9032;e=d+4|0;f=a+4|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];c[e+24>>2]=c[f+24>>2];c[e+28>>2]=c[f+28>>2];i=b;return d|0}function fn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;Um(g,d,e);k=g;do{if((c[k>>2]|0)>=0){Wm(j,d+24|0,e);l=c[j>>2]|0;c[h>>2]=l;m=j+8|0;if((a[m]|0)!=0){a[m]=0}if((l|0)<0){break}Ok(g,h);c[b>>2]=c[k>>2];i=f;return}}while(0);c[b>>2]=-1;i=f;return}function gn(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}e=a+4|0;a=c[e>>2]|0;if((a|0)!=(d|0)){c[e>>2]=a+(~((a+ -4+(0-d)|0)>>>2)<<2)}_B(d);i=b;return}function hn(){a[4849|0]=44;i=i;return}function jn(b){b=b|0;var c=0,d=0;c=i;d=b+0|0;b=d+24|0;do{a[d]=0;d=d+1|0}while((d|0)<(b|0));i=c;return}function kn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0;e=i;i=i+80|0;f=e;h=e+16|0;j=e+32|0;k=e+48|0;l=e+64|0;g[f>>2]=0.0;g[f+4>>2]=0.0;g[f+8>>2]=0.0;g[h>>2]=0.0;g[h+4>>2]=0.0;g[h+8>>2]=0.0;cr(j,b,c);er(f,j)|0;cr(k,d,c);er(h,k)|0;k=a;gr(l,h,f);er(k,l)|0;hr(k);l=a+12|0;er(l,c)|0;m=-+ir(k,l);g[a+24>>2]=m;i=e;return}function ln(a){a=a|0;i=i;return}function mn(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=i;i=i+32|0;c=b;b=xc(32)|0;In(c,a);t=0;na(93,b|0,c|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;d=I;sn(c);Jb(b|0);e=a;f=d;Wb(e|0)}t=0;La(13,b|0,9816,107);b=t;t=0;b=Kb(-1,-1)|0;d=I;sn(c);e=b;f=d;Wb(e|0)}function nn(a){a=a|0;var b=0;b=i;Ts(a);i=b;return}function on(a){a=a|0;var b=0;b=i;Qs(a,9504);c[a>>2]=9544;i=b;return}function pn(a){a=a|0;var b=0;b=i;Ts(a);_B(a);i=b;return}function qn(a){a=a|0;var b=0;b=i;sn(a);i=b;return}function rn(a){a=a|0;var b=0;b=i;sn(a);i=b;return}function sn(a){a=a|0;var b=0;b=i;pg(a+8|0);Ts(a);i=b;return}function tn(a){a=a|0;var b=0;b=i;sn(a+ -8|0);i=b;return}function un(a){a=a|0;var b=0;b=i;sn(a+ -8|0);i=b;return}function vn(a){a=a|0;var b=0;b=i;sn(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function wn(a){a=a|0;var b=0;b=i;sn(a);_B(a);i=b;return}function xn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=YB(32)|0;g=f;t=0;h=e;j=d+8|0;a[h+0|0]=a[j+0|0]|0;La(28,g|0,b|0,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;_B(f);Wb(e|0)}if((f|0)==0){k=0;i=d;return k|0}k=f+(c[(c[f>>2]|0)+ -12>>2]|0)|0;i=d;return k|0}function yn(a){a=a|0;var b=0;b=xc(32)|0;t=0;na(94,b|0,a|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;Jb(b|0);Wb(a|0)}else{Md(b|0,9816,107)}}function zn(a){a=a|0;var b=0;b=i;wn(a+ -8|0);i=b;return}function An(a){a=a|0;var b=0,d=0;b=i;d=xn(a+(c[(c[a>>2]|0)+ -12>>2]|0)|0)|0;i=b;return d|0}function Bn(a){a=a|0;yn(a+(c[(c[a>>2]|0)+ -16>>2]|0)|0)}function Cn(a){a=a|0;var b=0;b=i;wn(a+(c[(c[a>>2]|0)+ -20>>2]|0)|0);i=b;return}function Dn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+28|0;c[e>>2]=1376;En(a,b);c[a>>2]=9860;c[a+8>>2]=9888;c[e>>2]=9916;i=d;return}function En(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;Rs(e,b);f=a;c[f>>2]=9544;t=0;na(49,a+8|0,b+8|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;Ts(e);Wb(b|0)}else{c[f>>2]=9944;c[a+8>>2]=9964;i=d;return}}function Fn(a){a=a|0;var b=0;b=i;sn(a);_B(a);i=b;return}function Gn(a){a=a|0;var b=0;b=i;Fn(a+ -8|0);i=b;return}function Hn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;e=a+28|0;c[e>>2]=1376;f=a;t=0;na(95,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=9860;g=a+8|0;c[g>>2]=9888;c[e>>2]=9916;t=0;na(51,g|0,((b|0)==0?0:b+8|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;sn(f);h=b;j=d;Wb(j|0)}function In(a,b){a=a|0;b=b|0;var d=0;d=i;Rs(a,b);c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=-1;c[a>>2]=9944;c[a+8>>2]=9964;i=d;return}function Jn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a+28|0;c[e>>2]=1376;f=a;t=0;na(95,f|0,b|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;h=I;j=g;Wb(j|0)}c[a>>2]=9860;g=a+8|0;c[g>>2]=9888;c[e>>2]=9916;t=0;na(51,g|0,((b|0)==0?0:b+8|0)|0);b=t;t=0;if(!(b&1)){i=d;return}d=Kb(-1,-1)|0;b=I;sn(f);h=b;j=d;Wb(j|0)}function Kn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;f=(d|0)==(b|0);a[d+12|0]=f&1;if(f){i=e;return}else{g=d}while(1){h=c[g+8>>2]|0;d=h+12|0;if((a[d]|0)!=0){j=17;break}k=h+8|0;l=c[k>>2]|0;f=c[l>>2]|0;if((f|0)==(h|0)){m=c[l+4>>2]|0;if((m|0)==0){j=7;break}n=m+12|0;if((a[n]|0)!=0){j=7;break}a[d]=1;a[l+12|0]=(l|0)==(b|0)|0;a[n]=1}else{if((f|0)==0){j=14;break}n=f+12|0;if((a[n]|0)!=0){j=14;break}a[d]=1;a[l+12|0]=(l|0)==(b|0)|0;a[n]=1}if((l|0)==(b|0)){j=17;break}else{g=l}}if((j|0)==7){if((c[h>>2]|0)==(g|0)){o=l;p=h}else{Ln(h);b=c[k>>2]|0;o=c[b+8>>2]|0;p=b}a[p+12|0]=1;a[o+12|0]=0;Mn(o);i=e;return}else if((j|0)==14){if((c[h>>2]|0)==(g|0)){Mn(h);g=c[k>>2]|0;q=c[g+8>>2]|0;r=g}else{q=l;r=h}a[r+12|0]=1;a[q+12|0]=0;Ln(q);i=e;return}else if((j|0)==17){i=e;return}}function Ln(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a+4|0;e=c[d>>2]|0;f=e;g=c[f>>2]|0;c[d>>2]=g;if((g|0)!=0){c[g+8>>2]=a}g=a+8|0;c[e+8>>2]=c[g>>2];d=c[g>>2]|0;h=d;if((c[h>>2]|0)==(a|0)){c[h>>2]=e;c[f>>2]=a;c[g>>2]=e;i=b;return}else{c[d+4>>2]=e;c[f>>2]=a;c[g>>2]=e;i=b;return}}function Mn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;e=c[d>>2]|0;f=e+4|0;g=c[f>>2]|0;c[d>>2]=g;if((g|0)!=0){c[g+8>>2]=a}g=a+8|0;c[e+8>>2]=c[g>>2];d=c[g>>2]|0;h=d;if((c[h>>2]|0)==(a|0)){c[h>>2]=e;c[f>>2]=a;c[g>>2]=e;i=b;return}else{c[d+4>>2]=e;c[f>>2]=a;c[g>>2]=e;i=b;return}}function Nn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((a[b+36|0]|0)!=0){Mg(b)|0}On(b,d);d=b+28|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;if((c[b+16>>2]|0)==0){i=e;return b|0}g=c[b+32>>2]|0;if((f|0)>=(g|0)){i=e;return b|0}h=c[b+12>>2]|0;j=f;while(1){if((c[h+(j>>>5<<2)>>2]&1<<(j&31)|0)==0){k=8;break}f=j+1|0;c[d>>2]=f;if((f|0)<(g|0)){j=f}else{k=8;break}}if((k|0)==8){i=e;return b|0}return 0}function On(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e;g=b+28|0;h=c[g>>2]|0;j=c[b+32>>2]|0;if((h|0)>=(j|0)){if((a[b+52|0]&4)==0){i=e;return}c[f>>2]=2160;c[f+4>>2]=h;c[f+8>>2]=j;t=0;ma(251,f|0);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;ub(f|0);Wb(j|0)}}j=b+4|0;f=c[j>>2]|0;k=b;l=c[k>>2]|0;if((f|0)==(l|0)){i=e;return}m=b+56|0;n=b+104|0;o=b+108|0;b=h;h=f;f=l;l=0;while(1){p=f+(l*68|0)|0;if((c[p>>2]|0)==(b|0)){Pn(d,p,f+(l*68|0)+4|0,m,(a[n]|0)==0?0:o);q=c[k>>2]|0;r=c[j>>2]|0}else{q=f;r=h}p=l+1|0;if(!(p>>>0<((r-q|0)/68|0)>>>0)){break}b=c[g>>2]|0;h=r;f=q;l=p}i=e;return}function Pn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;h=i;i=i+248|0;j=h;k=h+8|0;l=h+16|0;m=h+24|0;n=h+32|0;o=h+40|0;p=h+48|0;q=h+56|0;r=h+152|0;s=q;Pg(q,f);u=d+28|0;v=q;t=0;La(29,u|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0,g|0);w=t;t=0;a:do{if(w&1){x=6}else{y=q;z=c[(c[v>>2]|0)+ -12>>2]|0;A=c[s+(z+4)>>2]|0;B=c[s+(z+12)>>2]|0;t=0;La(30,e|0,0,0);z=t;t=0;if(z&1){x=6;break}b:do{if((B|0)!=0&(A&16|0)!=0){t=0;Ea(26,y|0,c[b>>2]|0)|0;z=t;t=0;if(z&1){x=6;break a}z=f+20|0;C=c[z>>2]|0;D=f+24|0;E=c[D>>2]|0;F=E-C|0;G=d+64|0;c:do{if((c[G>>2]&2|0)==0){H=0}else{d:do{if((E|0)!=(C|0)){J=a[C]|0;t=0;na(42,l|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);K=t;t=0;if(K&1){x=6;break a}t=0;K=Ea(20,l|0,21368)|0;L=t;t=0;do{if(!(L&1)){t=0;M=Ea(c[(c[K>>2]|0)+28>>2]|0,K|0,43)|0;N=t;t=0;if(N&1){break}t=0;ma(230,l|0);N=t;t=0;if(N&1){x=6;break a}if(J<<24>>24==M<<24>>24){H=0;break c}M=a[C]|0;t=0;na(42,k|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);N=t;t=0;if(N&1){x=6;break a}t=0;N=Ea(20,k|0,21368)|0;O=t;t=0;do{if(!(O&1)){t=0;P=Ea(c[(c[N>>2]|0)+28>>2]|0,N|0,45)|0;Q=t;t=0;if(Q&1){break}t=0;ma(230,k|0);Q=t;t=0;if(Q&1){x=6;break a}if(M<<24>>24==P<<24>>24){H=0;break c}else{break d}}}while(0);M=Kb(-1,-1)|0;N=I;t=0;ma(230,k|0);O=t;t=0;if(!(O&1)){R=N;S=M;x=7;break a}M=Kb(-1,-1,0)|0;Xe(M)}}while(0);J=Kb(-1,-1)|0;K=I;t=0;ma(230,l|0);L=t;t=0;if(!(L&1)){R=K;S=J;x=7;break a}J=Kb(-1,-1,0)|0;Xe(J)}}while(0);H=1}}while(0);do{if((F|0)==(B|0)){if((B|0)>(c[d+60>>2]|0)|H){break}t=0;sa(29,e|0,C|0,B|0)|0;E=t;t=0;if(E&1){x=6;break a}else{break b}}}while(0);t=0;sa(29,e|0,C|0,F|0)|0;E=t;t=0;if(E&1){x=6;break a}t=0;ma(252,f|0);E=t;t=0;if(E&1){x=6;break a}E=r;t=0;na(96,r|0,f|0);J=t;t=0;if(J&1){x=6;break a}J=r;t=0;La(29,u|0,E+(c[(c[J>>2]|0)+ -12>>2]|0)|0,g|0);K=t;t=0;e:do{if(K&1){x=67}else{L=r;c[E+((c[(c[J>>2]|0)+ -12>>2]|0)+12)>>2]=0;if(H){t=0;Ea(27,L|0,32)|0;M=t;t=0;if(M&1){x=67;break}}t=0;Ea(26,L|0,c[b>>2]|0)|0;M=t;t=0;if(M&1){x=67;break}M=c[D>>2]|0;N=c[z>>2]|0;do{if((M|0)==(N|0)){if((c[G>>2]&2|0)==0){T=M;U=M;V=H;break}t=0;Ea(27,L|0,32)|0;O=t;t=0;if(O&1){x=67;break e}T=c[D>>2]|0;U=c[z>>2]|0;V=1}else{T=M;U=N;V=H}}while(0);N=c[d+60>>2]|0;M=T-U|0;L=M>>>0<N>>>0?M:N;do{if(B>>>0>L>>>0){N=V&1;M=N+F|0;O=L>>>0<M>>>0?L:M;f:do{if(N>>>0<O>>>0){M=(a[e]&1)==0;P=e+1|0;Q=e+8|0;W=N;while(1){if(M){X=P}else{X=c[Q>>2]|0}Y=W+1|0;if((a[U+W|0]|0)!=(a[X+(W-N)|0]|0)){Z=W;break f}if(Y>>>0<O>>>0){W=Y}else{Z=Y;break}}}else{Z=N}}while(0);O=Z>>>0<L>>>0?Z:N;t=0;sa(29,e|0,U|0,O|0)|0;W=t;t=0;if(W&1){x=67;break e}W=B-L|0;if((W|0)<=0){t=0;Oa(14,9976,9984,227,10032);Q=t;t=0;if(Q&1){x=67;break e}}Q=c[(c[J>>2]|0)+ -12>>2]|0;P=E+(Q+76)|0;M=c[P>>2]|0;g:do{if((M|0)==-1){t=0;na(42,j|0,E+Q|0);Y=t;t=0;if(Y&1){x=67;break e}t=0;Y=Ea(20,j|0,21368)|0;_=t;t=0;do{if(!(_&1)){t=0;$=Ea(c[(c[Y>>2]|0)+28>>2]|0,Y|0,32)|0;aa=t;t=0;if(aa&1){break}t=0;ma(230,j|0);aa=t;t=0;if(aa&1){x=67;break e}aa=$<<24>>24;c[P>>2]=aa;ba=aa;break g}}while(0);Y=Kb(-1,-1)|0;_=I;t=0;ma(230,j|0);aa=t;t=0;if(!(aa&1)){ca=_;da=Y;break e}Y=Kb(-1,-1,0)|0;Xe(Y)}else{ba=M}}while(0);t=0;sa(27,e|0,W|0,ba&255|0)|0;M=t;t=0;if(M&1){x=67;break e}t=0;sa(26,e|0,U+O|0,L-O|0)|0;M=t;t=0;if(M&1){x=67;break e}if((((W|0)<0?L:B)|0)!=(B|0)){t=0;Oa(14,10040,9984,231,10032);M=t;t=0;if(M&1){x=67;break e}}M=a[e]|0;if((M&1)==0){ea=(M&255)>>>1}else{ea=c[e+4>>2]|0}if((ea|0)==(B|0)){break}t=0;Oa(14,10120,9984,232,10032);M=t;t=0;if(M&1){x=67;break e}}else{t=0;sa(29,e|0,U|0,L|0)|0;M=t;t=0;if(M&1){x=67;break e}}}while(0);t=0;ma(21,r|0);L=t;t=0;if(L&1){x=6;break a}else{break b}}}while(0);if((x|0)==67){E=Kb(-1,-1)|0;ca=I;da=E}t=0;ma(21,r|0);E=t;t=0;if(!(E&1)){fa=da;ga=ca;break a}ha=Kb(-1,-1,0)|0;ia=I;Xe(ha)}else{if((B|0)>0){c[s+((c[(c[v>>2]|0)+ -12>>2]|0)+12)>>2]=0}t=0;Ea(26,y|0,c[b>>2]|0)|0;E=t;t=0;if(E&1){x=6;break a}E=f+20|0;J=c[E>>2]|0;F=d+64|0;z=f+24|0;h:do{if((c[F>>2]&2|0)==0){ja=0}else{i:do{if((c[z>>2]|0)!=(J|0)){D=a[J]|0;t=0;na(42,p|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);G=t;t=0;if(G&1){x=6;break a}t=0;G=Ea(20,p|0,21368)|0;K=t;t=0;do{if(!(K&1)){t=0;C=Ea(c[(c[G>>2]|0)+28>>2]|0,G|0,43)|0;L=t;t=0;if(L&1){break}t=0;ma(230,p|0);L=t;t=0;if(L&1){x=6;break a}if(D<<24>>24==C<<24>>24){ja=0;break h}C=a[J]|0;t=0;na(42,o|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);L=t;t=0;if(L&1){x=6;break a}t=0;L=Ea(20,o|0,21368)|0;M=t;t=0;do{if(!(M&1)){t=0;P=Ea(c[(c[L>>2]|0)+28>>2]|0,L|0,45)|0;Q=t;t=0;if(Q&1){break}t=0;ma(230,o|0);Q=t;t=0;if(Q&1){x=6;break a}if(C<<24>>24==P<<24>>24){ja=0;break h}else{break i}}}while(0);C=Kb(-1,-1)|0;L=I;t=0;ma(230,o|0);M=t;t=0;if(!(M&1)){R=L;S=C;x=7;break a}C=Kb(-1,-1,0)|0;Xe(C)}}while(0);D=Kb(-1,-1)|0;G=I;t=0;ma(230,p|0);K=t;t=0;if(!(K&1)){R=G;S=D;x=7;break a}D=Kb(-1,-1,0)|0;Xe(D)}}while(0);t=0;na(42,n|0,s+(c[(c[v>>2]|0)+ -12>>2]|0)|0);D=t;t=0;if(D&1){x=6;break a}t=0;D=Ea(20,n|0,21368)|0;G=t;t=0;do{if(!(G&1)){t=0;K=Ea(c[(c[D>>2]|0)+28>>2]|0,D|0,32)|0;W=t;t=0;if(W&1){break}t=0;ma(230,n|0);W=t;t=0;if(W&1){x=6;break a}else{ja=K;break h}}}while(0);D=Kb(-1,-1)|0;G=I;t=0;ma(230,n|0);K=t;t=0;if(!(K&1)){R=G;S=D;x=7;break a}D=Kb(-1,-1,0)|0;Xe(D)}}while(0);D=(c[d+60>>2]|0)-(ja<<24>>24!=0)|0;G=(c[z>>2]|0)-(c[E>>2]|0)|0;K=G>>>0<D>>>0?G:D;D=c[(c[v>>2]|0)+ -12>>2]|0;G=s+(D+76)|0;W=c[G>>2]|0;j:do{if((W|0)==-1){t=0;na(42,m|0,s+D|0);O=t;t=0;if(O&1){x=6;break a}t=0;O=Ea(20,m|0,21368)|0;C=t;t=0;do{if(!(C&1)){t=0;L=Ea(c[(c[O>>2]|0)+28>>2]|0,O|0,32)|0;M=t;t=0;if(M&1){break}t=0;ma(230,m|0);M=t;t=0;if(M&1){x=6;break a}M=L<<24>>24;c[G>>2]=M;ka=M;break j}}while(0);O=Kb(-1,-1)|0;C=I;t=0;ma(230,m|0);M=t;t=0;if(!(M&1)){R=C;S=O;x=7;break a}O=Kb(-1,-1,0)|0;Xe(O)}else{ka=W}}while(0);t=0;va(7,e|0,J|0,K|0,B|0,ka&255|0,A|0,ja|0,(c[F>>2]&4|0)!=0|0);W=t;t=0;if(W&1){x=6;break a}}}while(0);t=0;ma(252,f|0);A=t;t=0;if(A&1){x=6;break}Ug(q);i=h;return}}while(0);if((x|0)==6){h=Kb(-1,-1)|0;R=I;S=h;x=7}if((x|0)==7){fa=S;ga=R}t=0;ma(21,q|0);q=t;t=0;if(q&1){ha=Kb(-1,-1,0)|0;ia=I;Xe(ha)}else{Wb(fa|0)}}function Qn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+24|0;d=b;e=b+8|0;f=b+16|0;c[e>>2]=0;c[f>>2]=0;Bd(c[a>>2]|0,35716,e|0);g=c[e>>2]|0;if((g|0)<=0){i=b;return}e=ZB(g)|0;$a(c[a>>2]|0,g|0,f|0,e|0);f=Ye(16720,e)|0;Ot(d,f+(c[(c[f>>2]|0)+ -12>>2]|0)|0);t=0;g=Ea(20,d|0,21368)|0;a=t;t=0;do{if(!(a&1)){t=0;h=Ea(c[(c[g>>2]|0)+28>>2]|0,g|0,10)|0;j=t;t=0;if(j&1){break}bz(d);Nu(f,h)|0;xu(f)|0;$B(e);i=b;return}}while(0);b=Kb(-1,-1)|0;t=0;ma(230,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1,0)|0;Xe(d)}else{Wb(b|0)}}function Rn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=b;h=b;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;t=0;Ea(28,g|0,d|0)|0;d=t;t=0;do{if(!(d&1)){c[b+20>>2]=e;a[b+28|0]=1;h=b+16|0;a[h]=0;if((e|0)==1){t=0;j=oa(97,35632)|0;k=t;t=0;if(k&1){break}c[b+24>>2]=j}else if((e|0)==0){t=0;j=oa(97,35633)|0;k=t;t=0;if(k&1){break}c[b+24>>2]=j}a[h]=0;c[b+32>>2]=0;c[b+12>>2]=0;i=f;return}}while(0);f=Kb(-1,-1)|0;mt(g);Wb(f|0)}function Sn(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+8|0;e=d;if((c[b+12>>2]|0)==0){Ye(16720,10168)|0;i=d;return}f=b+24|0;Yc(c[f>>2]|0);do{if((a[b+28|0]|0)!=0){c[e>>2]=0;Ye(_e(Ye(16720,10208)|0,b)|0,10160)|0;Bd(c[f>>2]|0,35713,e|0);if((c[e>>2]|0)!=0){break}Ye(16720,10232)|0;Qn(f);qc(1)}}while(0);a[b+16|0]=1;i=d;return}function Tn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;e=i;i=i+232|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+224|0;m=b+12|0;do{if((c[m>>2]|0)!=0){Ye(16720,10272)|0;n=c[m>>2]|0;if((n|0)==0){break}mt(n);_B(n)}}while(0);n=k;o=d;if((a[o]&1)==0){p=d+1|0}else{p=c[d+8>>2]|0}q=k+108|0;r=k;s=k+8|0;u=k;c[r>>2]=3868;c[k+108>>2]=3888;c[k+4>>2]=0;t=0;na(54,k+108|0,s|0);v=t;t=0;a:do{if(v&1){w=Kb(-1,-1)|0;x=I;y=w}else{c[k+180>>2]=0;c[k+184>>2]=-1;c[r>>2]=3748;c[q>>2]=3768;t=0;ma(249,s|0);w=t;t=0;if(w&1){w=Kb(-1,-1)|0;x=I;y=w;break}do{if((bf(s,p,8)|0)==0){w=c[(c[u>>2]|0)+ -12>>2]|0;t=0;na(43,n+w|0,c[n+(w+16)>>2]|4|0);w=t;t=0;if(!(w&1)){break}w=Kb(-1,-1)|0;z=I;t=0;ma(233,s|0);A=t;t=0;if(!(A&1)){x=z;y=w;break a}B=Kb(-1,-1,0)|0;C=I;Xe(B)}}while(0);do{if((c[k+72>>2]|0)==0){t=0;w=Ea(25,16720,10304)|0;z=t;t=0;if(z&1){D=26;break}if((a[o]&1)==0){E=d+1|0}else{E=c[d+8>>2]|0}t=0;z=Ea(25,w|0,E|0)|0;w=t;t=0;if(w&1){D=26;break}t=0;Ea(25,z|0,10160)|0;z=t;t=0;if(z&1){D=26;break}t=0;ma(253,1);z=t;t=0;if(z&1){D=26;break}}else{t=0;z=oa(93,12)|0;w=t;t=0;if(w&1){D=26;break}w=z;c[h>>2]=c[n+((c[(c[u>>2]|0)+ -12>>2]|0)+24)>>2];c[j>>2]=0;t=0;A=g;F=h;c[A+0>>2]=c[F+0>>2];F=f;A=j;c[F+0>>2]=c[A+0>>2];La(31,w|0,g|0,f|0);A=t;t=0;if(A&1){A=Kb(-1,-1)|0;F=I;_B(z);G=F;H=A;break}c[m>>2]=w;t=0;w=oa(91,s|0)|0;A=t;t=0;if(A&1){D=26;break}if((w|0)==0){w=c[(c[u>>2]|0)+ -12>>2]|0;t=0;na(43,n+w|0,c[n+(w+16)>>2]|4|0);w=t;t=0;if(w&1){D=26;break}}t=0;Ea(29,c[m>>2]|0,10320)|0;w=t;t=0;if(w&1){D=26;break}w=c[m>>2]|0;if((a[w]&1)==0){J=w+1|0}else{J=c[w+8>>2]|0}c[l>>2]=J;w=b+24|0;t=0;Oa(18,c[w>>2]|0,1,l|0,0);A=t;t=0;if(A&1){D=26;break}a[b+16|0]=0;if((a[b+28|0]|0)==0){fj(k);i=e;return}t=0;ma(254,w|0);w=t;t=0;if(w&1){D=26;break}fj(k);i=e;return}}while(0);if((D|0)==26){w=Kb(-1,-1)|0;G=I;H=w}t=0;ma(63,k|0);w=t;t=0;if(w&1){w=Kb(-1,-1,0)|0;Xe(w)}else{Wb(H|0)}}}while(0);t=0;ma(155,q|0);q=t;t=0;if(q&1){B=Kb(-1,-1,0)|0;C=I;Xe(B)}else{Wb(y|0)}}function Un(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=b+12|0;do{if((c[f>>2]|0)!=0){Ye(16720,10272)|0;g=c[f>>2]|0;if((g|0)==0){break}mt(g);_B(g)}}while(0);g=b+24|0;tb(c[g>>2]|0,1,d|0,0);a[b+16|0]=0;h=YB(12)|0;j=h;k=c[d>>2]|0;d=sC(k|0)|0;t=0;La(18,j|0,k|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;_B(h);Wb(d|0)}c[f>>2]=j;if((a[b+28|0]|0)==0){i=e;return}Qn(g);i=e;return}function Vn(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;h=b;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;j=e;e=f;f=c[j>>2]|0;a:while(1){do{if((f|0)==0){k=0}else{if((c[f+12>>2]|0)!=(c[f+16>>2]|0)){k=f;break}t=0;l=oa(c[(c[f>>2]|0)+36>>2]|0,f|0)|0;m=t;t=0;if(m&1){n=22;break a}if(!((l|0)==-1)){k=f;break}c[j>>2]=0;k=0}}while(0);l=(k|0)==0;m=c[e>>2]|0;do{if((m|0)==0){n=13}else{if((c[m+12>>2]|0)!=(c[m+16>>2]|0)){if(l){break}else{n=26;break a}}t=0;o=oa(c[(c[m>>2]|0)+36>>2]|0,m|0)|0;p=t;t=0;if(p&1){n=22;break a}if((o|0)==-1){c[e>>2]=0;n=13;break}else{if(l){break}else{n=26;break a}}}}while(0);if((n|0)==13){n=0;if(l){n=26;break}}m=k+12|0;o=c[m>>2]|0;p=k+16|0;if((o|0)==(c[p>>2]|0)){t=0;q=oa(c[(c[k>>2]|0)+36>>2]|0,k|0)|0;r=t;t=0;if(r&1){n=22;break}else{s=q}}else{s=d[o]|0}t=0;na(87,b|0,s&255|0);o=t;t=0;if(o&1){n=22;break}o=c[m>>2]|0;if((o|0)==(c[p>>2]|0)){t=0;oa(c[(c[k>>2]|0)+40>>2]|0,k|0)|0;p=t;t=0;if(p&1){n=22;break}else{f=k;continue}}else{c[m>>2]=o+1;f=k;continue}}if((n|0)==22){k=Kb(-1,-1,0)|0;hb(k|0)|0;if(!((a[h]&1)==0)){_B(c[b+8>>2]|0)}t=0;Ma(3);b=t;t=0;b=Kb(-1,-1)|0;t=0;Ma(2);h=t;t=0;if(h&1){h=Kb(-1,-1,0)|0;Xe(h)}else{Wb(b|0)}}else if((n|0)==26){i=g;return}}function Wn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+8|0;f=e;Ko(f,b+4|0,d);g=c[f>>2]|0;if((g|0)!=(b+8|0)){nt(b+32|0,d)|0;h=g+28|0;j=c[h>>2]|0;i=e;return j|0}g=Ye(16720,10752)|0;if((a[d]&1)==0){k=d+1|0}else{k=c[d+8>>2]|0}Ye(g,k)|0;Ye(16720,10784)|0;h=b+28|0;j=c[h>>2]|0;i=e;return j|0}function Xn(b,d,e,f,g){b=b|0;d=d|0;e=+e;f=+f;g=+g;var h=0,j=0,k=0;h=i;j=Wn(b,b+32|0)|0;if((a[d]&1)==0){k=d+1|0}else{k=c[d+8>>2]|0}Zo(j,k,e,f,g);i=h;return}function Yn(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;var f=0;f=i;_o(Wn(a,a+32|0)|0,b,c,d,e);i=f;return}function Zn(b,d,e){b=b|0;d=d|0;e=+e;var f=0,g=0,h=0;f=i;g=Wn(b,b+32|0)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Xo(g,h,e);i=f;return}function _n(a,b,c){a=a|0;b=b|0;c=+c;var d=0;d=i;Yo(Wn(a,a+32|0)|0,b,c);i=d;return}function $n(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e;if((a[b+44|0]|0)!=0){g=Ye(16720,10424)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Ye(Ye(g,h)|0,10376)|0}h=YB(64)|0;g=h;t=0;na(46,f|0,d|0);j=t;t=0;do{if(j&1){k=Kb(-1,-1)|0;l=I;m=k}else{t=0;na(97,g|0,f|0);k=t;t=0;do{if(k&1){n=1}else{t=0;o=Ea(30,b+4|0,d|0)|0;p=t;t=0;if(p&1){n=0;break}c[o>>2]=g;mt(f);i=e;return}}while(0);k=Kb(-1,-1)|0;o=I;mt(f);if(n){l=o;m=k;break}else{q=o;r=k}Wb(r|0)}}while(0);_B(h);q=l;r=m;Wb(r|0)}function ao(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0;f=i;i=i+16|0;g=f;h=YB(36)|0;j=h;t=0;na(46,g|0,d|0);k=t;t=0;do{if(k&1){l=Kb(-1,-1)|0;m=I;n=l}else{t=0;La(32,j|0,g|0,e|0);l=t;t=0;do{if(l&1){o=1}else{p=b+16|0;t=0;q=Ea(31,p|0,d|0)|0;r=t;t=0;if(r&1){o=0;break}c[q>>2]=j;mt(g);if((a[b+44|0]|0)==0){i=f;return}q=Ye(_e(Ye(16632,10352)|0,d)|0,10368)|0;r=no(p,d)|0;Ye(Lu(q,c[(c[r>>2]|0)+24>>2]|0)|0,10376)|0;i=f;return}}while(0);l=Kb(-1,-1)|0;r=I;mt(g);if(o){m=r;n=l;break}else{s=r;u=l}Wb(u|0)}}while(0);_B(h);s=m;u=n;Wb(u|0)}function bo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+24|0;g=f;h=f+8|0;Ao(g,b+16|0,d);j=c[g>>2]|0;if((j|0)!=(b+20|0)){b=c[j+28>>2]|0;it(h,e);t=0;na(98,b|0,h|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;mt(h);Wb(b|0)}mt(h);i=f;return}h=Ye(16720,10512)|0;if((a[d]&1)==0){k=d+1|0}else{k=c[d+8>>2]|0}Ye(h,k)|0;i=f;return}function co(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e;Ao(f,b+16|0,d);g=c[f>>2]|0;if((g|0)!=(b+20|0)){Sn(c[g+28>>2]|0);i=e;return}g=Ye(16720,10384)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Ye(g,h)|0;i=e;return}function eo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;h=f+8|0;Ao(g,b+16|0,e);j=c[g>>2]|0;Ko(h,b+4|0,d);g=c[h>>2]|0;do{if((j|0)!=(b+20|0)){if((g|0)==(b+8|0)){break}h=j+28|0;So(c[g+28>>2]|0,c[h>>2]|0);k=(c[h>>2]|0)+32|0;c[k>>2]=(c[k>>2]|0)+1;if((a[b+44|0]|0)==0){i=f;return}if((a[e]&1)==0){l=e+1|0}else{l=c[e+8>>2]|0}k=Ye(Ye(16720,l)|0,10456)|0;if((a[d]&1)==0){m=d+1|0}else{m=c[d+8>>2]|0}Ye(Ye(k,m)|0,10376)|0;i=f;return}}while(0);m=Ye(16720,10480)|0;if((a[e]&1)==0){n=e+1|0}else{n=c[e+8>>2]|0}e=Ye(Ye(m,n)|0,10504)|0;if((a[d]&1)==0){o=d+1|0}else{o=c[d+8>>2]|0}Ye(Ye(e,o)|0,10376)|0;i=f;return}function fo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e;Ko(f,b+4|0,d);g=c[f>>2]|0;if((g|0)==(b+8|0)){b=Ye(16720,10576)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Ye(b,h)|0;i=e;return}else{h=Ye(16720,10560)|0;if((a[d]&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}Ye(Ye(h,j)|0,10376)|0;Vo(c[g+28>>2]|0);i=e;return}}function go(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+32|0;e=d;f=d+16|0;g=b;c[b>>2]=10336;h=b+4|0;c[b+8>>2]=0;c[b+12>>2]=0;c[h>>2]=b+8;j=b+16|0;c[b+20>>2]=0;c[b+24>>2]=0;c[j>>2]=b+20;k=b+32|0;l=b+44|0;c[b+48>>2]=0;m=k;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;a[m+12|0]=0;t=0;m=oa(93,64)|0;n=t;t=0;a:do{if(n&1){o=12}else{p=m;t=0;La(18,e|0,10344,4);q=t;t=0;do{if(q&1){r=Kb(-1,-1)|0;s=I;u=r}else{t=0;na(97,p|0,e|0);r=t;t=0;if(r&1){r=Kb(-1,-1)|0;v=I;mt(e);s=v;u=r;break}r=b+28|0;c[r>>2]=p;mt(e);t=0;Ea(23,k|0,10344)|0;v=t;t=0;if(v&1){o=12;break a}v=c[r>>2]|0;t=0;La(18,f|0,10344,4);r=t;t=0;if(r&1){o=12;break a}t=0;r=Ea(30,h|0,f|0)|0;w=t;t=0;if(w&1){w=Kb(-1,-1)|0;x=I;mt(f);y=x;z=w;break a}c[r>>2]=v;mt(f);t=0;ma(255,b|0);v=t;t=0;if(v&1){o=12;break a}t=0;ma(256,b|0);v=t;t=0;if(v&1){o=12;break a}t=0;ma(257,b|0);v=t;t=0;if(v&1){o=12;break a}t=0;ma(258,b|0);v=t;t=0;if(v&1){o=12;break a}a[l]=1;i=d;return}}while(0);_B(m);y=s;z=u}}while(0);if((o|0)==12){o=Kb(-1,-1)|0;y=I;z=o}mt(k);Oo(j);Mo(h);t=0;ma(259,g|0);g=t;t=0;if(g&1){g=Kb(-1,-1,0)|0;Xe(g)}else{Wb(z|0)}}function ho(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=Fo(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=d;return k|0}Go(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;Ho(a,c[e>>2]|0,g,f);j=f;k=j+28|0;i=d;return k|0}function io(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;b=i;i=i+304|0;c=b;d=b+16|0;e=b+32|0;f=b+48|0;g=b+64|0;h=b+80|0;j=b+96|0;k=b+112|0;l=b+128|0;m=b+144|0;n=b+160|0;o=b+176|0;p=b+192|0;q=b+208|0;r=b+224|0;s=b+240|0;u=b+256|0;v=b+272|0;w=b+288|0;jt(c,10840,13);t=0;na(99,a|0,c|0);x=t;t=0;if(x&1){x=Kb(-1,-1)|0;y=I;mt(c);z=y;A=x;Wb(A|0)}mt(c);jt(d,10856,13);t=0;La(33,a|0,d|0,0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;x=I;mt(d);z=x;A=c;Wb(A|0)}mt(d);jt(e,10872,15);t=0;La(33,a|0,e|0,1);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;c=I;mt(e);z=c;A=d;Wb(A|0)}mt(e);jt(f,10856,13);t=0;La(34,a|0,f|0,10888);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(f);z=d;A=e;Wb(A|0)}mt(f);jt(g,10872,15);t=0;La(34,a|0,g|0,10896);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(g);z=e;A=f;Wb(A|0)}mt(g);jt(h,10856,13);t=0;na(100,a|0,h|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(h);z=f;A=g;Wb(A|0)}mt(h);jt(j,10872,15);t=0;na(100,a|0,j|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(j);z=g;A=h;Wb(A|0)}mt(j);jt(k,10840,13);t=0;La(18,l|0,10856,13);j=t;t=0;do{if(j&1){h=Kb(-1,-1)|0;B=I;C=h}else{t=0;La(35,a|0,k|0,l|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(l);B=g;C=h;break}mt(l);mt(k);jt(m,10840,13);t=0;La(18,n|0,10872,15);h=t;t=0;do{if(h&1){g=Kb(-1,-1)|0;D=I;E=g}else{t=0;La(35,a|0,m|0,n|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(n);D=f;E=g;break}mt(n);mt(m);jt(o,10840,13);t=0;La(18,p|0,10904,6);g=t;t=0;do{if(g&1){f=Kb(-1,-1)|0;F=I;G=f}else{t=0;Oa(19,a|0,o|0,0,p|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(p);F=e;G=f;break}mt(p);mt(o);jt(q,10840,13);t=0;La(18,r|0,10912,4);f=t;t=0;do{if(f&1){e=Kb(-1,-1)|0;H=I;J=e}else{t=0;Oa(19,a|0,q|0,1,r|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(r);H=d;J=e;break}mt(r);mt(q);jt(s,10840,13);t=0;na(101,a|0,s|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(s);z=d;A=e;Wb(A|0)}mt(s);jt(u,10840,13);t=0;na(102,a|0,u|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(u);z=d;A=e;Wb(A|0)}mt(u);jt(v,10840,13);t=0;na(103,a|0,v|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(v);z=d;A=e;Wb(A|0)}mt(v);jt(w,10344,4);t=0;na(102,a|0,w|0);e=t;t=0;if(!(e&1)){mt(w);i=b;return}e=Kb(-1,-1)|0;d=I;mt(w);z=d;A=e;Wb(A|0)}}while(0);mt(q);z=H;A=J;Wb(A|0)}}while(0);mt(o);z=F;A=G;Wb(A|0)}}while(0);mt(m);z=D;A=E;Wb(A|0)}}while(0);mt(k);z=B;A=C;Wb(A|0)}function jo(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+272|0;c=b;d=b+16|0;e=b+32|0;f=b+48|0;g=b+64|0;h=b+80|0;j=b+96|0;k=b+112|0;l=b+128|0;m=b+144|0;n=b+160|0;o=b+176|0;p=b+192|0;q=b+208|0;r=b+224|0;s=b+240|0;u=b+256|0;jt(c,10920,15);t=0;na(99,a|0,c|0);v=t;t=0;if(v&1){v=Kb(-1,-1)|0;w=I;mt(c);x=w;y=v;Wb(y|0)}mt(c);jt(d,10936,15);t=0;La(33,a|0,d|0,0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;v=I;mt(d);x=v;y=c;Wb(y|0)}mt(d);jt(e,10952,17);t=0;La(33,a|0,e|0,1);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;c=I;mt(e);x=c;y=d;Wb(y|0)}mt(e);jt(f,10936,15);t=0;La(34,a|0,f|0,10976);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(f);x=d;y=e;Wb(y|0)}mt(f);jt(g,10952,17);t=0;La(34,a|0,g|0,10984);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(g);x=e;y=f;Wb(y|0)}mt(g);jt(h,10936,15);t=0;na(100,a|0,h|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(h);x=f;y=g;Wb(y|0)}mt(h);jt(j,10952,17);t=0;na(100,a|0,j|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(j);x=g;y=h;Wb(y|0)}mt(j);jt(k,10920,15);t=0;La(18,l|0,10936,15);j=t;t=0;do{if(j&1){h=Kb(-1,-1)|0;z=I;A=h}else{t=0;La(35,a|0,k|0,l|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(l);z=g;A=h;break}mt(l);mt(k);jt(m,10920,15);t=0;La(18,n|0,10952,17);h=t;t=0;do{if(h&1){g=Kb(-1,-1)|0;B=I;C=g}else{t=0;La(35,a|0,m|0,n|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(n);B=f;C=g;break}mt(n);mt(m);jt(o,10920,15);t=0;La(18,p|0,10904,6);g=t;t=0;do{if(g&1){f=Kb(-1,-1)|0;D=I;E=f}else{t=0;Oa(19,a|0,o|0,0,p|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(p);D=e;E=f;break}mt(p);mt(o);jt(q,10920,15);t=0;na(101,a|0,q|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(q);x=e;y=f;Wb(y|0)}mt(q);jt(r,10920,15);t=0;na(102,a|0,r|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(r);x=e;y=f;Wb(y|0)}mt(r);jt(s,10920,15);t=0;na(103,a|0,s|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(s);x=e;y=f;Wb(y|0)}mt(s);jt(u,10344,4);t=0;na(102,a|0,u|0);f=t;t=0;if(!(f&1)){mt(u);i=b;return}f=Kb(-1,-1)|0;e=I;mt(u);x=e;y=f;Wb(y|0)}}while(0);mt(o);x=D;y=E;Wb(y|0)}}while(0);mt(m);x=B;y=C;Wb(y|0)}}while(0);mt(k);x=z;y=A;Wb(y|0)}function ko(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;b=i;i=i+304|0;c=b;d=b+16|0;e=b+32|0;f=b+48|0;g=b+64|0;h=b+80|0;j=b+96|0;k=b+112|0;l=b+128|0;m=b+144|0;n=b+160|0;o=b+176|0;p=b+192|0;q=b+208|0;r=b+224|0;s=b+240|0;u=b+256|0;v=b+272|0;w=b+288|0;jt(c,10992,16);t=0;na(99,a|0,c|0);x=t;t=0;if(x&1){x=Kb(-1,-1)|0;y=I;mt(c);z=y;A=x;Wb(A|0)}mt(c);jt(d,11016,16);t=0;La(33,a|0,d|0,0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;x=I;mt(d);z=x;A=c;Wb(A|0)}mt(d);jt(e,11040,18);t=0;La(33,a|0,e|0,1);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;c=I;mt(e);z=c;A=d;Wb(A|0)}mt(e);jt(f,11016,16);t=0;La(34,a|0,f|0,11064);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(f);z=d;A=e;Wb(A|0)}mt(f);jt(g,11040,18);t=0;La(34,a|0,g|0,11072);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(g);z=e;A=f;Wb(A|0)}mt(g);jt(h,11016,16);t=0;na(100,a|0,h|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(h);z=f;A=g;Wb(A|0)}mt(h);jt(j,11040,18);t=0;na(100,a|0,j|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(j);z=g;A=h;Wb(A|0)}mt(j);jt(k,10992,16);t=0;La(18,l|0,11016,16);j=t;t=0;do{if(j&1){h=Kb(-1,-1)|0;B=I;C=h}else{t=0;La(35,a|0,k|0,l|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(l);B=g;C=h;break}mt(l);mt(k);jt(m,10992,16);t=0;La(18,n|0,11040,18);h=t;t=0;do{if(h&1){g=Kb(-1,-1)|0;D=I;E=g}else{t=0;La(35,a|0,m|0,n|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(n);D=f;E=g;break}mt(n);mt(m);jt(o,10992,16);t=0;La(18,p|0,10904,6);g=t;t=0;do{if(g&1){f=Kb(-1,-1)|0;F=I;G=f}else{t=0;Oa(19,a|0,o|0,0,p|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(p);F=e;G=f;break}mt(p);mt(o);jt(q,10992,16);t=0;La(18,r|0,11080,8);f=t;t=0;do{if(f&1){e=Kb(-1,-1)|0;H=I;J=e}else{t=0;Oa(19,a|0,q|0,2,r|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(r);H=d;J=e;break}mt(r);mt(q);jt(s,10992,16);t=0;na(101,a|0,s|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(s);z=d;A=e;Wb(A|0)}mt(s);jt(u,10992,16);t=0;na(102,a|0,u|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(u);z=d;A=e;Wb(A|0)}mt(u);jt(v,10992,16);t=0;na(103,a|0,v|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(v);z=d;A=e;Wb(A|0)}mt(v);jt(w,10344,4);t=0;na(102,a|0,w|0);e=t;t=0;if(!(e&1)){mt(w);i=b;return}e=Kb(-1,-1)|0;d=I;mt(w);z=d;A=e;Wb(A|0)}}while(0);mt(q);z=H;A=J;Wb(A|0)}}while(0);mt(o);z=F;A=G;Wb(A|0)}}while(0);mt(m);z=D;A=E;Wb(A|0)}}while(0);mt(k);z=B;A=C;Wb(A|0)}function lo(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0;b=i;i=i+304|0;c=b;d=b+16|0;e=b+32|0;f=b+48|0;g=b+64|0;h=b+80|0;j=b+96|0;k=b+112|0;l=b+128|0;m=b+144|0;n=b+160|0;o=b+176|0;p=b+192|0;q=b+208|0;r=b+224|0;s=b+240|0;u=b+256|0;v=b+272|0;w=b+288|0;jt(c,11096,13);t=0;na(99,a|0,c|0);x=t;t=0;if(x&1){x=Kb(-1,-1)|0;y=I;mt(c);z=y;A=x;Wb(A|0)}mt(c);jt(d,11112,13);t=0;La(33,a|0,d|0,0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;x=I;mt(d);z=x;A=c;Wb(A|0)}mt(d);jt(e,11128,15);t=0;La(33,a|0,e|0,1);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;c=I;mt(e);z=c;A=d;Wb(A|0)}mt(e);jt(f,11112,13);t=0;La(34,a|0,f|0,11144);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(f);z=d;A=e;Wb(A|0)}mt(f);jt(g,11128,15);t=0;La(34,a|0,g|0,11152);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(g);z=e;A=f;Wb(A|0)}mt(g);jt(h,11112,13);t=0;na(100,a|0,h|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(h);z=f;A=g;Wb(A|0)}mt(h);jt(j,11128,15);t=0;na(100,a|0,j|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(j);z=g;A=h;Wb(A|0)}mt(j);jt(k,11096,13);t=0;La(18,l|0,11112,13);j=t;t=0;do{if(j&1){h=Kb(-1,-1)|0;B=I;C=h}else{t=0;La(35,a|0,k|0,l|0);h=t;t=0;if(h&1){h=Kb(-1,-1)|0;g=I;mt(l);B=g;C=h;break}mt(l);mt(k);jt(m,11096,13);t=0;La(18,n|0,11128,15);h=t;t=0;do{if(h&1){g=Kb(-1,-1)|0;D=I;E=g}else{t=0;La(35,a|0,m|0,n|0);g=t;t=0;if(g&1){g=Kb(-1,-1)|0;f=I;mt(n);D=f;E=g;break}mt(n);mt(m);jt(o,11096,13);t=0;La(18,p|0,10904,6);g=t;t=0;do{if(g&1){f=Kb(-1,-1)|0;F=I;G=f}else{t=0;Oa(19,a|0,o|0,0,p|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;e=I;mt(p);F=e;G=f;break}mt(p);mt(o);jt(q,11096,13);t=0;La(18,r|0,11080,8);f=t;t=0;do{if(f&1){e=Kb(-1,-1)|0;H=I;J=e}else{t=0;Oa(19,a|0,q|0,2,r|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(r);H=d;J=e;break}mt(r);mt(q);jt(s,11096,13);t=0;na(101,a|0,s|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(s);z=d;A=e;Wb(A|0)}mt(s);jt(u,11096,13);t=0;na(102,a|0,u|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(u);z=d;A=e;Wb(A|0)}mt(u);jt(v,11096,13);t=0;na(103,a|0,v|0);e=t;t=0;if(e&1){e=Kb(-1,-1)|0;d=I;mt(v);z=d;A=e;Wb(A|0)}mt(v);jt(w,10344,4);t=0;na(102,a|0,w|0);e=t;t=0;if(!(e&1)){mt(w);i=b;return}e=Kb(-1,-1)|0;d=I;mt(w);z=d;A=e;Wb(A|0)}}while(0);mt(q);z=H;A=J;Wb(A|0)}}while(0);mt(o);z=F;A=G;Wb(A|0)}}while(0);mt(m);z=D;A=E;Wb(A|0)}}while(0);mt(k);z=B;A=C;Wb(A|0)}function mo(a){a=a|0;var b=0;b=i;c[a>>2]=11272;a=c[140]|0;if((a|0)==0){i=b;return}Zd[c[(c[a>>2]|0)+4>>2]&511](a);i=b;return}function no(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=Co(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=d;return k|0}Do(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;Eo(a,c[e>>2]|0,g,f);j=f;k=j+28|0;i=d;return k|0}function oo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f;Ao(g,b+16|0,d);h=c[g>>2]|0;if((h|0)!=(b+20|0)){Un(c[h+28>>2]|0,e);i=f;return}e=Ye(16720,10512)|0;if((a[d]&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}Ye(e,j)|0;i=f;return}function po(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e;Ko(f,b+4|0,d);g=c[f>>2]|0;if((g|0)!=(b+8|0)){nt(b+32|0,d)|0;Ro(c[g+28>>2]|0);i=e;return}g=Ye(16720,10616)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Ye(Ye(g,h)|0,10376)|0;ot(b+32|0,10344)|0;Pa(0);i=e;return}function qo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+8|0;e=d;Ko(e,a+4|0,b);f=c[e>>2]|0;if((f|0)==(a+8|0)){Ye(_e(Ye(16720,10656)|0,b)|0,10376)|0;i=d;return}else{gp(c[f+28>>2]|0);i=d;return}}function ro(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+8|0;h=g;Ko(h,b+4|0,d);j=c[h>>2]|0;if((j|0)!=(b+8|0)){To(c[j+28>>2]|0,e,f);i=g;return}f=Ye(16720,10704)|0;if((a[d]&1)==0){k=d+1|0}else{k=c[d+8>>2]|0}Ye(f,k)|0;i=g;return}function so(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+24|0;e=d;f=d+8|0;jt(f,b,sC(b|0)|0);Ko(e,a+4|0,f);g=c[e>>2]|0;mt(f);if((g|0)==(a+8|0)){Ye(Ye(16720,10752)|0,b)|0;Ye(16720,10784)|0;h=a+28|0;j=c[h>>2]|0;i=d;return j|0}else{ot(a+32|0,b)|0;h=g+28|0;j=c[h>>2]|0;i=d;return j|0}return 0}function to(b,d,e){b=b|0;d=d|0;e=+e;var f=0,g=0,h=0;f=i;g=Wn(b,b+32|0)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}Xo(g,h,e);i=f;return}function uo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0.0,m=0.0;f=i;h=Wn(b,b+32|0)|0;if((a[d]&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}d=e;a[k]=a[d];a[k+1|0]=a[d+1|0];a[k+2|0]=a[d+2|0];a[k+3|0]=a[d+3|0];l=+g[k>>2];d=e+4|0;a[k]=a[d];a[k+1|0]=a[d+1|0];a[k+2|0]=a[d+2|0];a[k+3|0]=a[d+3|0];m=+g[k>>2];d=e+8|0;a[k]=a[d];a[k+1|0]=a[d+1|0];a[k+2|0]=a[d+2|0];a[k+3|0]=a[d+3|0];Zo(h,j,l,m,+g[k>>2]);i=f;return}function vo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=Wn(b,b+32|0)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}$o(g,h,1,0,e);i=f;return}function wo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=Wn(b,b+32|0)|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}ap(g,h,1,0,e);i=f;return}function xo(a){a=a|0;var b=0;b=i;zo(a);i=b;return}function yo(a){a=a|0;var b=0,c=0;b=i;t=0;ma(260,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function zo(a){a=a|0;var b=0;b=i;c[a>>2]=10336;mt(a+32|0);Oo(a+16|0);Mo(a+4|0);mo(a);i=b;return}function Ao(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+8|0;g=f;h=d+4|0;Bo(g,d,e,c[d+4>>2]|0,h);d=c[g>>2]|0;do{if((d|0)!=(h|0)){g=d+16|0;j=a[e]|0;k=(j&1)==0;if(k){l=(j&255)>>>1}else{l=c[e+4>>2]|0}j=a[g]|0;m=(j&1)==0;if(m){n=(j&255)>>>1}else{n=c[d+20>>2]|0}if(k){o=e+1|0}else{o=c[e+8>>2]|0}if(m){p=g+1|0}else{p=c[d+24>>2]|0}g=n>>>0<l>>>0;m=nC(o,p,g?n:l)|0;if((m|0)==0){q=l>>>0<n>>>0?-1:g&1}else{q=m}if((q|0)<0){break}c[b>>2]=d;i=f;return}}while(0);c[b>>2]=h;i=f;return}function Bo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;if((f|0)==0){h=g;j=b;c[j>>2]=h;i=d;return}k=a[e]|0;l=(k&1)==0;m=(k&255)>>>1;k=e+1|0;n=e+8|0;o=e+4|0;e=g;g=f;a:while(1){f=g;while(1){p=f+16|0;q=a[p]|0;r=(q&1)==0;if(r){s=(q&255)>>>1}else{s=c[f+20>>2]|0}if(l){t=m}else{t=c[o>>2]|0}if(r){u=p+1|0}else{u=c[f+24>>2]|0}if(l){v=k}else{v=c[n>>2]|0}p=t>>>0<s>>>0;r=nC(u,v,p?t:s)|0;if((r|0)==0){w=s>>>0<t>>>0?-1:p&1}else{w=r}if((w|0)>=0){break}r=c[f+4>>2]|0;if((r|0)==0){h=e;x=19;break a}else{f=r}}r=c[f>>2]|0;if((r|0)==0){h=f;x=19;break}else{e=f;g=r}}if((x|0)==19){j=b;c[j>>2]=h;i=d;return}}function Co(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&1)==0;k=(h&255)>>>1;h=e+1|0;l=e+8|0;m=e+4|0;e=g;while(1){g=e+16|0;if(b){n=k}else{n=c[m>>2]|0}o=a[g]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[e+20>>2]|0}if(b){r=h}else{r=c[l>>2]|0}if(p){s=g+1|0}else{s=c[e+24>>2]|0}t=q>>>0<n>>>0;u=nC(r,s,t?q:n)|0;if((u|0)==0){v=n>>>0<q>>>0?-1:t&1}else{v=u}if((v|0)<0){w=e;u=c[w>>2]|0;if((u|0)==0){x=17;break}else{e=u;continue}}if(p){y=(o&255)>>>1}else{y=c[e+20>>2]|0}if(b){z=k}else{z=c[m>>2]|0}if(p){A=g+1|0}else{A=c[e+24>>2]|0}if(b){B=h}else{B=c[l>>2]|0}g=z>>>0<y>>>0;p=nC(A,B,g?z:y)|0;if((p|0)==0){C=y>>>0<z>>>0?-1:g&1}else{C=p}if((C|0)>=0){x=33;break}D=e+4|0;p=c[D>>2]|0;if((p|0)==0){x=32;break}else{e=p}}if((x|0)==17){c[d>>2]=e;j=w;i=f;return j|0}else if((x|0)==32){c[d>>2]=e;j=D;i=f;return j|0}else if((x|0)==33){c[d>>2]=e;j=d;i=f;return j|0}return 0}function Do(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=YB(32)|0;t=0;na(46,f+16|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;_B(f);Wb(d|0)}else{c[f+28>>2]=0;c[a>>2]=f;f=a+4|0;c[f>>2]=b+4;c[f+4>>2]=257;i=e;return}}function Eo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function Fo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&1)==0;k=(h&255)>>>1;h=e+1|0;l=e+8|0;m=e+4|0;e=g;while(1){g=e+16|0;if(b){n=k}else{n=c[m>>2]|0}o=a[g]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[e+20>>2]|0}if(b){r=h}else{r=c[l>>2]|0}if(p){s=g+1|0}else{s=c[e+24>>2]|0}t=q>>>0<n>>>0;u=nC(r,s,t?q:n)|0;if((u|0)==0){v=n>>>0<q>>>0?-1:t&1}else{v=u}if((v|0)<0){w=e;u=c[w>>2]|0;if((u|0)==0){x=17;break}else{e=u;continue}}if(p){y=(o&255)>>>1}else{y=c[e+20>>2]|0}if(b){z=k}else{z=c[m>>2]|0}if(p){A=g+1|0}else{A=c[e+24>>2]|0}if(b){B=h}else{B=c[l>>2]|0}g=z>>>0<y>>>0;p=nC(A,B,g?z:y)|0;if((p|0)==0){C=y>>>0<z>>>0?-1:g&1}else{C=p}if((C|0)>=0){x=33;break}D=e+4|0;p=c[D>>2]|0;if((p|0)==0){x=32;break}else{e=p}}if((x|0)==17){c[d>>2]=e;j=w;i=f;return j|0}else if((x|0)==32){c[d>>2]=e;j=D;i=f;return j|0}else if((x|0)==33){c[d>>2]=e;j=d;i=f;return j|0}return 0}function Go(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=YB(32)|0;t=0;na(46,f+16|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;_B(f);Wb(d|0)}else{c[f+28>>2]=0;c[a>>2]=f;f=a+4|0;c[f>>2]=b+4;c[f+4>>2]=257;i=e;return}}function Ho(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function Io(a){a=a|0;var b=0;b=i;mo(a);i=b;return}function Jo(a){a=a|0;var b=0,c=0;b=i;t=0;ma(259,a|0);c=t;t=0;if(c&1){c=Kb(-1,-1)|0;_B(a);Wb(c|0)}else{_B(a);i=b;return}}function Ko(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+8|0;g=f;h=d+4|0;Lo(g,d,e,c[d+4>>2]|0,h);d=c[g>>2]|0;do{if((d|0)!=(h|0)){g=d+16|0;j=a[e]|0;k=(j&1)==0;if(k){l=(j&255)>>>1}else{l=c[e+4>>2]|0}j=a[g]|0;m=(j&1)==0;if(m){n=(j&255)>>>1}else{n=c[d+20>>2]|0}if(k){o=e+1|0}else{o=c[e+8>>2]|0}if(m){p=g+1|0}else{p=c[d+24>>2]|0}g=n>>>0<l>>>0;m=nC(o,p,g?n:l)|0;if((m|0)==0){q=l>>>0<n>>>0?-1:g&1}else{q=m}if((q|0)<0){break}c[b>>2]=d;i=f;return}}while(0);c[b>>2]=h;i=f;return}function Lo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;if((f|0)==0){h=g;j=b;c[j>>2]=h;i=d;return}k=a[e]|0;l=(k&1)==0;m=(k&255)>>>1;k=e+1|0;n=e+8|0;o=e+4|0;e=g;g=f;a:while(1){f=g;while(1){p=f+16|0;q=a[p]|0;r=(q&1)==0;if(r){s=(q&255)>>>1}else{s=c[f+20>>2]|0}if(l){t=m}else{t=c[o>>2]|0}if(r){u=p+1|0}else{u=c[f+24>>2]|0}if(l){v=k}else{v=c[n>>2]|0}p=t>>>0<s>>>0;r=nC(u,v,p?t:s)|0;if((r|0)==0){w=s>>>0<t>>>0?-1:p&1}else{w=r}if((w|0)>=0){break}r=c[f+4>>2]|0;if((r|0)==0){h=e;x=19;break a}else{f=r}}r=c[f>>2]|0;if((r|0)==0){h=f;x=19;break}else{e=f;g=r}}if((x|0)==19){j=b;c[j>>2]=h;i=d;return}}function Mo(a){a=a|0;var b=0;b=i;No(a,c[a+4>>2]|0);i=b;return}function No(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{No(a,c[b>>2]|0);No(a,c[b+4>>2]|0);mt(b+16|0);_B(b);i=d;return}}function Oo(a){a=a|0;var b=0;b=i;Po(a,c[a+4>>2]|0);i=b;return}function Po(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0){i=d;return}else{Po(a,c[b>>2]|0);Po(a,c[b+4>>2]|0);mt(b+16|0);_B(b);i=d;return}}function Qo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=b+4|0;c[f>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;g=b+24|0;h=g;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;h=b+36|0;c[b+40>>2]=0;c[b+44>>2]=0;c[h>>2]=b+40;j=b+48|0;c[b+52>>2]=0;c[b+56>>2]=0;c[j>>2]=b+52;do{if((At(d,14312)|0)==0){c[b+16>>2]=0;k=5}else{t=0;l=Ia(2)|0;m=t;t=0;if(m&1){break}c[b+16>>2]=l;k=5}}while(0);do{if((k|0)==5){a[b+20|0]=1;t=0;Ea(28,g|0,d|0)|0;l=t;t=0;if(l&1){break}a[b]=0;a[b+60|0]=0;i=e;return}}while(0);e=Kb(-1,-1)|0;Cq(j);Cq(h);mt(g);Bq(f);Wb(e|0)}function Ro(b){b=b|0;var d=0;d=i;Pa(c[b+16>>2]|0);a[b+60|0]=1;i=d;return}function So(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d;c[e>>2]=b;f=a+8|0;g=c[f>>2]|0;if((g|0)==(c[a+12>>2]|0)){vq(a+4|0,e);h=c[e>>2]|0}else{if((g|0)==0){j=0}else{c[g>>2]=b;j=c[f>>2]|0}c[f>>2]=j+4;h=b}ec(c[a+16>>2]|0,c[h+24>>2]|0);i=d;return}function To(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;if((a[b]|0)!=0){Ye(16720,14328)|0}h=Uo(b+36|0,e)|0;c[h>>2]=d;if((a[e]&1)==0){j=e+1|0}else{j=c[e+8>>2]|0}zd(c[b+16>>2]|0,d|0,j|0);jt(g,14368,21);t=0;na(104,g|0,87);j=t;t=0;if(j&1){j=Kb(-1,-1)|0;mt(g);Wb(j|0)}else{mt(g);i=f;return}}function Uo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=sq(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=d;return k|0}tq(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;uq(a,c[e>>2]|0,g,f);j=f;k=j+28|0;i=d;return k|0}function Vo(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+24|0;e=d;f=d+8|0;g=d+16|0;h=b+16|0;od(c[h>>2]|0);if((a[b+20|0]|0)!=0){j=Ye(16720,14392)|0;k=b+24|0;if((a[k]&1)==0){l=k+1|0}else{l=c[b+32>>2]|0}Ye(Ye(j,l)|0,14320)|0}c[f>>2]=0;id(c[h>>2]|0,35716,f|0);l=c[f>>2]|0;if((l|0)<=0){m=b;a[m]=1;i=d;return}j=ZB(l)|0;c[g>>2]=0;Hb(c[h>>2]|0,l|0,g|0,j|0);g=Ye(16720,j)|0;Ot(e,g+(c[(c[g>>2]|0)+ -12>>2]|0)|0);t=0;l=Ea(20,e|0,21368)|0;k=t;t=0;do{if(!(k&1)){t=0;n=Ea(c[(c[l>>2]|0)+28>>2]|0,l|0,10)|0;o=t;t=0;if(o&1){break}bz(e);Nu(g,n)|0;xu(g)|0;$B(j);id(c[h>>2]|0,35714,f|0);if((c[f>>2]|0)==0){Ye(16720,14408)|0;qc(1)}else{m=b;a[m]=1;i=d;return}}}while(0);d=Kb(-1,-1)|0;t=0;ma(230,e|0);e=t;t=0;if(e&1){e=Kb(-1,-1,0)|0;Xe(e)}else{Wb(d|0)}}function Wo(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=ud(c[a+16>>2]|0,b|0)|0;if(!((e|0)==-1)){i=d;return e|0}Ye(_e(Ye(Ye(Ye(16720,14440)|0,b)|0,14456)|0,a+24|0)|0,14488)|0;i=d;return e|0}function Xo(a,b,c){a=a|0;b=b|0;c=+c;var d=0;d=i;Fc(Wo(a,b)|0,+c);i=d;return}function Yo(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0;e=i;i=i+8|0;f=e;qq(f,a+48|0,b);b=c[f>>2]|0;if((b|0)==(a+52|0)){i=e;return}Fc(c[b+28>>2]|0,+d);i=e;return}function Zo(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;var f=0;f=i;jd(Wo(a,b)|0,+c,+d,+e);i=f;return}function _o(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=+e;f=+f;var g=0,h=0;g=i;i=i+8|0;h=g;qq(h,a+48|0,b);b=c[h>>2]|0;if((b|0)==(a+52|0)){i=g;return}jd(c[b+28>>2]|0,+d,+e,+f);i=g;return}function $o(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;Ra(Wo(a,b)|0,c|0,d&1|0,e|0);i=f;return}function ap(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=i;jc(Wo(a,b)|0,c|0,d&1|0,e|0);i=f;return}function bp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}g=Wo(b,f)|0;f=Uo(b+48|0,d)|0;c[f>>2]=g;i=e;return}function cp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;a=i;i=i+232|0;f=a;g=a+40|0;h=a+88|0;j=a+104|0;k=a+168|0;Xj(f,14496,0,0);t=0;La(36,g|0,b|0,f|0);b=t;t=0;a:do{if(b&1){l=8}else{m=h;c[m>>2]=0;n=h+4|0;c[n>>2]=0;c[h+8>>2]=0;t=0;na(105,j|0,g|0);o=t;t=0;b:do{if(o&1){l=9}else{t=0;na(106,k|0,g|0);p=t;t=0;do{if(p&1){l=10}else{t=0;La(37,h|0,j|0,k|0);q=t;t=0;if(q&1){q=Kb(-1,-1)|0;r=I;t=0;ma(261,k|0);s=t;t=0;if(!(s&1)){u=r;v=q;break}w=Kb(-1,-1,0)|0;x=I;Xe(w)}t=0;ma(261,k|0);q=t;t=0;if(q&1){l=10;break}t=0;ma(261,j|0);q=t;t=0;if(q&1){l=9;break b}q=c[m>>2]|0;if(((c[n>>2]|0)-q|0)==36){t=0;Ea(28,d|0,q+12|0)|0;r=t;t=0;if(r&1){l=9;break b}t=0;r=oa(98,q+24|0)|0;q=t;t=0;if(q&1){l=9;break b}c[e>>2]=r;y=1}else{y=0}tp(h);t=0;ma(246,g+8|0);r=t;t=0;if(r&1){l=8;break a}ek(f);i=a;return y|0}}while(0);if((l|0)==10){p=Kb(-1,-1)|0;u=I;v=p}t=0;ma(261,j|0);p=t;t=0;if(!(p&1)){z=u;A=v;break}w=Kb(-1,-1,0)|0;x=I;Xe(w)}}while(0);if((l|0)==9){n=Kb(-1,-1)|0;z=I;A=n}tp(h);t=0;ma(246,g+8|0);n=t;t=0;if(!(n&1)){B=z;C=A;break}w=Kb(-1,-1,0)|0;x=I;Xe(w)}}while(0);if((l|0)==8){l=Kb(-1,-1)|0;B=I;C=l}t=0;ma(246,f|0);f=t;t=0;if(f&1){w=Kb(-1,-1,0)|0;x=I;Xe(w)}else{Wb(C|0)}return 0}function dp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;e=i;i=i+960|0;f=e;g=e+64|0;h=e+128|0;j=e+192|0;k=e+256|0;l=e+320|0;m=e+384|0;n=e+448|0;o=e+512|0;p=e+576|0;q=e+640|0;r=e+704|0;s=e+768|0;u=e+832|0;v=e+896|0;Sj(m,b);t=0;na(107,n|0,d|0);w=t;t=0;a:do{if(w&1){x=22}else{t=0;na(107,k|0,m|0);y=t;t=0;b:do{if(y&1){x=23}else{t=0;na(107,l|0,n|0);z=t;t=0;c:do{if(z&1){x=9}else{d:do{if(oq(k,l)|0){A=0}else{B=0;while(1){C=B+1|0;t=0;ma(262,k|0);D=t;t=0;if(D&1){break}if(oq(k,l)|0){A=C;break d}else{B=C}}B=Kb(-1,-1)|0;C=I;t=0;ma(261,l|0);D=t;t=0;if(!(D&1)){E=C;F=B;break c}G=Kb(-1,-1,0)|0;H=I;Xe(G)}}while(0);t=0;ma(261,l|0);B=t;t=0;if(B&1){x=9;break}t=0;ma(261,k|0);B=t;t=0;if(B&1){x=23;break b}t=0;ma(261,n|0);B=t;t=0;if(B&1){x=22;break a}fk(m);B=a+8|0;C=a;if(A>>>0>(((c[B>>2]|0)-(c[C>>2]|0)|0)/12|0)>>>0){mq(a);if(A>>>0>357913941){Uy(0)}D=((c[B>>2]|0)-(c[C>>2]|0)|0)/12|0;if(D>>>0<178956970){B=D<<1;J=B>>>0<A>>>0?A:B}else{J=357913941}nq(a,J);Sj(u,b);t=0;na(107,v|0,d|0);B=t;t=0;do{if(B&1){x=80}else{t=0;La(38,a|0,u|0,v|0);D=t;t=0;if(D&1){D=Kb(-1,-1)|0;K=I;t=0;ma(261,v|0);L=t;t=0;if(!(L&1)){M=D;N=K;break}O=Kb(-1,-1,0)|0;P=I;Xe(O)}t=0;ma(261,v|0);K=t;t=0;if(K&1){x=80;break}fk(u);i=e;return}}while(0);if((x|0)==80){B=Kb(-1,-1)|0;M=B;N=I}t=0;ma(261,u|0);B=t;t=0;if(B&1){O=Kb(-1,-1,0)|0;P=I;Xe(O)}else{Q=M;R=N;Wb(Q|0)}}Sj(o,d);B=a+4|0;e:do{if(A>>>0>(((c[B>>2]|0)-(c[C>>2]|0)|0)/12|0)>>>0){t=0;Ea(32,o|0,b|0)|0;K=t;t=0;if(K&1){x=27;break}K=(c[B>>2]|0)-(c[C>>2]|0)|0;if((K|0)<=0){S=1;x=29;break}D=(K|0)/12|0;while(1){t=0;ma(262,o|0);K=t;t=0;if(K&1){break}K=D+ -1|0;if((K|0)>0){D=K}else{S=1;x=29;break e}}D=Kb(-1,-1)|0;T=D;U=I;x=28}else{S=0;x=29}}while(0);f:do{if((x|0)==29){t=0;na(107,p|0,b|0);D=t;t=0;if(D&1){x=27;break}t=0;na(107,q|0,o|0);D=t;t=0;g:do{if(D&1){x=61}else{K=c[C>>2]|0;t=0;na(107,g|0,p|0);L=t;t=0;h:do{if(L&1){x=62}else{t=0;na(107,f|0,g|0);V=t;t=0;i:do{if(V&1){x=44}else{t=0;na(107,j|0,q|0);W=t;t=0;j:do{if(W&1){x=45}else{t=0;na(107,h|0,j|0);X=t;t=0;k:do{if(X&1){x=46}else{l:do{if(oq(f,h)|0){Y=K}else{Z=K;while(1){t=0;_=oa(99,f|0)|0;$=t;t=0;if($&1){break}t=0;Ea(28,Z|0,_|0)|0;_=t;t=0;if(_&1){break}t=0;ma(262,f|0);_=t;t=0;if(_&1){break}_=Z+12|0;if(oq(f,h)|0){Y=_;break l}else{Z=_}}Z=Kb(-1,-1)|0;_=I;t=0;ma(261,h|0);$=t;t=0;if(!($&1)){aa=_;ba=Z;break k}ca=Kb(-1,-1,0)|0;da=I;Xe(ca)}}while(0);t=0;ma(261,h|0);Z=t;t=0;if(Z&1){x=46;break}t=0;ma(261,j|0);Z=t;t=0;if(Z&1){x=45;break j}t=0;ma(261,f|0);Z=t;t=0;if(Z&1){x=44;break i}t=0;ma(261,g|0);Z=t;t=0;if(Z&1){x=62;break h}t=0;ma(261,q|0);Z=t;t=0;if(Z&1){x=61;break g}t=0;ma(261,p|0);Z=t;t=0;if(Z&1){x=27;break f}m:do{if(S){t=0;na(107,r|0,o|0);Z=t;t=0;if(Z&1){x=27;break f}t=0;na(107,s|0,d|0);Z=t;t=0;do{if(Z&1){x=65}else{t=0;La(38,a|0,r|0,s|0);_=t;t=0;if(_&1){_=Kb(-1,-1)|0;$=I;t=0;ma(261,s|0);ea=t;t=0;if(!(ea&1)){fa=_;ga=$;break}O=Kb(-1,-1,0)|0;P=I;Xe(O)}else{t=0;ma(261,s|0);$=t;t=0;if($&1){x=65;break}t=0;ma(261,r|0);$=t;t=0;if($&1){x=27;break f}else{break m}}}}while(0);if((x|0)==65){Z=Kb(-1,-1)|0;fa=Z;ga=I}t=0;ma(261,r|0);Z=t;t=0;if(!(Z&1)){ha=fa;ia=ga;break f}O=Kb(-1,-1,0)|0;P=I;Xe(O)}else{Z=c[B>>2]|0;if((Z|0)==(Y|0)){break}else{ja=Z}do{Z=ja+ -12|0;c[B>>2]=Z;mt(Z);ja=c[B>>2]|0;}while((ja|0)!=(Y|0))}}while(0);fk(o);i=e;return}}while(0);if((x|0)==46){X=Kb(-1,-1)|0;aa=I;ba=X}t=0;ma(261,j|0);X=t;t=0;if(!(X&1)){ka=aa;la=ba;break}ca=Kb(-1,-1,0)|0;da=I;Xe(ca)}}while(0);if((x|0)==45){W=Kb(-1,-1)|0;ka=I;la=W}t=0;ma(261,f|0);W=t;t=0;if(!(W&1)){pa=ka;qa=la;break}ca=Kb(-1,-1,0)|0;da=I;Xe(ca)}}while(0);if((x|0)==44){V=Kb(-1,-1)|0;pa=I;qa=V}t=0;ma(261,g|0);V=t;t=0;if(V&1){ca=Kb(-1,-1,0)|0;da=I;Xe(ca)}else{ra=pa;sa=qa;break}}}while(0);if((x|0)==62){K=Kb(-1,-1)|0;ra=I;sa=K}t=0;ma(261,q|0);K=t;t=0;if(!(K&1)){ta=sa;ua=ra;break}O=Kb(-1,-1,0)|0;P=I;Xe(O)}}while(0);if((x|0)==61){D=Kb(-1,-1)|0;ta=D;ua=I}t=0;ma(261,p|0);D=t;t=0;if(!(D&1)){ha=ta;ia=ua;break}O=Kb(-1,-1,0)|0;P=I;Xe(O)}}while(0);if((x|0)==27){B=Kb(-1,-1)|0;T=B;U=I;x=28}if((x|0)==28){ha=T;ia=U}t=0;ma(261,o|0);B=t;t=0;if(B&1){O=Kb(-1,-1,0)|0;P=I;Xe(O)}else{Q=ha;R=ia;Wb(Q|0)}}}while(0);if((x|0)==9){z=Kb(-1,-1)|0;E=I;F=z}t=0;ma(261,k|0);z=t;t=0;if(z&1){G=Kb(-1,-1,0)|0;H=I;Xe(G)}else{va=E;wa=F;break}}}while(0);if((x|0)==23){y=Kb(-1,-1)|0;va=I;wa=y}t=0;ma(261,n|0);y=t;t=0;if(!(y&1)){xa=wa;ya=va;break}O=Kb(-1,-1,0)|0;P=I;Xe(O)}}while(0);if((x|0)==22){x=Kb(-1,-1)|0;xa=x;ya=I}t=0;ma(261,m|0);m=t;t=0;if(m&1){O=Kb(-1,-1,0)|0;P=I;Xe(O)}else{Q=xa;R=ya;Wb(Q|0)}}function ep(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+72|0;e=d;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;Tj(j,b+8|0);k=c[b+4>>2]|0;c[h>>2]=k;c[g>>2]=k;t=0;k=f;b=h;c[k+0>>2]=c[b+0>>2];b=e;k=g;c[b+0>>2]=c[k+0>>2];Oa(15,a|0,j|0,f|0,e|0);e=t;t=0;if(!(e&1)){ek(j);i=d;return}d=Kb(-1,-1)|0;t=0;ma(246,j|0);j=t;t=0;if(j&1){j=Kb(-1,-1,0)|0;Xe(j)}else{Wb(d|0)}}function fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;e=i;i=i+656|0;f=e;g=e+40|0;h=e+88|0;j=e+104|0;k=e+168|0;l=e+232|0;m=e+248|0;n=e+288|0;o=e+336|0;p=e+352|0;q=e+416|0;r=e+480|0;s=e+496|0;u=e+504|0;v=e+512|0;w=e+528|0;x=e+640|0;if((yt(b,14504,0,1)|0)==-1){Xj(f,14512,0,0);t=0;La(36,g|0,b|0,f|0);y=t;t=0;a:do{if(y&1){z=12}else{A=h;c[A>>2]=0;B=h+4|0;c[B>>2]=0;c[h+8>>2]=0;t=0;na(105,j|0,g|0);C=t;t=0;b:do{if(C&1){z=13}else{t=0;na(106,k|0,g|0);D=t;t=0;do{if(D&1){z=14}else{t=0;La(37,h|0,j|0,k|0);E=t;t=0;if(E&1){E=Kb(-1,-1)|0;F=I;t=0;ma(261,k|0);G=t;t=0;if(!(G&1)){H=F;J=E;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}t=0;ma(261,k|0);E=t;t=0;if(E&1){z=14;break}t=0;ma(261,j|0);E=t;t=0;if(E&1){z=13;break b}E=c[A>>2]|0;do{if((((c[B>>2]|0)-E|0)/12|0)>>>0>2){t=0;na(46,l|0,E+24|0);F=t;t=0;if(F&1){z=13;break b}t=0;na(108,a|0,l|0);F=t;t=0;if(F&1){F=Kb(-1,-1)|0;G=I;mt(l);M=G;N=F;break b}else{mt(l);break}}}while(0);tp(h);t=0;ma(246,g+8|0);E=t;t=0;if(E&1){z=12;break a}ek(f);i=e;return}}while(0);if((z|0)==14){D=Kb(-1,-1)|0;H=I;J=D}t=0;ma(261,j|0);D=t;t=0;if(!(D&1)){M=H;N=J;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}}while(0);if((z|0)==13){B=Kb(-1,-1)|0;M=I;N=B}tp(h);t=0;ma(246,g+8|0);B=t;t=0;if(!(B&1)){O=M;P=N;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}}while(0);if((z|0)==12){N=Kb(-1,-1)|0;O=I;P=N}t=0;ma(246,f|0);f=t;t=0;if(f&1){K=Kb(-1,-1,0)|0;L=I;Xe(K)}else{Q=O;R=P;Wb(R|0)}}Xj(m,14520,0,0);t=0;La(36,n|0,b|0,m|0);b=t;t=0;c:do{if(b&1){z=30}else{P=o;c[P>>2]=0;O=o+4|0;c[O>>2]=0;c[o+8>>2]=0;t=0;na(105,p|0,n|0);f=t;t=0;d:do{if(f&1){z=32}else{t=0;na(106,q|0,n|0);N=t;t=0;do{if(N&1){z=34}else{t=0;La(37,o|0,p|0,q|0);M=t;t=0;if(M&1){M=Kb(-1,-1)|0;g=I;t=0;ma(261,q|0);h=t;t=0;if(!(h&1)){S=g;T=M;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}t=0;ma(261,q|0);M=t;t=0;if(M&1){z=34;break}t=0;ma(261,p|0);M=t;t=0;if(M&1){z=32;break d}M=c[P>>2]|0;e:do{if((((c[O>>2]|0)-M|0)/12|0)>>>0>2){g=M+36|0;t=0;h=oa(98,g|0)|0;J=t;t=0;if(J&1){J=Kb(-1,-1,4088)|0;H=I;if((H|0)!=(sd(4088)|0)){U=H;V=J;break d}H=$b(J|0)|0;c[r>>2]=4040;j=H+4|0;H=c[j+4>>2]|0;l=r+4|0;c[l>>2]=c[j>>2];c[l+4>>2]=H;hb(J|0)|0;hq(s,d,g);g=c[s>>2]|0;if((g|0)==(d+4|0)){W=0}else{W=c[g+28>>2]|0}yB(r);t=0;Ma(2);g=t;t=0;if(g&1){z=32;break d}else{X=W}}else{X=h}c[u>>2]=0;if((X|0)<=0){break}h=M+24|0;while(1){t=0;na(109,w|0,14528);g=t;t=0;if(g&1){z=31;break}t=0;g=Ea(33,w|0,h|0)|0;J=t;t=0;if(J&1){z=51;break}t=0;J=Ea(34,g|0,u|0)|0;g=t;t=0;if(g&1){z=51;break}t=0;na(110,v|0,J|0);J=t;t=0;if(J&1){z=51;break}t=0;ma(263,w|0);J=t;t=0;if(J&1){z=31;break}t=0;na(46,x|0,v|0);J=t;t=0;if(J&1){z=52;break}t=0;na(108,a|0,x|0);J=t;t=0;if(J&1){z=53;break}mt(x);mt(v);J=(c[u>>2]|0)+1|0;c[u>>2]=J;if((J|0)>=(X|0)){break e}}if((z|0)==31){h=Kb(-1,-1)|0;Y=h;Z=I;z=33;break d}else if((z|0)==51){h=Kb(-1,-1)|0;J=I;t=0;ma(263,w|0);g=t;t=0;if(!(g&1)){U=J;V=h;break d}K=Kb(-1,-1,0)|0;L=I;Xe(K)}else if((z|0)==52){h=Kb(-1,-1)|0;_=I;$=h}else if((z|0)==53){h=Kb(-1,-1)|0;J=I;mt(x);_=J;$=h}mt(v);U=_;V=$;break d}}while(0);tp(o);t=0;ma(246,n+8|0);M=t;t=0;if(M&1){z=30;break c}ek(m);i=e;return}}while(0);if((z|0)==34){N=Kb(-1,-1)|0;S=I;T=N}t=0;ma(261,p|0);N=t;t=0;if(!(N&1)){U=S;V=T;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}}while(0);if((z|0)==32){O=Kb(-1,-1)|0;Y=O;Z=I;z=33}if((z|0)==33){U=Z;V=Y}tp(o);t=0;ma(246,n+8|0);O=t;t=0;if(!(O&1)){aa=U;ba=V;break}K=Kb(-1,-1,0)|0;L=I;Xe(K)}}while(0);if((z|0)==30){z=Kb(-1,-1)|0;aa=I;ba=z}t=0;ma(246,m|0);m=t;t=0;if(m&1){K=Kb(-1,-1,0)|0;L=I;Xe(K)}else{Q=aa;R=ba;Wb(R|0)}}function gp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0;b=i;i=i+112|0;d=b;e=b+16|0;f=b+56|0;g=b+72|0;h=b+88|0;j=b+96|0;k=a+4|0;l=(c[a+8>>2]|0)-(c[k>>2]|0)>>2;m=d;c[m>>2]=0;n=d+4|0;c[n>>2]=0;c[d+8>>2]=0;t=0;Oa(20,e|0,14496,0,0);o=t;t=0;do{if(!(o&1)){a:do{if((l|0)!=0){p=g+4|0;q=g+8|0;r=g+4|0;s=g;u=g;v=j;w=0;b:while(1){x=c[(c[(c[k>>2]|0)+(w<<2)>>2]|0)+12>>2]|0;t=0;na(111,f|0,14536);y=t;t=0;if(y&1){z=13;break}t=0;Ja(6,d|0,x|0,f|0,1)|0;x=t;t=0;if(x&1){z=14;break}_p(f);x=c[m>>2]|0;y=c[n>>2]|0;c[p>>2]=0;c[q>>2]=0;c[s>>2]=r;if((x|0)!=(y|0)){A=x;do{do{if((yt(A,14544,0,7)|0)==-1){if((yt(A,14552,0,7)|0)==-1){break}t=0;La(39,a|0,A|0,g|0);x=t;t=0;if(x&1){z=15;break b}}else{c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;t=0;x=Ja(7,0,A|0,j|0,h|0)|0;B=t;t=0;if(B&1){z=16;break b}if(x){x=c[h>>2]|0;t=0;B=Ea(35,g|0,j|0)|0;C=t;t=0;if(C&1){z=16;break b}c[B>>2]=x}mt(j)}}while(0);A=A+12|0;}while((A|0)!=(y|0))}zq(u);w=w+1|0;if(!(w>>>0<l>>>0)){break a}}if((z|0)==13){w=Kb(-1,-1)|0;D=I;E=w}else if((z|0)==14){w=Kb(-1,-1)|0;v=I;_p(f);D=v;E=w}else if((z|0)==15){w=Kb(-1,-1)|0;F=I;G=w;z=22}else if((z|0)==16){w=Kb(-1,-1)|0;v=I;mt(j);F=v;G=w;z=22}if((z|0)==22){zq(u);D=F;E=G}t=0;ma(246,e|0);w=t;t=0;if(w&1){w=Kb(-1,-1,0)|0;Xe(w)}else{H=D;J=E;K=d;tp(K);Wb(J|0)}}}while(0);t=0;ma(246,e|0);w=t;t=0;if(w&1){break}tp(d);i=b;return}}while(0);b=Kb(-1,-1)|0;H=I;J=b;K=d;tp(K);Wb(J|0)}function hp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e;g=e+16|0;pp(g,c);t=0;La(40,f|0,g|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;h=I;j=d;_p(g);Wb(j|0)}t=0;d=sa(30,a|0,b|0,f|0)|0;b=t;t=0;if(!(b&1)){_p(f);_p(g);i=e;return d|0}d=Kb(-1,-1)|0;e=I;_p(f);h=e;j=d;_p(g);Wb(j|0);return 0}function ip(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;i=i+8|0;d=c;$p(d,b);aq(a,d);i=c;return}function jp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;e=d;f=d+8|0;g=kp(a,e,b)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=d;return k|0}lp(f,a,b);b=f;f=c[b>>2]|0;c[b>>2]=0;mp(a,c[e>>2]|0,g,f);j=f;k=j+28|0;i=d;return k|0}function kp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=c[b+4>>2]|0;if((g|0)==0){h=b+4|0;c[d>>2]=h;j=h;i=f;return j|0}h=a[e]|0;b=(h&1)==0;k=(h&255)>>>1;h=e+1|0;l=e+8|0;m=e+4|0;e=g;while(1){g=e+16|0;if(b){n=k}else{n=c[m>>2]|0}o=a[g]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[e+20>>2]|0}if(b){r=h}else{r=c[l>>2]|0}if(p){s=g+1|0}else{s=c[e+24>>2]|0}t=q>>>0<n>>>0;u=nC(r,s,t?q:n)|0;if((u|0)==0){v=n>>>0<q>>>0?-1:t&1}else{v=u}if((v|0)<0){w=e;u=c[w>>2]|0;if((u|0)==0){x=17;break}else{e=u;continue}}if(p){y=(o&255)>>>1}else{y=c[e+20>>2]|0}if(b){z=k}else{z=c[m>>2]|0}if(p){A=g+1|0}else{A=c[e+24>>2]|0}if(b){B=h}else{B=c[l>>2]|0}g=z>>>0<y>>>0;p=nC(A,B,g?z:y)|0;if((p|0)==0){C=y>>>0<z>>>0?-1:g&1}else{C=p}if((C|0)>=0){x=33;break}D=e+4|0;p=c[D>>2]|0;if((p|0)==0){x=32;break}else{e=p}}if((x|0)==17){c[d>>2]=e;j=w;i=f;return j|0}else if((x|0)==32){c[d>>2]=e;j=D;i=f;return j|0}else if((x|0)==33){c[d>>2]=e;j=d;i=f;return j|0}return 0}function lp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=YB(32)|0;t=0;na(46,f+16|0,d|0);d=t;t=0;if(d&1){d=Kb(-1,-1)|0;_B(f);Wb(d|0)}else{c[f+28>>2]=0;c[a>>2]=f;f=a+4|0;c[f>>2]=b+4;c[f+4>>2]=257;i=e;return}}function mp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=b;c[d>>2]=e;b=a;g=c[c[b>>2]>>2]|0;if((g|0)==0){h=e}else{c[b>>2]=g;h=c[d>>2]|0}Kn(c[a+4>>2]|0,h);h=a+8|0;c[h>>2]=(c[h>>2]|0)+1;i=f;return}function np(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0;e=i;i=i+312|0;f=e;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+80|0;n=e+120|0;o=e+136|0;p=e+176|0;q=e+216|0;r=e+232|0;s=e+272|0;Wp(k,b);b=c[k+4>>2]|0;u=c[k>>2]|0;Ip(n,d);c[j>>2]=u;c[h>>2]=b;t=0;b=g;u=j;c[b+0>>2]=c[u+0>>2];u=f;b=h;c[u+0>>2]=c[b+0>>2];Oa(21,m|0,g|0,f|0,n|0);f=t;t=0;do{if(f&1){v=11}else{g=l;t=0;na(112,g|0,m|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;u=I;t=0;ma(264,m|0);h=t;t=0;if(!(h&1)){w=b;x=u;break}y=Kb(-1,-1,0)|0;z=I;Xe(y)}t=0;ma(264,m|0);u=t;t=0;if(u&1){v=11;break}_p(n);c[p>>2]=0;u=o;t=0;na(112,u|0,p|0);b=t;t=0;a:do{if(b&1){h=Kb(-1,-1)|0;j=I;t=0;ma(264,p|0);d=t;t=0;if(!(d&1)){A=h;B=j;break}y=Kb(-1,-1,0)|0;z=I;Xe(y)}else{t=0;ma(264,p|0);j=t;t=0;b:do{if(!(j&1)){t=0;na(112,r|0,g|0);h=t;t=0;c:do{if(h&1){v=16}else{t=0;na(112,s|0,u|0);d=t;t=0;do{if(d&1){v=17}else{t=0;La(41,q|0,r|0,s|0);k=t;t=0;if(k&1){k=Kb(-1,-1)|0;C=I;t=0;ma(264,s|0);D=t;t=0;if(!(D&1)){E=k;F=C;break}y=Kb(-1,-1,0)|0;z=I;Xe(y)}t=0;ma(264,s|0);C=t;t=0;if(C&1){v=17;break}t=0;ma(264,r|0);C=t;t=0;if(C&1){v=16;break c}C=a;k=q;D=c[C>>2]|0;c[C>>2]=c[k>>2];c[k>>2]=D;D=a+4|0;k=q+4|0;C=c[D>>2]|0;c[D>>2]=c[k>>2];c[k>>2]=C;C=a+8|0;k=q+8|0;D=c[C>>2]|0;c[C>>2]=c[k>>2];c[k>>2]=D;tp(q);t=0;ma(264,o|0);D=t;t=0;if(D&1){break b}Gp(l);i=e;return a|0}}while(0);if((v|0)==17){d=Kb(-1,-1)|0;E=d;F=I}t=0;ma(264,r|0);d=t;t=0;if(!(d&1)){G=E;H=F;break}y=Kb(-1,-1,0)|0;z=I;Xe(y)}}while(0);if((v|0)==16){h=Kb(-1,-1)|0;G=h;H=I}t=0;ma(264,o|0);h=t;t=0;if(!(h&1)){A=G;B=H;break a}y=Kb(-1,-1,0)|0;z=I;Xe(y)}}while(0);j=Kb(-1,-1)|0;A=j;B=I}}while(0);t=0;ma(264,l|0);u=t;t=0;if(u&1){y=Kb(-1,-1,0)|0;z=I;Xe(y)}else{J=A;K=B;Wb(J|0)}}}while(0);if((v|0)==11){v=Kb(-1,-1)|0;w=v;x=I}_p(n);J=w;K=x;Wb(J|0);return 0}function op(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;pp(f,b);t=0;na(113,a|0,f|0);b=t;t=0;if(b&1){b=Kb(-1,-1)|0;_p(f);Wb(b|0)}else{c[a+12>>2]=d;_p(f);i=e;return}}function pp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[b+8>>2]|0;c[a+8>>2]=e;f=a;c[f>>2]=0;if(e>>>0<9){g=a;h=b}else{a=ZB(e)|0;c[f>>2]=a;g=a;h=c[b>>2]|0}qC(g|0,h|0,e|0)|0;i=d;return}function qp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;c[b>>2]=0;rp(b,d);f=d+16|0;g=c[f+4>>2]|0;h=b+16|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];a[b+32|0]=a[d+32|0]|0;i=e;return}function rp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[b>>2]|0;if((e|0)==0){i=d;return}c[a>>2]=e;f=e;if((f&1|0)==0){we[c[(f&-2)>>2]&63](b+4|0,a+4|0,0);i=d;return}else{f=a+4|0;a=b+4|0;c[f+0>>2]=c[a+0>>2];c[f+4>>2]=c[a+4>>2];c[f+8>>2]=c[a+8>>2];i=d;return}}function sp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e;g=a;c[a>>2]=0;h=a+4|0;c[h>>2]=0;j=a+8|0;c[j>>2]=0;k=b;l=d;d=b+16|0;while(1){if(Dp(k,l)|0){m=13;break}t=0;na(114,f|0,d|0);b=t;t=0;if(b&1){m=11;break}b=c[h>>2]|0;if((b|0)==(c[j>>2]|0)){t=0;na(115,a|0,f|0);n=t;t=0;if(n&1){m=12;break}}else{if((b|0)==0){o=0}else{t=0;na(46,b|0,f|0);b=t;t=0;if(b&1){m=12;break}o=c[h>>2]|0}c[h>>2]=o+12}mt(f);t=0;ma(265,k|0);b=t;t=0;if(b&1){m=11;break}}if((m|0)==11){k=Kb(-1,-1)|0;p=I;q=k;tp(g);Wb(q|0)}else if((m|0)==12){k=Kb(-1,-1)|0;o=I;mt(f);p=o;q=k;tp(g);Wb(q|0)}else if((m|0)==13){i=e;return}}function tp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=a+4|0;a=c[f>>2]|0;if((a|0)==(e|0)){g=e}else{h=a;do{a=h+ -12|0;c[f>>2]=a;mt(a);h=c[f>>2]|0;}while((h|0)!=(e|0));g=c[d>>2]|0}_B(g);i=b;return}function up(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+40|0;e=d;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;k=b;l=b+24|0;c[h>>2]=c[l>>2];m=b+28|0;c[j>>2]=c[m>>2];n=f;o=h;c[n+0>>2]=c[o+0>>2];o=e;n=j;c[o+0>>2]=c[n+0>>2];vp(g,k,f,e);e=c[g>>2]|0;f=c[g+4>>2]|0;do{if((e|0)==(c[m>>2]|0)&(f|0)==(e|0)){if((c[b+20>>2]|0)!=(e|0)){p=e;break}a[b+32|0]=1;p=e}else{p=f}}while(0);c[b+16>>2]=c[l>>2];c[b+20>>2]=e;c[l>>2]=p;i=d;return}function vp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f;h=f+8|0;j=f+16|0;k=f+24|0;if((c[b>>2]|0)==0){l=c[e>>2]|0;c[a>>2]=l;c[a+4>>2]=l;i=f;return}else{l=b;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];e=h;d=j;c[e+0>>2]=c[d+0>>2];d=g;e=k;c[d+0>>2]=c[e+0>>2];wp(a,l,h,g);i=f;return}}function wp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+40|0;g=f;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=c[b>>2]|0;if((m|0)!=0){n=c[(m&-2)+4>>2]|0;m=b+4|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];e=h;d=k;c[e+0>>2]=c[d+0>>2];d=g;e=l;c[d+0>>2]=c[e+0>>2];ze[n&31](a,m,h,g);i=f;return}on(j);t=0;ma(266,j|0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;Ts(j);Wb(f|0)}}function xp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d;f=d+8|0;g=d+16|0;h=d+24|0;j=c[b+4>>2]|0;c[g>>2]=c[b>>2];c[h>>2]=j;j=f;b=g;c[j+0>>2]=c[b+0>>2];b=e;j=h;c[b+0>>2]=c[j+0>>2];yp(a,f,e);i=d;return}function yp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=d;d=c[g>>2]|0;h=e;e=c[h>>2]|0;j=e-d|0;if(j>>>0>4294967279){ft(0)}if(j>>>0<11){a[b]=j<<1;k=b+1|0}else{l=j+16&-16;m=YB(l)|0;c[b+8>>2]=m;c[b>>2]=l|1;c[b+4>>2]=j;k=m}if((d|0)==(e|0)){n=k;a[n]=0;i=f;return}else{o=d;p=k}while(1){a[p]=a[o]|0;k=(c[g>>2]|0)+1|0;c[g>>2]=k;d=p+1|0;if((k|0)==(c[h>>2]|0)){n=d;break}else{p=d;o=k}}a[n]=0;i=f;return}function zp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+24|0;e=d;f=c[a>>2]|0;g=((c[a+4>>2]|0)-f|0)/12|0;h=g+1|0;if(h>>>0>357913941){Uy(0)}j=((c[a+8>>2]|0)-f|0)/12|0;if(j>>>0<178956970){f=j<<1;k=f>>>0<h>>>0?h:f}else{k=357913941}Cp(e,k,g,a+8|0);g=e+8|0;k=c[g>>2]|0;do{if((k|0)!=0){t=0;na(46,k|0,b|0);f=t;t=0;if(!(f&1)){break}l=Kb(-1,-1)|0;m=I;Bp(e);Wb(l|0)}}while(0);c[g>>2]=k+12;t=0;na(116,a|0,e|0);a=t;t=0;if(a&1){l=Kb(-1,-1)|0;m=I;Bp(e);Wb(l|0)}else{Bp(e);i=d;return}}function Ap(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;f=c[e>>2]|0;g=a+4|0;h=c[g>>2]|0;j=b+4|0;k=c[j>>2]|0;if((h|0)==(f|0)){l=k;m=f}else{n=h;h=k;do{n=n+ -12|0;it(h+ -12|0,n);h=(c[j>>2]|0)+ -12|0;c[j>>2]=h;}while((n|0)!=(f|0));l=h;m=c[e>>2]|0}c[e>>2]=l;c[j>>2]=m;m=b+8|0;l=c[g>>2]|0;c[g>>2]=c[m>>2];c[m>>2]=l;l=a+8|0;a=b+12|0;m=c[l>>2]|0;c[l>>2]=c[a>>2];c[a>>2]=m;c[b>>2]=c[j>>2];i=d;return}function Bp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=c[a+4>>2]|0;e=a+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){g=f;do{f=g+ -12|0;c[e>>2]=f;mt(f);g=c[e>>2]|0;}while((g|0)!=(d|0))}d=c[a>>2]|0;if((d|0)==0){i=b;return}_B(d);i=b;return}function Cp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=a+12|0;c[g>>2]=0;c[a+16>>2]=e;if((b|0)==0){h=0}else{h=YB(b*12|0)|0}c[a>>2]=h;e=h+(d*12|0)|0;c[a+8>>2]=e;c[a+4>>2]=e;c[g>>2]=h+(b*12|0);i=f;return}function Dp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=Ep(a)|0;f=Ep(b)|0;if(e|f){g=e^f^1;i=d;return g|0}if(!(Fp(a+16|0,b+16|0)|0)){g=0;i=d;return g|0}if((c[a+24>>2]|0)!=(c[b+24>>2]|0)){g=0;i=d;return g|0}g=(c[a+28>>2]|0)==(c[b+28>>2]|0);i=d;return g|0}function Ep(b){b=b|0;var d=0,e=0;d=i;if((c[b>>2]|0)==0){e=1;i=d;return e|0}e=(a[b+32|0]|0)!=0;i=d;return e|0}function Fp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[b>>2]|0;g=c[b+4>>2]|0;b=c[d>>2]|0;if((g-f|0)!=((c[d+4>>2]|0)-b|0)){h=0;i=e;return h|0}if((f|0)==(g|0)){h=1;i=e;return h|0}else{j=b;k=f}while(1){if((a[k]|0)!=(a[j]|0)){h=0;l=5;break}f=k+1|0;if((f|0)==(g|0)){h=1;l=5;break}else{j=j+1|0;k=f}}if((l|0)==5){i=e;return h|0}return 0}function Gp(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;e=c[d>>2]|0;if((e|0)==0){i=b;return}f=e;if((f&1|0)==0){Hp(f&-2,a+4|0)}c[d>>2]=0;i=b;return}function Hp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a>>2]|0;if((e|0)==0){i=d;return}we[e&63](b,b,2);i=d;return}function Ip(a,b){a=a|0;b=b|0;var d=0;d=i;pp(a,b);c[a+12>>2]=c[b+12>>2];i=d;return}function Jp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;Ip(h,f);t=0;La(42,b|0,h|0,0);f=t;t=0;if(f&1){f=Kb(-1,-1)|0;j=I;_p(h);k=j;l=f;Wb(l|0)}_p(h);h=c[d>>2]|0;c[b+16>>2]=h;c[b+20>>2]=h;c[b+24>>2]=h;d=c[e>>2]|0;c[b+28>>2]=d;a[b+32|0]=0;if((h|0)==(d|0)){i=g;return}t=0;ma(265,b|0);d=t;t=0;if(!(d&1)){i=g;return}g=Kb(-1,-1)|0;d=I;t=0;ma(264,b|0);b=t;t=0;if(b&1){b=Kb(-1,-1,0)|0;Xe(b)}else{k=d;l=g;Wb(l|0)}}function Kp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;c=i;i=i+16|0;d=c;Ip(d,b);t=0;La(43,a|0,d|0,0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;_p(d);Wb(a|0)}else{_p(d);i=c;return}}function Lp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;d=i;i=i+16|0;e=d;c[a>>2]=0;Ip(e,b);t=0;na(117,a|0,e|0);a=t;t=0;if(a&1){a=Kb(-1,-1)|0;_p(e);Wb(a|0)}else{_p(e);i=d;return}}function Mp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;Ip(e,b);t=0;sa(31,14560,e|0,a+4|0)|0;b=t;t=0;if(b&1){b=Kb(-1,-1)|0;_p(e);Wb(b|0)}else{_p(e);c[a>>2]=14560;i=d;return}}



function TB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;b=i;do{if(a>>>0<245){if(a>>>0<11){d=16}else{d=a+11&-8}e=d>>>3;f=c[7448]|0;g=f>>>e;if((g&3|0)!=0){h=(g&1^1)+e|0;j=h<<1;k=29832+(j<<2)|0;l=29832+(j+2<<2)|0;j=c[l>>2]|0;m=j+8|0;n=c[m>>2]|0;do{if((k|0)==(n|0)){c[7448]=f&~(1<<h)}else{if(n>>>0<(c[29808>>2]|0)>>>0){$c()}o=n+12|0;if((c[o>>2]|0)==(j|0)){c[o>>2]=k;c[l>>2]=n;break}else{$c()}}}while(0);n=h<<3;c[j+4>>2]=n|3;l=j+(n|4)|0;c[l>>2]=c[l>>2]|1;p=m;i=b;return p|0}if(!(d>>>0>(c[29800>>2]|0)>>>0)){q=d;break}if((g|0)!=0){l=2<<e;n=g<<e&(l|0-l);l=(n&0-n)+ -1|0;n=l>>>12&16;k=l>>>n;l=k>>>5&8;o=k>>>l;k=o>>>2&4;r=o>>>k;o=r>>>1&2;s=r>>>o;r=s>>>1&1;t=(l|n|k|o|r)+(s>>>r)|0;r=t<<1;s=29832+(r<<2)|0;o=29832+(r+2<<2)|0;r=c[o>>2]|0;k=r+8|0;n=c[k>>2]|0;do{if((s|0)==(n|0)){c[7448]=f&~(1<<t)}else{if(n>>>0<(c[29808>>2]|0)>>>0){$c()}l=n+12|0;if((c[l>>2]|0)==(r|0)){c[l>>2]=s;c[o>>2]=n;break}else{$c()}}}while(0);n=t<<3;o=n-d|0;c[r+4>>2]=d|3;s=r;f=s+d|0;c[s+(d|4)>>2]=o|1;c[s+n>>2]=o;n=c[29800>>2]|0;if((n|0)!=0){s=c[29812>>2]|0;e=n>>>3;n=e<<1;g=29832+(n<<2)|0;m=c[7448]|0;j=1<<e;do{if((m&j|0)==0){c[7448]=m|j;u=29832+(n+2<<2)|0;v=g}else{e=29832+(n+2<<2)|0;h=c[e>>2]|0;if(!(h>>>0<(c[29808>>2]|0)>>>0)){u=e;v=h;break}$c()}}while(0);c[u>>2]=s;c[v+12>>2]=s;c[s+8>>2]=v;c[s+12>>2]=g}c[29800>>2]=o;c[29812>>2]=f;p=k;i=b;return p|0}n=c[29796>>2]|0;if((n|0)==0){q=d;break}j=(n&0-n)+ -1|0;n=j>>>12&16;m=j>>>n;j=m>>>5&8;r=m>>>j;m=r>>>2&4;t=r>>>m;r=t>>>1&2;h=t>>>r;t=h>>>1&1;e=c[30096+((j|n|m|r|t)+(h>>>t)<<2)>>2]|0;t=(c[e+4>>2]&-8)-d|0;h=e;r=e;while(1){e=c[h+16>>2]|0;if((e|0)==0){m=c[h+20>>2]|0;if((m|0)==0){break}else{w=m}}else{w=e}e=(c[w+4>>2]&-8)-d|0;m=e>>>0<t>>>0;t=m?e:t;h=w;r=m?w:r}h=r;k=c[29808>>2]|0;if(h>>>0<k>>>0){$c()}f=h+d|0;o=f;if(!(h>>>0<f>>>0)){$c()}f=c[r+24>>2]|0;g=c[r+12>>2]|0;do{if((g|0)==(r|0)){s=r+20|0;m=c[s>>2]|0;if((m|0)==0){e=r+16|0;n=c[e>>2]|0;if((n|0)==0){x=0;break}else{y=n;z=e}}else{y=m;z=s}while(1){s=y+20|0;m=c[s>>2]|0;if((m|0)!=0){z=s;y=m;continue}m=y+16|0;s=c[m>>2]|0;if((s|0)==0){break}else{y=s;z=m}}if(z>>>0<k>>>0){$c()}else{c[z>>2]=0;x=y;break}}else{m=c[r+8>>2]|0;if(m>>>0<k>>>0){$c()}s=m+12|0;if((c[s>>2]|0)!=(r|0)){$c()}e=g+8|0;if((c[e>>2]|0)==(r|0)){c[s>>2]=g;c[e>>2]=m;x=g;break}else{$c()}}}while(0);a:do{if((f|0)!=0){g=c[r+28>>2]|0;k=30096+(g<<2)|0;do{if((r|0)==(c[k>>2]|0)){c[k>>2]=x;if((x|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<g);break a}else{if(f>>>0<(c[29808>>2]|0)>>>0){$c()}m=f+16|0;if((c[m>>2]|0)==(r|0)){c[m>>2]=x}else{c[f+20>>2]=x}if((x|0)==0){break a}}}while(0);if(x>>>0<(c[29808>>2]|0)>>>0){$c()}c[x+24>>2]=f;g=c[r+16>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[x+16>>2]=g;c[g+24>>2]=x;break}}}while(0);g=c[r+20>>2]|0;if((g|0)==0){break}if(g>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[x+20>>2]=g;c[g+24>>2]=x;break}}}while(0);if(t>>>0<16){f=t+d|0;c[r+4>>2]=f|3;g=h+(f+4)|0;c[g>>2]=c[g>>2]|1}else{c[r+4>>2]=d|3;c[h+(d|4)>>2]=t|1;c[h+(t+d)>>2]=t;g=c[29800>>2]|0;if((g|0)!=0){f=c[29812>>2]|0;k=g>>>3;g=k<<1;m=29832+(g<<2)|0;e=c[7448]|0;s=1<<k;do{if((e&s|0)==0){c[7448]=e|s;A=29832+(g+2<<2)|0;B=m}else{k=29832+(g+2<<2)|0;n=c[k>>2]|0;if(!(n>>>0<(c[29808>>2]|0)>>>0)){A=k;B=n;break}$c()}}while(0);c[A>>2]=f;c[B+12>>2]=f;c[f+8>>2]=B;c[f+12>>2]=m}c[29800>>2]=t;c[29812>>2]=o}p=r+8|0;i=b;return p|0}else{if(a>>>0>4294967231){q=-1;break}g=a+11|0;s=g&-8;e=c[29796>>2]|0;if((e|0)==0){q=s;break}h=0-s|0;n=g>>>8;do{if((n|0)==0){C=0}else{if(s>>>0>16777215){C=31;break}g=(n+1048320|0)>>>16&8;k=n<<g;j=(k+520192|0)>>>16&4;l=k<<j;k=(l+245760|0)>>>16&2;D=14-(j|g|k)+(l<<k>>>15)|0;C=s>>>(D+7|0)&1|D<<1}}while(0);n=c[30096+(C<<2)>>2]|0;b:do{if((n|0)==0){E=h;F=0;G=0}else{if((C|0)==31){H=0}else{H=25-(C>>>1)|0}r=h;o=0;t=s<<H;m=n;f=0;while(1){D=c[m+4>>2]&-8;k=D-s|0;if(k>>>0<r>>>0){if((D|0)==(s|0)){E=k;F=m;G=m;break b}else{I=k;J=m}}else{I=r;J=f}k=c[m+20>>2]|0;D=c[m+(t>>>31<<2)+16>>2]|0;l=(k|0)==0|(k|0)==(D|0)?o:k;if((D|0)==0){E=I;F=l;G=J;break}else{r=I;o=l;t=t<<1;m=D;f=J}}}}while(0);if((F|0)==0&(G|0)==0){n=2<<C;h=e&(n|0-n);if((h|0)==0){q=s;break}n=(h&0-h)+ -1|0;h=n>>>12&16;f=n>>>h;n=f>>>5&8;m=f>>>n;f=m>>>2&4;t=m>>>f;m=t>>>1&2;o=t>>>m;t=o>>>1&1;K=c[30096+((n|h|f|m|t)+(o>>>t)<<2)>>2]|0}else{K=F}if((K|0)==0){L=E;M=G}else{t=E;o=K;m=G;while(1){f=(c[o+4>>2]&-8)-s|0;h=f>>>0<t>>>0;n=h?f:t;f=h?o:m;h=c[o+16>>2]|0;if((h|0)!=0){N=f;O=n;m=N;o=h;t=O;continue}h=c[o+20>>2]|0;if((h|0)==0){L=n;M=f;break}else{N=f;O=n;o=h;m=N;t=O}}}if((M|0)==0){q=s;break}if(!(L>>>0<((c[29800>>2]|0)-s|0)>>>0)){q=s;break}t=M;m=c[29808>>2]|0;if(t>>>0<m>>>0){$c()}o=t+s|0;e=o;if(!(t>>>0<o>>>0)){$c()}h=c[M+24>>2]|0;n=c[M+12>>2]|0;do{if((n|0)==(M|0)){f=M+20|0;r=c[f>>2]|0;if((r|0)==0){D=M+16|0;l=c[D>>2]|0;if((l|0)==0){P=0;break}else{Q=l;R=D}}else{Q=r;R=f}while(1){f=Q+20|0;r=c[f>>2]|0;if((r|0)!=0){R=f;Q=r;continue}r=Q+16|0;f=c[r>>2]|0;if((f|0)==0){break}else{Q=f;R=r}}if(R>>>0<m>>>0){$c()}else{c[R>>2]=0;P=Q;break}}else{r=c[M+8>>2]|0;if(r>>>0<m>>>0){$c()}f=r+12|0;if((c[f>>2]|0)!=(M|0)){$c()}D=n+8|0;if((c[D>>2]|0)==(M|0)){c[f>>2]=n;c[D>>2]=r;P=n;break}else{$c()}}}while(0);c:do{if((h|0)!=0){n=c[M+28>>2]|0;m=30096+(n<<2)|0;do{if((M|0)==(c[m>>2]|0)){c[m>>2]=P;if((P|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<n);break c}else{if(h>>>0<(c[29808>>2]|0)>>>0){$c()}r=h+16|0;if((c[r>>2]|0)==(M|0)){c[r>>2]=P}else{c[h+20>>2]=P}if((P|0)==0){break c}}}while(0);if(P>>>0<(c[29808>>2]|0)>>>0){$c()}c[P+24>>2]=h;n=c[M+16>>2]|0;do{if((n|0)!=0){if(n>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[P+16>>2]=n;c[n+24>>2]=P;break}}}while(0);n=c[M+20>>2]|0;if((n|0)==0){break}if(n>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[P+20>>2]=n;c[n+24>>2]=P;break}}}while(0);d:do{if(L>>>0<16){h=L+s|0;c[M+4>>2]=h|3;n=t+(h+4)|0;c[n>>2]=c[n>>2]|1}else{c[M+4>>2]=s|3;c[t+(s|4)>>2]=L|1;c[t+(L+s)>>2]=L;n=L>>>3;if(L>>>0<256){h=n<<1;m=29832+(h<<2)|0;r=c[7448]|0;D=1<<n;do{if((r&D|0)==0){c[7448]=r|D;S=29832+(h+2<<2)|0;T=m}else{n=29832+(h+2<<2)|0;f=c[n>>2]|0;if(!(f>>>0<(c[29808>>2]|0)>>>0)){S=n;T=f;break}$c()}}while(0);c[S>>2]=e;c[T+12>>2]=e;c[t+(s+8)>>2]=T;c[t+(s+12)>>2]=m;break}h=o;D=L>>>8;do{if((D|0)==0){U=0}else{if(L>>>0>16777215){U=31;break}r=(D+1048320|0)>>>16&8;f=D<<r;n=(f+520192|0)>>>16&4;l=f<<n;f=(l+245760|0)>>>16&2;k=14-(n|r|f)+(l<<f>>>15)|0;U=L>>>(k+7|0)&1|k<<1}}while(0);D=30096+(U<<2)|0;c[t+(s+28)>>2]=U;c[t+(s+20)>>2]=0;c[t+(s+16)>>2]=0;m=c[29796>>2]|0;k=1<<U;if((m&k|0)==0){c[29796>>2]=m|k;c[D>>2]=h;c[t+(s+24)>>2]=D;c[t+(s+12)>>2]=h;c[t+(s+8)>>2]=h;break}k=c[D>>2]|0;if((U|0)==31){V=0}else{V=25-(U>>>1)|0}e:do{if((c[k+4>>2]&-8|0)==(L|0)){W=k}else{D=L<<V;m=k;while(1){X=m+(D>>>31<<2)+16|0;f=c[X>>2]|0;if((f|0)==0){break}if((c[f+4>>2]&-8|0)==(L|0)){W=f;break e}else{D=D<<1;m=f}}if(X>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[X>>2]=h;c[t+(s+24)>>2]=m;c[t+(s+12)>>2]=h;c[t+(s+8)>>2]=h;break d}}}while(0);k=W+8|0;D=c[k>>2]|0;f=c[29808>>2]|0;if(W>>>0<f>>>0){$c()}if(D>>>0<f>>>0){$c()}else{c[D+12>>2]=h;c[k>>2]=h;c[t+(s+8)>>2]=D;c[t+(s+12)>>2]=W;c[t+(s+24)>>2]=0;break}}}while(0);p=M+8|0;i=b;return p|0}}while(0);M=c[29800>>2]|0;if(!(q>>>0>M>>>0)){W=M-q|0;X=c[29812>>2]|0;if(W>>>0>15){L=X;c[29812>>2]=L+q;c[29800>>2]=W;c[L+(q+4)>>2]=W|1;c[L+M>>2]=W;c[X+4>>2]=q|3}else{c[29800>>2]=0;c[29812>>2]=0;c[X+4>>2]=M|3;W=X+(M+4)|0;c[W>>2]=c[W>>2]|1}p=X+8|0;i=b;return p|0}X=c[29804>>2]|0;if(q>>>0<X>>>0){W=X-q|0;c[29804>>2]=W;X=c[29816>>2]|0;M=X;c[29816>>2]=M+q;c[M+(q+4)>>2]=W|1;c[X+4>>2]=q|3;p=X+8|0;i=b;return p|0}do{if((c[7566]|0)==0){X=Zc(30)|0;if((X+ -1&X|0)==0){c[30272>>2]=X;c[30268>>2]=X;c[30276>>2]=-1;c[30280>>2]=-1;c[30284>>2]=0;c[30236>>2]=0;X=(nc(0)|0)&-16^1431655768;c[7566]=X;break}else{$c()}}}while(0);X=q+48|0;W=c[30272>>2]|0;M=q+47|0;L=W+M|0;V=0-W|0;W=L&V;if(!(W>>>0>q>>>0)){p=0;i=b;return p|0}U=c[30232>>2]|0;do{if((U|0)!=0){T=c[30224>>2]|0;S=T+W|0;if(S>>>0<=T>>>0|S>>>0>U>>>0){p=0}else{break}i=b;return p|0}}while(0);f:do{if((c[30236>>2]&4|0)==0){U=c[29816>>2]|0;g:do{if((U|0)==0){Y=182}else{S=U;T=30240|0;while(1){Z=T;P=c[Z>>2]|0;if(!(P>>>0>S>>>0)){_=T+4|0;if((P+(c[_>>2]|0)|0)>>>0>S>>>0){break}}P=c[T+8>>2]|0;if((P|0)==0){Y=182;break g}else{T=P}}if((T|0)==0){Y=182;break}S=L-(c[29804>>2]|0)&V;if(!(S>>>0<2147483647)){$=0;break}h=eb(S|0)|0;P=(h|0)==((c[Z>>2]|0)+(c[_>>2]|0)|0);aa=h;ba=S;ca=P?h:-1;da=P?S:0;Y=191}}while(0);do{if((Y|0)==182){U=eb(0)|0;if((U|0)==(-1|0)){$=0;break}S=U;P=c[30268>>2]|0;h=P+ -1|0;if((h&S|0)==0){ea=W}else{ea=W-S+(h+S&0-P)|0}P=c[30224>>2]|0;S=P+ea|0;if(!(ea>>>0>q>>>0&ea>>>0<2147483647)){$=0;break}h=c[30232>>2]|0;if((h|0)!=0){if(S>>>0<=P>>>0|S>>>0>h>>>0){$=0;break}}h=eb(ea|0)|0;S=(h|0)==(U|0);aa=h;ba=ea;ca=S?U:-1;da=S?ea:0;Y=191}}while(0);h:do{if((Y|0)==191){S=0-ba|0;if((ca|0)!=(-1|0)){fa=ca;ga=da;Y=202;break f}do{if((aa|0)!=(-1|0)&ba>>>0<2147483647&ba>>>0<X>>>0){U=c[30272>>2]|0;h=M-ba+U&0-U;if(!(h>>>0<2147483647)){ha=ba;break}if((eb(h|0)|0)==(-1|0)){eb(S|0)|0;$=da;break h}else{ha=h+ba|0;break}}else{ha=ba}}while(0);if((aa|0)==(-1|0)){$=da}else{fa=aa;ga=ha;Y=202;break f}}}while(0);c[30236>>2]=c[30236>>2]|4;ia=$;Y=199}else{ia=0;Y=199}}while(0);do{if((Y|0)==199){if(!(W>>>0<2147483647)){break}$=eb(W|0)|0;ha=eb(0)|0;if(!((ha|0)!=(-1|0)&($|0)!=(-1|0)&$>>>0<ha>>>0)){break}aa=ha-$|0;ha=aa>>>0>(q+40|0)>>>0;if(ha){fa=$;ga=ha?aa:ia;Y=202}}}while(0);do{if((Y|0)==202){ia=(c[30224>>2]|0)+ga|0;c[30224>>2]=ia;if(ia>>>0>(c[30228>>2]|0)>>>0){c[30228>>2]=ia}ia=c[29816>>2]|0;i:do{if((ia|0)==0){W=c[29808>>2]|0;if((W|0)==0|fa>>>0<W>>>0){c[29808>>2]=fa}c[30240>>2]=fa;c[30244>>2]=ga;c[30252>>2]=0;c[29828>>2]=c[7566];c[29824>>2]=-1;W=0;do{aa=W<<1;ha=29832+(aa<<2)|0;c[29832+(aa+3<<2)>>2]=ha;c[29832+(aa+2<<2)>>2]=ha;W=W+1|0;}while((W|0)!=32);W=fa+8|0;if((W&7|0)==0){ja=0}else{ja=0-W&7}W=ga+ -40-ja|0;c[29816>>2]=fa+ja;c[29804>>2]=W;c[fa+(ja+4)>>2]=W|1;c[fa+(ga+ -36)>>2]=40;c[29820>>2]=c[30280>>2]}else{W=30240|0;while(1){ka=c[W>>2]|0;la=W+4|0;ma=c[la>>2]|0;if((fa|0)==(ka+ma|0)){Y=214;break}ha=c[W+8>>2]|0;if((ha|0)==0){break}else{W=ha}}do{if((Y|0)==214){if((c[W+12>>2]&8|0)!=0){break}ha=ia;if(!(ha>>>0>=ka>>>0&ha>>>0<fa>>>0)){break}c[la>>2]=ma+ga;aa=(c[29804>>2]|0)+ga|0;$=ia+8|0;if(($&7|0)==0){na=0}else{na=0-$&7}$=aa-na|0;c[29816>>2]=ha+na;c[29804>>2]=$;c[ha+(na+4)>>2]=$|1;c[ha+(aa+4)>>2]=40;c[29820>>2]=c[30280>>2];break i}}while(0);if(fa>>>0<(c[29808>>2]|0)>>>0){c[29808>>2]=fa}W=fa+ga|0;aa=30240|0;while(1){oa=aa;if((c[oa>>2]|0)==(W|0)){Y=224;break}ha=c[aa+8>>2]|0;if((ha|0)==0){break}else{aa=ha}}do{if((Y|0)==224){if((c[aa+12>>2]&8|0)!=0){break}c[oa>>2]=fa;W=aa+4|0;c[W>>2]=(c[W>>2]|0)+ga;W=fa+8|0;if((W&7|0)==0){pa=0}else{pa=0-W&7}W=fa+(ga+8)|0;if((W&7|0)==0){qa=0}else{qa=0-W&7}W=fa+(qa+ga)|0;ha=W;$=pa+q|0;da=fa+$|0;ba=da;M=W-(fa+pa)-q|0;c[fa+(pa+4)>>2]=q|3;j:do{if((ha|0)==(c[29816>>2]|0)){X=(c[29804>>2]|0)+M|0;c[29804>>2]=X;c[29816>>2]=ba;c[fa+($+4)>>2]=X|1}else{if((ha|0)==(c[29812>>2]|0)){X=(c[29800>>2]|0)+M|0;c[29800>>2]=X;c[29812>>2]=ba;c[fa+($+4)>>2]=X|1;c[fa+(X+$)>>2]=X;break}X=ga+4|0;ca=c[fa+(X+qa)>>2]|0;if((ca&3|0)==1){ea=ca&-8;_=ca>>>3;k:do{if(ca>>>0<256){Z=c[fa+((qa|8)+ga)>>2]|0;V=c[fa+(ga+12+qa)>>2]|0;L=29832+(_<<1<<2)|0;do{if((Z|0)!=(L|0)){if(Z>>>0<(c[29808>>2]|0)>>>0){$c()}if((c[Z+12>>2]|0)==(ha|0)){break}$c()}}while(0);if((V|0)==(Z|0)){c[7448]=c[7448]&~(1<<_);break}do{if((V|0)==(L|0)){ra=V+8|0}else{if(V>>>0<(c[29808>>2]|0)>>>0){$c()}S=V+8|0;if((c[S>>2]|0)==(ha|0)){ra=S;break}$c()}}while(0);c[Z+12>>2]=V;c[ra>>2]=Z}else{L=W;S=c[fa+((qa|24)+ga)>>2]|0;T=c[fa+(ga+12+qa)>>2]|0;do{if((T|0)==(L|0)){h=qa|16;U=fa+(X+h)|0;P=c[U>>2]|0;if((P|0)==0){Q=fa+(h+ga)|0;h=c[Q>>2]|0;if((h|0)==0){sa=0;break}else{ta=h;ua=Q}}else{ta=P;ua=U}while(1){U=ta+20|0;P=c[U>>2]|0;if((P|0)!=0){ua=U;ta=P;continue}P=ta+16|0;U=c[P>>2]|0;if((U|0)==0){break}else{ta=U;ua=P}}if(ua>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[ua>>2]=0;sa=ta;break}}else{P=c[fa+((qa|8)+ga)>>2]|0;if(P>>>0<(c[29808>>2]|0)>>>0){$c()}U=P+12|0;if((c[U>>2]|0)!=(L|0)){$c()}Q=T+8|0;if((c[Q>>2]|0)==(L|0)){c[U>>2]=T;c[Q>>2]=P;sa=T;break}else{$c()}}}while(0);if((S|0)==0){break}T=c[fa+(ga+28+qa)>>2]|0;Z=30096+(T<<2)|0;do{if((L|0)==(c[Z>>2]|0)){c[Z>>2]=sa;if((sa|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<T);break k}else{if(S>>>0<(c[29808>>2]|0)>>>0){$c()}V=S+16|0;if((c[V>>2]|0)==(L|0)){c[V>>2]=sa}else{c[S+20>>2]=sa}if((sa|0)==0){break k}}}while(0);if(sa>>>0<(c[29808>>2]|0)>>>0){$c()}c[sa+24>>2]=S;L=qa|16;T=c[fa+(L+ga)>>2]|0;do{if((T|0)!=0){if(T>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[sa+16>>2]=T;c[T+24>>2]=sa;break}}}while(0);T=c[fa+(X+L)>>2]|0;if((T|0)==0){break}if(T>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[sa+20>>2]=T;c[T+24>>2]=sa;break}}}while(0);va=fa+((ea|qa)+ga)|0;wa=ea+M|0}else{va=ha;wa=M}X=va+4|0;c[X>>2]=c[X>>2]&-2;c[fa+($+4)>>2]=wa|1;c[fa+(wa+$)>>2]=wa;X=wa>>>3;if(wa>>>0<256){_=X<<1;ca=29832+(_<<2)|0;T=c[7448]|0;S=1<<X;do{if((T&S|0)==0){c[7448]=T|S;xa=29832+(_+2<<2)|0;ya=ca}else{X=29832+(_+2<<2)|0;Z=c[X>>2]|0;if(!(Z>>>0<(c[29808>>2]|0)>>>0)){xa=X;ya=Z;break}$c()}}while(0);c[xa>>2]=ba;c[ya+12>>2]=ba;c[fa+($+8)>>2]=ya;c[fa+($+12)>>2]=ca;break}_=da;S=wa>>>8;do{if((S|0)==0){za=0}else{if(wa>>>0>16777215){za=31;break}T=(S+1048320|0)>>>16&8;ea=S<<T;Z=(ea+520192|0)>>>16&4;X=ea<<Z;ea=(X+245760|0)>>>16&2;V=14-(Z|T|ea)+(X<<ea>>>15)|0;za=wa>>>(V+7|0)&1|V<<1}}while(0);S=30096+(za<<2)|0;c[fa+($+28)>>2]=za;c[fa+($+20)>>2]=0;c[fa+($+16)>>2]=0;ca=c[29796>>2]|0;V=1<<za;if((ca&V|0)==0){c[29796>>2]=ca|V;c[S>>2]=_;c[fa+($+24)>>2]=S;c[fa+($+12)>>2]=_;c[fa+($+8)>>2]=_;break}V=c[S>>2]|0;if((za|0)==31){Aa=0}else{Aa=25-(za>>>1)|0}l:do{if((c[V+4>>2]&-8|0)==(wa|0)){Ba=V}else{S=wa<<Aa;ca=V;while(1){Ca=ca+(S>>>31<<2)+16|0;ea=c[Ca>>2]|0;if((ea|0)==0){break}if((c[ea+4>>2]&-8|0)==(wa|0)){Ba=ea;break l}else{S=S<<1;ca=ea}}if(Ca>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[Ca>>2]=_;c[fa+($+24)>>2]=ca;c[fa+($+12)>>2]=_;c[fa+($+8)>>2]=_;break j}}}while(0);V=Ba+8|0;S=c[V>>2]|0;L=c[29808>>2]|0;if(Ba>>>0<L>>>0){$c()}if(S>>>0<L>>>0){$c()}else{c[S+12>>2]=_;c[V>>2]=_;c[fa+($+8)>>2]=S;c[fa+($+12)>>2]=Ba;c[fa+($+24)>>2]=0;break}}}while(0);p=fa+(pa|8)|0;i=b;return p|0}}while(0);aa=ia;$=30240|0;while(1){Da=c[$>>2]|0;if(!(Da>>>0>aa>>>0)){Ea=c[$+4>>2]|0;Fa=Da+Ea|0;if(Fa>>>0>aa>>>0){break}}$=c[$+8>>2]|0}$=Da+(Ea+ -39)|0;if(($&7|0)==0){Ga=0}else{Ga=0-$&7}$=Da+(Ea+ -47+Ga)|0;da=$>>>0<(ia+16|0)>>>0?aa:$;$=da+8|0;ba=$;M=fa+8|0;if((M&7|0)==0){Ha=0}else{Ha=0-M&7}M=ga+ -40-Ha|0;c[29816>>2]=fa+Ha;c[29804>>2]=M;c[fa+(Ha+4)>>2]=M|1;c[fa+(ga+ -36)>>2]=40;c[29820>>2]=c[30280>>2];c[da+4>>2]=27;c[$+0>>2]=c[30240>>2];c[$+4>>2]=c[30244>>2];c[$+8>>2]=c[30248>>2];c[$+12>>2]=c[30252>>2];c[30240>>2]=fa;c[30244>>2]=ga;c[30252>>2]=0;c[30248>>2]=ba;ba=da+28|0;c[ba>>2]=7;if((da+32|0)>>>0<Fa>>>0){$=ba;while(1){ba=$+4|0;c[ba>>2]=7;if(($+8|0)>>>0<Fa>>>0){$=ba}else{break}}}if((da|0)==(aa|0)){break}$=da-ia|0;ba=aa+($+4)|0;c[ba>>2]=c[ba>>2]&-2;c[ia+4>>2]=$|1;c[aa+$>>2]=$;ba=$>>>3;if($>>>0<256){M=ba<<1;ha=29832+(M<<2)|0;W=c[7448]|0;m=1<<ba;do{if((W&m|0)==0){c[7448]=W|m;Ia=29832+(M+2<<2)|0;Ja=ha}else{ba=29832+(M+2<<2)|0;S=c[ba>>2]|0;if(!(S>>>0<(c[29808>>2]|0)>>>0)){Ia=ba;Ja=S;break}$c()}}while(0);c[Ia>>2]=ia;c[Ja+12>>2]=ia;c[ia+8>>2]=Ja;c[ia+12>>2]=ha;break}M=ia;m=$>>>8;do{if((m|0)==0){Ka=0}else{if($>>>0>16777215){Ka=31;break}W=(m+1048320|0)>>>16&8;aa=m<<W;da=(aa+520192|0)>>>16&4;S=aa<<da;aa=(S+245760|0)>>>16&2;ba=14-(da|W|aa)+(S<<aa>>>15)|0;Ka=$>>>(ba+7|0)&1|ba<<1}}while(0);m=30096+(Ka<<2)|0;c[ia+28>>2]=Ka;c[ia+20>>2]=0;c[ia+16>>2]=0;ha=c[29796>>2]|0;ba=1<<Ka;if((ha&ba|0)==0){c[29796>>2]=ha|ba;c[m>>2]=M;c[ia+24>>2]=m;c[ia+12>>2]=ia;c[ia+8>>2]=ia;break}ba=c[m>>2]|0;if((Ka|0)==31){La=0}else{La=25-(Ka>>>1)|0}m:do{if((c[ba+4>>2]&-8|0)==($|0)){Ma=ba}else{m=$<<La;ha=ba;while(1){Na=ha+(m>>>31<<2)+16|0;aa=c[Na>>2]|0;if((aa|0)==0){break}if((c[aa+4>>2]&-8|0)==($|0)){Ma=aa;break m}else{m=m<<1;ha=aa}}if(Na>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[Na>>2]=M;c[ia+24>>2]=ha;c[ia+12>>2]=ia;c[ia+8>>2]=ia;break i}}}while(0);$=Ma+8|0;ba=c[$>>2]|0;m=c[29808>>2]|0;if(Ma>>>0<m>>>0){$c()}if(ba>>>0<m>>>0){$c()}else{c[ba+12>>2]=M;c[$>>2]=M;c[ia+8>>2]=ba;c[ia+12>>2]=Ma;c[ia+24>>2]=0;break}}}while(0);ia=c[29804>>2]|0;if(!(ia>>>0>q>>>0)){break}ba=ia-q|0;c[29804>>2]=ba;ia=c[29816>>2]|0;$=ia;c[29816>>2]=$+q;c[$+(q+4)>>2]=ba|1;c[ia+4>>2]=q|3;p=ia+8|0;i=b;return p|0}}while(0);q=Hc()|0;c[q>>2]=12;p=0;i=b;return p|0}function UB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;b=i;if((a|0)==0){i=b;return}d=a+ -8|0;e=d;f=c[29808>>2]|0;if(d>>>0<f>>>0){$c()}g=c[a+ -4>>2]|0;h=g&3;if((h|0)==1){$c()}j=g&-8;k=a+(j+ -8)|0;l=k;a:do{if((g&1|0)==0){m=c[d>>2]|0;if((h|0)==0){i=b;return}n=-8-m|0;o=a+n|0;p=o;q=m+j|0;if(o>>>0<f>>>0){$c()}if((p|0)==(c[29812>>2]|0)){r=a+(j+ -4)|0;if((c[r>>2]&3|0)!=3){s=p;t=q;break}c[29800>>2]=q;c[r>>2]=c[r>>2]&-2;c[a+(n+4)>>2]=q|1;c[k>>2]=q;i=b;return}r=m>>>3;if(m>>>0<256){m=c[a+(n+8)>>2]|0;u=c[a+(n+12)>>2]|0;v=29832+(r<<1<<2)|0;do{if((m|0)!=(v|0)){if(m>>>0<f>>>0){$c()}if((c[m+12>>2]|0)==(p|0)){break}$c()}}while(0);if((u|0)==(m|0)){c[7448]=c[7448]&~(1<<r);s=p;t=q;break}do{if((u|0)==(v|0)){w=u+8|0}else{if(u>>>0<f>>>0){$c()}x=u+8|0;if((c[x>>2]|0)==(p|0)){w=x;break}$c()}}while(0);c[m+12>>2]=u;c[w>>2]=m;s=p;t=q;break}v=o;r=c[a+(n+24)>>2]|0;x=c[a+(n+12)>>2]|0;do{if((x|0)==(v|0)){y=a+(n+20)|0;z=c[y>>2]|0;if((z|0)==0){A=a+(n+16)|0;B=c[A>>2]|0;if((B|0)==0){C=0;break}else{D=B;E=A}}else{D=z;E=y}while(1){y=D+20|0;z=c[y>>2]|0;if((z|0)!=0){E=y;D=z;continue}z=D+16|0;y=c[z>>2]|0;if((y|0)==0){break}else{D=y;E=z}}if(E>>>0<f>>>0){$c()}else{c[E>>2]=0;C=D;break}}else{z=c[a+(n+8)>>2]|0;if(z>>>0<f>>>0){$c()}y=z+12|0;if((c[y>>2]|0)!=(v|0)){$c()}A=x+8|0;if((c[A>>2]|0)==(v|0)){c[y>>2]=x;c[A>>2]=z;C=x;break}else{$c()}}}while(0);if((r|0)==0){s=p;t=q;break}x=c[a+(n+28)>>2]|0;o=30096+(x<<2)|0;do{if((v|0)==(c[o>>2]|0)){c[o>>2]=C;if((C|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<x);s=p;t=q;break a}else{if(r>>>0<(c[29808>>2]|0)>>>0){$c()}m=r+16|0;if((c[m>>2]|0)==(v|0)){c[m>>2]=C}else{c[r+20>>2]=C}if((C|0)==0){s=p;t=q;break a}}}while(0);if(C>>>0<(c[29808>>2]|0)>>>0){$c()}c[C+24>>2]=r;v=c[a+(n+16)>>2]|0;do{if((v|0)!=0){if(v>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[C+16>>2]=v;c[v+24>>2]=C;break}}}while(0);v=c[a+(n+20)>>2]|0;if((v|0)==0){s=p;t=q;break}if(v>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[C+20>>2]=v;c[v+24>>2]=C;s=p;t=q;break}}else{s=e;t=j}}while(0);e=s;if(!(e>>>0<k>>>0)){$c()}C=a+(j+ -4)|0;f=c[C>>2]|0;if((f&1|0)==0){$c()}do{if((f&2|0)==0){if((l|0)==(c[29816>>2]|0)){D=(c[29804>>2]|0)+t|0;c[29804>>2]=D;c[29816>>2]=s;c[s+4>>2]=D|1;if((s|0)!=(c[29812>>2]|0)){i=b;return}c[29812>>2]=0;c[29800>>2]=0;i=b;return}if((l|0)==(c[29812>>2]|0)){D=(c[29800>>2]|0)+t|0;c[29800>>2]=D;c[29812>>2]=s;c[s+4>>2]=D|1;c[e+D>>2]=D;i=b;return}D=(f&-8)+t|0;E=f>>>3;b:do{if(f>>>0<256){w=c[a+j>>2]|0;h=c[a+(j|4)>>2]|0;d=29832+(E<<1<<2)|0;do{if((w|0)!=(d|0)){if(w>>>0<(c[29808>>2]|0)>>>0){$c()}if((c[w+12>>2]|0)==(l|0)){break}$c()}}while(0);if((h|0)==(w|0)){c[7448]=c[7448]&~(1<<E);break}do{if((h|0)==(d|0)){F=h+8|0}else{if(h>>>0<(c[29808>>2]|0)>>>0){$c()}g=h+8|0;if((c[g>>2]|0)==(l|0)){F=g;break}$c()}}while(0);c[w+12>>2]=h;c[F>>2]=w}else{d=k;g=c[a+(j+16)>>2]|0;v=c[a+(j|4)>>2]|0;do{if((v|0)==(d|0)){r=a+(j+12)|0;x=c[r>>2]|0;if((x|0)==0){o=a+(j+8)|0;m=c[o>>2]|0;if((m|0)==0){G=0;break}else{H=m;I=o}}else{H=x;I=r}while(1){r=H+20|0;x=c[r>>2]|0;if((x|0)!=0){I=r;H=x;continue}x=H+16|0;r=c[x>>2]|0;if((r|0)==0){break}else{H=r;I=x}}if(I>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[I>>2]=0;G=H;break}}else{x=c[a+j>>2]|0;if(x>>>0<(c[29808>>2]|0)>>>0){$c()}r=x+12|0;if((c[r>>2]|0)!=(d|0)){$c()}o=v+8|0;if((c[o>>2]|0)==(d|0)){c[r>>2]=v;c[o>>2]=x;G=v;break}else{$c()}}}while(0);if((g|0)==0){break}v=c[a+(j+20)>>2]|0;w=30096+(v<<2)|0;do{if((d|0)==(c[w>>2]|0)){c[w>>2]=G;if((G|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<v);break b}else{if(g>>>0<(c[29808>>2]|0)>>>0){$c()}h=g+16|0;if((c[h>>2]|0)==(d|0)){c[h>>2]=G}else{c[g+20>>2]=G}if((G|0)==0){break b}}}while(0);if(G>>>0<(c[29808>>2]|0)>>>0){$c()}c[G+24>>2]=g;d=c[a+(j+8)>>2]|0;do{if((d|0)!=0){if(d>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[G+16>>2]=d;c[d+24>>2]=G;break}}}while(0);d=c[a+(j+12)>>2]|0;if((d|0)==0){break}if(d>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[G+20>>2]=d;c[d+24>>2]=G;break}}}while(0);c[s+4>>2]=D|1;c[e+D>>2]=D;if((s|0)!=(c[29812>>2]|0)){J=D;break}c[29800>>2]=D;i=b;return}else{c[C>>2]=f&-2;c[s+4>>2]=t|1;c[e+t>>2]=t;J=t}}while(0);t=J>>>3;if(J>>>0<256){e=t<<1;f=29832+(e<<2)|0;C=c[7448]|0;G=1<<t;do{if((C&G|0)==0){c[7448]=C|G;K=29832+(e+2<<2)|0;L=f}else{t=29832+(e+2<<2)|0;j=c[t>>2]|0;if(!(j>>>0<(c[29808>>2]|0)>>>0)){K=t;L=j;break}$c()}}while(0);c[K>>2]=s;c[L+12>>2]=s;c[s+8>>2]=L;c[s+12>>2]=f;i=b;return}f=s;L=J>>>8;do{if((L|0)==0){M=0}else{if(J>>>0>16777215){M=31;break}K=(L+1048320|0)>>>16&8;e=L<<K;G=(e+520192|0)>>>16&4;C=e<<G;e=(C+245760|0)>>>16&2;j=14-(G|K|e)+(C<<e>>>15)|0;M=J>>>(j+7|0)&1|j<<1}}while(0);L=30096+(M<<2)|0;c[s+28>>2]=M;c[s+20>>2]=0;c[s+16>>2]=0;j=c[29796>>2]|0;e=1<<M;c:do{if((j&e|0)==0){c[29796>>2]=j|e;c[L>>2]=f;c[s+24>>2]=L;c[s+12>>2]=s;c[s+8>>2]=s}else{C=c[L>>2]|0;if((M|0)==31){N=0}else{N=25-(M>>>1)|0}d:do{if((c[C+4>>2]&-8|0)==(J|0)){O=C}else{K=J<<N;G=C;while(1){P=G+(K>>>31<<2)+16|0;t=c[P>>2]|0;if((t|0)==0){break}if((c[t+4>>2]&-8|0)==(J|0)){O=t;break d}else{K=K<<1;G=t}}if(P>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[P>>2]=f;c[s+24>>2]=G;c[s+12>>2]=s;c[s+8>>2]=s;break c}}}while(0);C=O+8|0;D=c[C>>2]|0;K=c[29808>>2]|0;if(O>>>0<K>>>0){$c()}if(D>>>0<K>>>0){$c()}else{c[D+12>>2]=f;c[C>>2]=f;c[s+8>>2]=D;c[s+12>>2]=O;c[s+24>>2]=0;break}}}while(0);s=(c[29824>>2]|0)+ -1|0;c[29824>>2]=s;if((s|0)==0){Q=30248|0}else{i=b;return}while(1){s=c[Q>>2]|0;if((s|0)==0){break}else{Q=s+8|0}}c[29824>>2]=-1;i=b;return}function VB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;if((a|0)==0){e=TB(b)|0;i=d;return e|0}if(b>>>0>4294967231){f=Hc()|0;c[f>>2]=12;e=0;i=d;return e|0}if(b>>>0<11){g=16}else{g=b+11&-8}f=WB(a+ -8|0,g)|0;if((f|0)!=0){e=f+8|0;i=d;return e|0}f=TB(b)|0;if((f|0)==0){e=0;i=d;return e|0}g=c[a+ -4>>2]|0;h=(g&-8)-((g&3|0)==0?8:4)|0;qC(f|0,a|0,(h>>>0<b>>>0?h:b)|0)|0;UB(a);e=f;i=d;return e|0}function WB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;e=a+4|0;f=c[e>>2]|0;g=f&-8;h=a;j=h+g|0;k=j;l=c[29808>>2]|0;if(h>>>0<l>>>0){$c()}m=f&3;if(!((m|0)!=1&h>>>0<j>>>0)){$c()}n=h+(g|4)|0;o=c[n>>2]|0;if((o&1|0)==0){$c()}if((m|0)==0){if(b>>>0<256){p=0;i=d;return p|0}do{if(!(g>>>0<(b+4|0)>>>0)){if((g-b|0)>>>0>c[30272>>2]<<1>>>0){break}else{p=a}i=d;return p|0}}while(0);p=0;i=d;return p|0}if(!(g>>>0<b>>>0)){m=g-b|0;if(!(m>>>0>15)){p=a;i=d;return p|0}c[e>>2]=f&1|b|2;c[h+(b+4)>>2]=m|3;c[n>>2]=c[n>>2]|1;XB(h+b|0,m);p=a;i=d;return p|0}if((k|0)==(c[29816>>2]|0)){m=(c[29804>>2]|0)+g|0;if(!(m>>>0>b>>>0)){p=0;i=d;return p|0}n=m-b|0;c[e>>2]=f&1|b|2;c[h+(b+4)>>2]=n|1;c[29816>>2]=h+b;c[29804>>2]=n;p=a;i=d;return p|0}if((k|0)==(c[29812>>2]|0)){n=(c[29800>>2]|0)+g|0;if(n>>>0<b>>>0){p=0;i=d;return p|0}m=n-b|0;if(m>>>0>15){c[e>>2]=f&1|b|2;c[h+(b+4)>>2]=m|1;c[h+n>>2]=m;q=h+(n+4)|0;c[q>>2]=c[q>>2]&-2;r=h+b|0;s=m}else{c[e>>2]=f&1|n|2;f=h+(n+4)|0;c[f>>2]=c[f>>2]|1;r=0;s=0}c[29800>>2]=s;c[29812>>2]=r;p=a;i=d;return p|0}if((o&2|0)!=0){p=0;i=d;return p|0}r=(o&-8)+g|0;if(r>>>0<b>>>0){p=0;i=d;return p|0}s=r-b|0;f=o>>>3;a:do{if(o>>>0<256){n=c[h+(g+8)>>2]|0;m=c[h+(g+12)>>2]|0;q=29832+(f<<1<<2)|0;do{if((n|0)!=(q|0)){if(n>>>0<l>>>0){$c()}if((c[n+12>>2]|0)==(k|0)){break}$c()}}while(0);if((m|0)==(n|0)){c[7448]=c[7448]&~(1<<f);break}do{if((m|0)==(q|0)){t=m+8|0}else{if(m>>>0<l>>>0){$c()}u=m+8|0;if((c[u>>2]|0)==(k|0)){t=u;break}$c()}}while(0);c[n+12>>2]=m;c[t>>2]=n}else{q=j;u=c[h+(g+24)>>2]|0;v=c[h+(g+12)>>2]|0;do{if((v|0)==(q|0)){w=h+(g+20)|0;x=c[w>>2]|0;if((x|0)==0){y=h+(g+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){C=w;B=x;continue}x=B+16|0;w=c[x>>2]|0;if((w|0)==0){break}else{B=w;C=x}}if(C>>>0<l>>>0){$c()}else{c[C>>2]=0;A=B;break}}else{x=c[h+(g+8)>>2]|0;if(x>>>0<l>>>0){$c()}w=x+12|0;if((c[w>>2]|0)!=(q|0)){$c()}y=v+8|0;if((c[y>>2]|0)==(q|0)){c[w>>2]=v;c[y>>2]=x;A=v;break}else{$c()}}}while(0);if((u|0)==0){break}v=c[h+(g+28)>>2]|0;n=30096+(v<<2)|0;do{if((q|0)==(c[n>>2]|0)){c[n>>2]=A;if((A|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<v);break a}else{if(u>>>0<(c[29808>>2]|0)>>>0){$c()}m=u+16|0;if((c[m>>2]|0)==(q|0)){c[m>>2]=A}else{c[u+20>>2]=A}if((A|0)==0){break a}}}while(0);if(A>>>0<(c[29808>>2]|0)>>>0){$c()}c[A+24>>2]=u;q=c[h+(g+16)>>2]|0;do{if((q|0)!=0){if(q>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[A+16>>2]=q;c[q+24>>2]=A;break}}}while(0);q=c[h+(g+20)>>2]|0;if((q|0)==0){break}if(q>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[A+20>>2]=q;c[q+24>>2]=A;break}}}while(0);if(s>>>0<16){c[e>>2]=r|c[e>>2]&1|2;A=h+(r|4)|0;c[A>>2]=c[A>>2]|1;p=a;i=d;return p|0}else{c[e>>2]=c[e>>2]&1|b|2;c[h+(b+4)>>2]=s|3;e=h+(r|4)|0;c[e>>2]=c[e>>2]|1;XB(h+b|0,s);p=a;i=d;return p|0}return 0}function XB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;d=i;e=a;f=e+b|0;g=f;h=c[a+4>>2]|0;a:do{if((h&1|0)==0){j=c[a>>2]|0;if((h&3|0)==0){i=d;return}k=e+(0-j)|0;l=k;m=j+b|0;n=c[29808>>2]|0;if(k>>>0<n>>>0){$c()}if((l|0)==(c[29812>>2]|0)){o=e+(b+4)|0;if((c[o>>2]&3|0)!=3){p=l;q=m;break}c[29800>>2]=m;c[o>>2]=c[o>>2]&-2;c[e+(4-j)>>2]=m|1;c[f>>2]=m;i=d;return}o=j>>>3;if(j>>>0<256){r=c[e+(8-j)>>2]|0;s=c[e+(12-j)>>2]|0;t=29832+(o<<1<<2)|0;do{if((r|0)!=(t|0)){if(r>>>0<n>>>0){$c()}if((c[r+12>>2]|0)==(l|0)){break}$c()}}while(0);if((s|0)==(r|0)){c[7448]=c[7448]&~(1<<o);p=l;q=m;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<n>>>0){$c()}v=s+8|0;if((c[v>>2]|0)==(l|0)){u=v;break}$c()}}while(0);c[r+12>>2]=s;c[u>>2]=r;p=l;q=m;break}t=k;o=c[e+(24-j)>>2]|0;v=c[e+(12-j)>>2]|0;do{if((v|0)==(t|0)){w=16-j|0;x=e+(w+4)|0;y=c[x>>2]|0;if((y|0)==0){z=e+w|0;w=c[z>>2]|0;if((w|0)==0){A=0;break}else{B=w;C=z}}else{B=y;C=x}while(1){x=B+20|0;y=c[x>>2]|0;if((y|0)!=0){C=x;B=y;continue}y=B+16|0;x=c[y>>2]|0;if((x|0)==0){break}else{B=x;C=y}}if(C>>>0<n>>>0){$c()}else{c[C>>2]=0;A=B;break}}else{y=c[e+(8-j)>>2]|0;if(y>>>0<n>>>0){$c()}x=y+12|0;if((c[x>>2]|0)!=(t|0)){$c()}z=v+8|0;if((c[z>>2]|0)==(t|0)){c[x>>2]=v;c[z>>2]=y;A=v;break}else{$c()}}}while(0);if((o|0)==0){p=l;q=m;break}v=c[e+(28-j)>>2]|0;n=30096+(v<<2)|0;do{if((t|0)==(c[n>>2]|0)){c[n>>2]=A;if((A|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<v);p=l;q=m;break a}else{if(o>>>0<(c[29808>>2]|0)>>>0){$c()}k=o+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[o+20>>2]=A}if((A|0)==0){p=l;q=m;break a}}}while(0);if(A>>>0<(c[29808>>2]|0)>>>0){$c()}c[A+24>>2]=o;t=16-j|0;v=c[e+t>>2]|0;do{if((v|0)!=0){if(v>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[A+16>>2]=v;c[v+24>>2]=A;break}}}while(0);v=c[e+(t+4)>>2]|0;if((v|0)==0){p=l;q=m;break}if(v>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[A+20>>2]=v;c[v+24>>2]=A;p=l;q=m;break}}else{p=a;q=b}}while(0);a=c[29808>>2]|0;if(f>>>0<a>>>0){$c()}A=e+(b+4)|0;B=c[A>>2]|0;do{if((B&2|0)==0){if((g|0)==(c[29816>>2]|0)){C=(c[29804>>2]|0)+q|0;c[29804>>2]=C;c[29816>>2]=p;c[p+4>>2]=C|1;if((p|0)!=(c[29812>>2]|0)){i=d;return}c[29812>>2]=0;c[29800>>2]=0;i=d;return}if((g|0)==(c[29812>>2]|0)){C=(c[29800>>2]|0)+q|0;c[29800>>2]=C;c[29812>>2]=p;c[p+4>>2]=C|1;c[p+C>>2]=C;i=d;return}C=(B&-8)+q|0;u=B>>>3;b:do{if(B>>>0<256){h=c[e+(b+8)>>2]|0;v=c[e+(b+12)>>2]|0;j=29832+(u<<1<<2)|0;do{if((h|0)!=(j|0)){if(h>>>0<a>>>0){$c()}if((c[h+12>>2]|0)==(g|0)){break}$c()}}while(0);if((v|0)==(h|0)){c[7448]=c[7448]&~(1<<u);break}do{if((v|0)==(j|0)){D=v+8|0}else{if(v>>>0<a>>>0){$c()}o=v+8|0;if((c[o>>2]|0)==(g|0)){D=o;break}$c()}}while(0);c[h+12>>2]=v;c[D>>2]=h}else{j=f;o=c[e+(b+24)>>2]|0;n=c[e+(b+12)>>2]|0;do{if((n|0)==(j|0)){k=e+(b+20)|0;r=c[k>>2]|0;if((r|0)==0){s=e+(b+16)|0;y=c[s>>2]|0;if((y|0)==0){E=0;break}else{F=y;G=s}}else{F=r;G=k}while(1){k=F+20|0;r=c[k>>2]|0;if((r|0)!=0){G=k;F=r;continue}r=F+16|0;k=c[r>>2]|0;if((k|0)==0){break}else{F=k;G=r}}if(G>>>0<a>>>0){$c()}else{c[G>>2]=0;E=F;break}}else{r=c[e+(b+8)>>2]|0;if(r>>>0<a>>>0){$c()}k=r+12|0;if((c[k>>2]|0)!=(j|0)){$c()}s=n+8|0;if((c[s>>2]|0)==(j|0)){c[k>>2]=n;c[s>>2]=r;E=n;break}else{$c()}}}while(0);if((o|0)==0){break}n=c[e+(b+28)>>2]|0;h=30096+(n<<2)|0;do{if((j|0)==(c[h>>2]|0)){c[h>>2]=E;if((E|0)!=0){break}c[29796>>2]=c[29796>>2]&~(1<<n);break b}else{if(o>>>0<(c[29808>>2]|0)>>>0){$c()}v=o+16|0;if((c[v>>2]|0)==(j|0)){c[v>>2]=E}else{c[o+20>>2]=E}if((E|0)==0){break b}}}while(0);if(E>>>0<(c[29808>>2]|0)>>>0){$c()}c[E+24>>2]=o;j=c[e+(b+16)>>2]|0;do{if((j|0)!=0){if(j>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[E+16>>2]=j;c[j+24>>2]=E;break}}}while(0);j=c[e+(b+20)>>2]|0;if((j|0)==0){break}if(j>>>0<(c[29808>>2]|0)>>>0){$c()}else{c[E+20>>2]=j;c[j+24>>2]=E;break}}}while(0);c[p+4>>2]=C|1;c[p+C>>2]=C;if((p|0)!=(c[29812>>2]|0)){H=C;break}c[29800>>2]=C;i=d;return}else{c[A>>2]=B&-2;c[p+4>>2]=q|1;c[p+q>>2]=q;H=q}}while(0);q=H>>>3;if(H>>>0<256){B=q<<1;A=29832+(B<<2)|0;E=c[7448]|0;b=1<<q;do{if((E&b|0)==0){c[7448]=E|b;I=29832+(B+2<<2)|0;J=A}else{q=29832+(B+2<<2)|0;e=c[q>>2]|0;if(!(e>>>0<(c[29808>>2]|0)>>>0)){I=q;J=e;break}$c()}}while(0);c[I>>2]=p;c[J+12>>2]=p;c[p+8>>2]=J;c[p+12>>2]=A;i=d;return}A=p;J=H>>>8;do{if((J|0)==0){K=0}else{if(H>>>0>16777215){K=31;break}I=(J+1048320|0)>>>16&8;B=J<<I;b=(B+520192|0)>>>16&4;E=B<<b;B=(E+245760|0)>>>16&2;e=14-(b|I|B)+(E<<B>>>15)|0;K=H>>>(e+7|0)&1|e<<1}}while(0);J=30096+(K<<2)|0;c[p+28>>2]=K;c[p+20>>2]=0;c[p+16>>2]=0;e=c[29796>>2]|0;B=1<<K;if((e&B|0)==0){c[29796>>2]=e|B;c[J>>2]=A;c[p+24>>2]=J;c[p+12>>2]=p;c[p+8>>2]=p;i=d;return}B=c[J>>2]|0;if((K|0)==31){L=0}else{L=25-(K>>>1)|0}c:do{if((c[B+4>>2]&-8|0)==(H|0)){M=B}else{K=H<<L;J=B;while(1){N=J+(K>>>31<<2)+16|0;e=c[N>>2]|0;if((e|0)==0){break}if((c[e+4>>2]&-8|0)==(H|0)){M=e;break c}else{K=K<<1;J=e}}if(N>>>0<(c[29808>>2]|0)>>>0){$c()}c[N>>2]=A;c[p+24>>2]=J;c[p+12>>2]=p;c[p+8>>2]=p;i=d;return}}while(0);N=M+8|0;H=c[N>>2]|0;B=c[29808>>2]|0;if(M>>>0<B>>>0){$c()}if(H>>>0<B>>>0){$c()}c[H+12>>2]=A;c[N>>2]=A;c[p+8>>2]=H;c[p+12>>2]=M;c[p+24>>2]=0;i=d;return}function YB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=(a|0)==0?1:a;while(1){e=TB(d)|0;if((e|0)!=0){f=10;break}a=c[7572]|0;c[7572]=a+0;if((a|0)==0){f=9;break}t=0;Ma(a|0);a=t;t=0;if(a&1){f=5;break}}do{if((f|0)==5){d=Kb(-1,-1,30352)|0;g=d;h=I}else if((f|0)==9){d=xc(4)|0;c[d>>2]=30304;t=0;La(13,d|0,30352,227);d=t;t=0;if(d&1){d=Kb(-1,-1,30352)|0;g=d;h=I;break}}else if((f|0)==10){i=b;return e|0}}while(0);if((h|0)<0){Yb(g|0)}else{Wb(g|0)}return 0}function ZB(a){a=a|0;var b=0,c=0;b=i;t=0;c=oa(93,a|0)|0;a=t;t=0;if(!(a&1)){i=b;return c|0}c=Kb(-1,-1,30352)|0;if((I|0)<0){Yb(c|0)}else{Wb(c|0)}return 0}function _B(a){a=a|0;var b=0;b=i;if((a|0)!=0){UB(a)}i=b;return}function $B(a){a=a|0;var b=0;b=i;_B(a);i=b;return}function aC(a){a=a|0;var b=0;b=i;ub(a|0);_B(a);i=b;return}function bC(a){a=a|0;var b=0;b=i;ub(a|0);i=b;return}function cC(a){a=a|0;i=i;return 30320}function dC(){var a=0;a=xc(4)|0;c[a>>2]=30304;Md(a|0,30352,227)}function eC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0.0,fa=0,ga=0.0,ha=0,ia=0.0,ja=0,ka=0.0,la=0.0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0.0,ua=0,va=0.0,wa=0,xa=0,ya=0,za=0,Aa=0.0,Ba=0,Ca=0.0,Da=0.0,Ea=0,Fa=0.0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0.0,tc=0,vc=0,wc=0.0,xc=0.0,yc=0.0,zc=0.0,Ac=0.0,Bc=0.0,Cc=0,Dc=0,Ec=0.0,Fc=0,Gc=0.0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0;g=i;i=i+512|0;h=g;if((e|0)==1){j=53;k=-1074}else if((e|0)==0){j=24;k=-149}else if((e|0)==2){j=53;k=-1074}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=hC(b)|0}}while((cd(o|0)|0)!=0);do{if((o|0)==43|(o|0)==45){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=hC(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=q;q=0;while(1){if((o|32|0)!=(a[30368+q|0]|0)){s=o;t=q;break}do{if(q>>>0<7){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;u=d[n]|0;break}else{u=hC(b)|0;break}}else{u=o}}while(0);n=q+1|0;if(n>>>0<8){o=u;q=n}else{s=u;t=n;break}}do{if((t|0)==3){v=23}else if((t|0)!=8){u=(f|0)==0;if(!(t>>>0<4|u)){if((t|0)==8){break}else{v=23;break}}a:do{if((t|0)==0){q=s;o=0;while(1){if((q|32|0)!=(a[30384+o|0]|0)){w=q;z=o;break a}do{if(o>>>0<2){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;A=d[n]|0;break}else{A=hC(b)|0;break}}else{A=q}}while(0);n=o+1|0;if(n>>>0<3){q=A;o=n}else{w=A;z=n;break}}}else{w=s;z=t}}while(0);if((z|0)==0){do{if((w|0)==48){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;B=d[o]|0}else{B=hC(b)|0}if((B|32|0)!=120){if((c[m>>2]|0)==0){C=48;break}c[e>>2]=(c[e>>2]|0)+ -1;C=48;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0;E=0}else{D=hC(b)|0;E=0}while(1){if((D|0)==46){v=70;break}else if((D|0)!=48){F=0;G=0;H=0;J=0;K=D;L=E;M=0;N=0;O=1.0;P=0;Q=0.0;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0;E=1;continue}else{D=hC(b)|0;E=1;continue}}b:do{if((v|0)==70){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;R=d[o]|0}else{R=hC(b)|0}if((R|0)==48){S=-1;U=-1}else{F=0;G=0;H=0;J=0;K=R;L=E;M=1;N=0;O=1.0;P=0;Q=0.0;break}while(1){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;V=d[o]|0}else{V=hC(b)|0}if((V|0)!=48){F=S;G=U;H=0;J=0;K=V;L=1;M=1;N=0;O=1.0;P=0;Q=0.0;break b}o=wC(S|0,U|0,-1,-1)|0;S=o;U=I}}}while(0);c:while(1){o=K+ -48|0;do{if(o>>>0<10){W=o;v=84}else{q=K|32;n=(K|0)==46;if(!((q+ -97|0)>>>0<6|n)){X=K;break c}if(n){if((M|0)==0){Y=H;Z=J;_=H;$=J;aa=L;ba=1;ca=N;da=O;fa=P;ga=Q;break}else{X=46;break c}}else{W=(K|0)>57?q+ -87|0:o;v=84;break}}}while(0);if((v|0)==84){v=0;do{if((J|0)<0|(J|0)==0&H>>>0<8){ha=N;ia=O;ja=W+(P<<4)|0;ka=Q}else{if((J|0)<0|(J|0)==0&H>>>0<14){la=O*.0625;ha=N;ia=la;ja=P;ka=Q+la*+(W|0);break}if(!((W|0)!=0&(N|0)==0)){ha=N;ia=O;ja=P;ka=Q;break}ha=1;ia=O;ja=P;ka=Q+O*.5}}while(0);o=wC(H|0,J|0,1,0)|0;Y=F;Z=G;_=o;$=I;aa=1;ba=M;ca=ha;da=ia;fa=ja;ga=ka}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;F=Y;G=Z;H=_;J=$;K=d[o]|0;L=aa;M=ba;N=ca;O=da;P=fa;Q=ga;continue}else{F=Y;G=Z;H=_;J=$;K=hC(b)|0;L=aa;M=ba;N=ca;O=da;P=fa;Q=ga;continue}}if((L|0)==0){o=(c[m>>2]|0)==0;if(!o){c[e>>2]=(c[e>>2]|0)+ -1}do{if(u){gC(b,0)}else{if(o){break}q=c[e>>2]|0;c[e>>2]=q+ -1;if((M|0)==0){break}c[e>>2]=q+ -2}}while(0);l=+(r|0)*0.0;i=g;return+l}o=(M|0)==0;q=o?H:F;n=o?J:G;if((J|0)<0|(J|0)==0&H>>>0<8){o=H;p=J;ma=P;while(1){na=ma<<4;oa=wC(o|0,p|0,1,0)|0;pa=I;if((pa|0)<0|(pa|0)==0&oa>>>0<8){ma=na;p=pa;o=oa}else{qa=na;break}}}else{qa=P}do{if((X|32|0)==112){o=fC(b,f)|0;p=I;if(!((o|0)==0&(p|0)==-2147483648)){ra=o;sa=p;break}if(u){gC(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){ra=0;sa=0;break}c[e>>2]=(c[e>>2]|0)+ -1;ra=0;sa=0;break}}else{if((c[m>>2]|0)==0){ra=0;sa=0;break}c[e>>2]=(c[e>>2]|0)+ -1;ra=0;sa=0}}while(0);p=uC(q|0,n|0,2)|0;o=wC(p|0,I|0,-32,-1)|0;p=wC(o|0,I|0,ra|0,sa|0)|0;o=I;if((qa|0)==0){l=+(r|0)*0.0;i=g;return+l}if((o|0)>0|(o|0)==0&p>>>0>(0-k|0)>>>0){ma=Hc()|0;c[ma>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}ma=k+ -106|0;na=((ma|0)<0)<<31>>31;if((o|0)<(na|0)|(o|0)==(na|0)&p>>>0<ma>>>0){ma=Hc()|0;c[ma>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((qa|0)>-1){ma=p;na=o;oa=qa;la=Q;while(1){pa=oa<<1;if(!(la>=.5)){ta=la;ua=pa}else{ta=la+-1.0;ua=pa|1}va=la+ta;pa=wC(ma|0,na|0,-1,-1)|0;wa=I;if((ua|0)>-1){ma=pa;na=wa;oa=ua;la=va}else{xa=pa;ya=wa;za=ua;Aa=va;break}}}else{xa=p;ya=o;za=qa;Aa=Q}oa=vC(32,0,k|0,((k|0)<0)<<31>>31|0)|0;na=wC(xa|0,ya|0,oa|0,I|0)|0;oa=I;if(0>(oa|0)|0==(oa|0)&j>>>0>na>>>0){Ba=(na|0)<0?0:na}else{Ba=j}do{if((Ba|0)<53){la=+(r|0);va=+Ld(+(+iC(1.0,84-Ba|0)),+la);if(!((Ba|0)<32&Aa!=0.0)){Ca=la;Da=va;Ea=za;Fa=Aa;break}na=za&1;Ca=la;Da=va;Ea=(na^1)+za|0;Fa=(na|0)==0?0.0:Aa}else{Ca=+(r|0);Da=0.0;Ea=za;Fa=Aa}}while(0);va=Ca*Fa+(Da+Ca*+(Ea>>>0))-Da;if(!(va!=0.0)){o=Hc()|0;c[o>>2]=34}l=+jC(va,xa);i=g;return+l}else{C=w}}while(0);o=k+j|0;p=0-o|0;na=C;oa=0;while(1){if((na|0)==46){v=139;break}else if((na|0)!=48){Ga=na;Ha=0;Ia=0;Ja=oa;Ka=0;break}ma=c[e>>2]|0;if(ma>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ma+1;na=d[ma]|0;oa=1;continue}else{na=hC(b)|0;oa=1;continue}}d:do{if((v|0)==139){na=c[e>>2]|0;if(na>>>0<(c[m>>2]|0)>>>0){c[e>>2]=na+1;La=d[na]|0}else{La=hC(b)|0}if((La|0)==48){Ma=-1;Na=-1}else{Ga=La;Ha=0;Ia=0;Ja=oa;Ka=1;break}while(1){na=c[e>>2]|0;if(na>>>0<(c[m>>2]|0)>>>0){c[e>>2]=na+1;Oa=d[na]|0}else{Oa=hC(b)|0}if((Oa|0)!=48){Ga=Oa;Ha=Ma;Ia=Na;Ja=1;Ka=1;break d}na=wC(Ma|0,Na|0,-1,-1)|0;Ma=na;Na=I}}}while(0);oa=h;c[oa>>2]=0;na=Ga+ -48|0;ma=(Ga|0)==46;e:do{if(na>>>0<10|ma){n=h+496|0;q=Ga;wa=ma;pa=na;Pa=0;Qa=0;Ra=Ha;Sa=Ia;Ta=Ja;Ua=Ka;Va=0;Wa=0;Xa=0;while(1){do{if(wa){if((Ua|0)==0){Ya=Pa;Za=Qa;_a=Pa;$a=Qa;ab=Ta;bb=1;cb=Va;db=Wa;eb=Xa}else{fb=q;gb=Pa;hb=Qa;ib=Ra;jb=Sa;kb=Ta;lb=Va;mb=Wa;nb=Xa;break e}}else{ob=wC(Pa|0,Qa|0,1,0)|0;pb=I;qb=(q|0)!=48;if((Wa|0)>=125){if(!qb){Ya=Ra;Za=Sa;_a=ob;$a=pb;ab=Ta;bb=Ua;cb=Va;db=Wa;eb=Xa;break}c[n>>2]=c[n>>2]|1;Ya=Ra;Za=Sa;_a=ob;$a=pb;ab=Ta;bb=Ua;cb=Va;db=Wa;eb=Xa;break}rb=h+(Wa<<2)|0;if((Va|0)==0){sb=pa}else{sb=q+ -48+((c[rb>>2]|0)*10|0)|0}c[rb>>2]=sb;rb=Va+1|0;tb=(rb|0)==9;Ya=Ra;Za=Sa;_a=ob;$a=pb;ab=1;bb=Ua;cb=tb?0:rb;db=(tb&1)+Wa|0;eb=qb?ob:Xa}}while(0);ob=c[e>>2]|0;if(ob>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ob+1;ub=d[ob]|0}else{ub=hC(b)|0}ob=ub+ -48|0;qb=(ub|0)==46;if(ob>>>0<10|qb){q=ub;wa=qb;pa=ob;Pa=_a;Qa=$a;Ra=Ya;Sa=Za;Ta=ab;Ua=bb;Va=cb;Wa=db;Xa=eb}else{vb=ub;wb=_a;xb=$a;yb=Ya;zb=Za;Ab=ab;Bb=bb;Cb=cb;Db=db;Eb=eb;v=162;break}}}else{vb=Ga;wb=0;xb=0;yb=Ha;zb=Ia;Ab=Ja;Bb=Ka;Cb=0;Db=0;Eb=0;v=162}}while(0);if((v|0)==162){na=(Bb|0)==0;fb=vb;gb=wb;hb=xb;ib=na?wb:yb;jb=na?xb:zb;kb=Ab;lb=Cb;mb=Db;nb=Eb}na=(kb|0)!=0;do{if(na){if((fb|32|0)!=101){v=171;break}ma=fC(b,f)|0;Xa=I;do{if((ma|0)==0&(Xa|0)==-2147483648){if(u){gC(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Fb=0;Gb=0;break}c[e>>2]=(c[e>>2]|0)+ -1;Fb=0;Gb=0;break}}else{Fb=ma;Gb=Xa}}while(0);Xa=wC(Fb|0,Gb|0,ib|0,jb|0)|0;Hb=Xa;Ib=I}else{v=171}}while(0);do{if((v|0)==171){if(!((fb|0)>-1)){Hb=ib;Ib=jb;break}if((c[m>>2]|0)==0){Hb=ib;Ib=jb;break}c[e>>2]=(c[e>>2]|0)+ -1;Hb=ib;Ib=jb}}while(0);if(!na){Xa=Hc()|0;c[Xa>>2]=22;gC(b,0);l=0.0;i=g;return+l}Xa=c[oa>>2]|0;if((Xa|0)==0){l=+(r|0)*0.0;i=g;return+l}do{if((Hb|0)==(gb|0)&(Ib|0)==(hb|0)&((hb|0)<0|(hb|0)==0&gb>>>0<10)){if(!(j>>>0>30)){if((Xa>>>j|0)!=0){break}}l=+(r|0)*+(Xa>>>0);i=g;return+l}}while(0);Xa=(k|0)/-2|0;na=((Xa|0)<0)<<31>>31;if((Ib|0)>(na|0)|(Ib|0)==(na|0)&Hb>>>0>Xa>>>0){Xa=Hc()|0;c[Xa>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}Xa=k+ -106|0;na=((Xa|0)<0)<<31>>31;if((Ib|0)<(na|0)|(Ib|0)==(na|0)&Hb>>>0<Xa>>>0){Xa=Hc()|0;c[Xa>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((lb|0)==0){Jb=mb}else{if((lb|0)<9){Xa=h+(mb<<2)|0;na=c[Xa>>2]|0;ma=lb;do{na=na*10|0;ma=ma+1|0;}while((ma|0)!=9);c[Xa>>2]=na}Jb=mb+1|0}do{if((nb|0)<9){if(!((nb|0)<=(Hb|0)&(Hb|0)<18)){break}if((Hb|0)==9){l=+(r|0)*+((c[oa>>2]|0)>>>0);i=g;return+l}if((Hb|0)<9){l=+(r|0)*+((c[oa>>2]|0)>>>0)/+(c[30400+(8-Hb<<2)>>2]|0);i=g;return+l}ma=j+27+(ea(Hb,-3)|0)|0;Wa=c[oa>>2]|0;if((ma|0)<=30){if((Wa>>>ma|0)!=0){break}}l=+(r|0)*+(Wa>>>0)*+(c[30400+(Hb+ -10<<2)>>2]|0);i=g;return+l}}while(0);oa=(Hb|0)%9|0;if((oa|0)==0){Kb=0;Lb=0;Mb=Hb;Nb=Jb}else{na=(Hb|0)>-1?oa:oa+9|0;oa=c[30400+(8-na<<2)>>2]|0;do{if((Jb|0)==0){Ob=0;Pb=Hb;Qb=0}else{Xa=1e9/(oa|0)|0;Wa=0;ma=0;Va=0;Ua=Hb;while(1){Ta=h+(Va<<2)|0;Sa=c[Ta>>2]|0;Ra=((Sa>>>0)/(oa>>>0)|0)+ma|0;c[Ta>>2]=Ra;Rb=ea((Sa>>>0)%(oa>>>0)|0,Xa)|0;Sa=Va+1|0;if((Va|0)==(Wa|0)&(Ra|0)==0){Sb=Sa&127;Tb=Ua+ -9|0}else{Sb=Wa;Tb=Ua}if((Sa|0)==(Jb|0)){break}else{Wa=Sb;Ua=Tb;Va=Sa;ma=Rb}}if((Rb|0)==0){Ob=Sb;Pb=Tb;Qb=Jb;break}c[h+(Jb<<2)>>2]=Rb;Ob=Sb;Pb=Tb;Qb=Jb+1|0}}while(0);Kb=Ob;Lb=0;Mb=9-na+Pb|0;Nb=Qb}f:while(1){oa=h+(Kb<<2)|0;if((Mb|0)<18){ma=Lb;Va=Nb;while(1){Ua=0;Wa=Va+127|0;Xa=Va;while(1){Sa=Wa&127;Ra=h+(Sa<<2)|0;Ta=uC(c[Ra>>2]|0,0,29)|0;Qa=wC(Ta|0,I|0,Ua|0,0)|0;Ta=I;if(Ta>>>0>0|(Ta|0)==0&Qa>>>0>1e9){Pa=HC(Qa|0,Ta|0,1e9,0)|0;pa=IC(Qa|0,Ta|0,1e9,0)|0;Ub=pa;Vb=Pa}else{Ub=Qa;Vb=0}c[Ra>>2]=Ub;Ra=(Sa|0)==(Kb|0);if((Sa|0)!=(Xa+127&127|0)|Ra){Wb=Xa}else{Wb=(Ub|0)==0?Sa:Xa}if(Ra){break}else{Ua=Vb;Wa=Sa+ -1|0;Xa=Wb}}Xa=ma+ -29|0;if((Vb|0)==0){ma=Xa;Va=Wb}else{Xb=Xa;Yb=Vb;Zb=Wb;break}}}else{if((Mb|0)==18){_b=Lb;$b=Nb}else{ac=Kb;bc=Lb;cc=Mb;dc=Nb;break}while(1){if(!((c[oa>>2]|0)>>>0<9007199)){ac=Kb;bc=_b;cc=18;dc=$b;break f}Va=0;ma=$b+127|0;Xa=$b;while(1){Wa=ma&127;Ua=h+(Wa<<2)|0;Sa=uC(c[Ua>>2]|0,0,29)|0;Ra=wC(Sa|0,I|0,Va|0,0)|0;Sa=I;if(Sa>>>0>0|(Sa|0)==0&Ra>>>0>1e9){Qa=HC(Ra|0,Sa|0,1e9,0)|0;Pa=IC(Ra|0,Sa|0,1e9,0)|0;ec=Pa;fc=Qa}else{ec=Ra;fc=0}c[Ua>>2]=ec;Ua=(Wa|0)==(Kb|0);if((Wa|0)!=(Xa+127&127|0)|Ua){gc=Xa}else{gc=(ec|0)==0?Wa:Xa}if(Ua){break}else{Va=fc;ma=Wa+ -1|0;Xa=gc}}Xa=_b+ -29|0;if((fc|0)==0){_b=Xa;$b=gc}else{Xb=Xa;Yb=fc;Zb=gc;break}}}oa=Kb+127&127;if((oa|0)==(Zb|0)){Xa=Zb+127&127;ma=h+((Zb+126&127)<<2)|0;c[ma>>2]=c[ma>>2]|c[h+(Xa<<2)>>2];hc=Xa}else{hc=Zb}c[h+(oa<<2)>>2]=Yb;Kb=oa;Lb=Xb;Mb=Mb+9|0;Nb=hc}g:while(1){ic=dc+1&127;na=h+((dc+127&127)<<2)|0;oa=ac;Xa=bc;ma=cc;while(1){Va=(ma|0)==18;Wa=(ma|0)>27?9:1;jc=oa;kc=Xa;while(1){Ua=0;while(1){Ra=Ua+jc&127;if((Ra|0)==(dc|0)){lc=2;break}Qa=c[h+(Ra<<2)>>2]|0;Ra=c[30392+(Ua<<2)>>2]|0;if(Qa>>>0<Ra>>>0){lc=2;break}Pa=Ua+1|0;if(Qa>>>0>Ra>>>0){lc=Ua;break}if((Pa|0)<2){Ua=Pa}else{lc=Pa;break}}if((lc|0)==2&Va){break g}mc=Wa+kc|0;if((jc|0)==(dc|0)){jc=dc;kc=mc}else{break}}Va=(1<<Wa)+ -1|0;Ua=1e9>>>Wa;nc=jc;oc=0;Pa=jc;pc=ma;do{Ra=h+(Pa<<2)|0;Qa=c[Ra>>2]|0;Sa=(Qa>>>Wa)+oc|0;c[Ra>>2]=Sa;oc=ea(Qa&Va,Ua)|0;Qa=(Pa|0)==(nc|0)&(Sa|0)==0;Pa=Pa+1&127;pc=Qa?pc+ -9|0:pc;nc=Qa?Pa:nc;}while((Pa|0)!=(dc|0));if((oc|0)==0){oa=nc;Xa=mc;ma=pc;continue}if((ic|0)!=(nc|0)){break}c[na>>2]=c[na>>2]|1;oa=nc;Xa=mc;ma=pc}c[h+(dc<<2)>>2]=oc;ac=nc;bc=mc;cc=pc;dc=ic}ma=jc&127;if((ma|0)==(dc|0)){c[h+(ic+ -1<<2)>>2]=0;qc=ic}else{qc=dc}va=+((c[h+(ma<<2)>>2]|0)>>>0);ma=jc+1&127;if((ma|0)==(qc|0)){Xa=qc+1&127;c[h+(Xa+ -1<<2)>>2]=0;rc=Xa}else{rc=qc}la=+(r|0);sc=la*(va*1.0e9+ +((c[h+(ma<<2)>>2]|0)>>>0));ma=kc+53|0;Xa=ma-k|0;if((Xa|0)<(j|0)){tc=(Xa|0)<0?0:Xa;vc=1}else{tc=j;vc=0}if((tc|0)<53){va=+Ld(+(+iC(1.0,105-tc|0)),+sc);wc=+uc(+sc,+(+iC(1.0,53-tc|0)));xc=va;yc=wc;zc=va+(sc-wc)}else{xc=0.0;yc=0.0;zc=sc}oa=jc+2&127;do{if((oa|0)==(rc|0)){Ac=yc}else{na=c[h+(oa<<2)>>2]|0;do{if(na>>>0<5e8){if((na|0)==0){if((jc+3&127|0)==(rc|0)){Bc=yc;break}}Bc=la*.25+yc}else{if(na>>>0>5e8){Bc=la*.75+yc;break}if((jc+3&127|0)==(rc|0)){Bc=la*.5+yc;break}else{Bc=la*.75+yc;break}}}while(0);if((53-tc|0)<=1){Ac=Bc;break}if(+uc(+Bc,1.0)!=0.0){Ac=Bc;break}Ac=Bc+1.0}}while(0);la=zc+Ac-xc;do{if((ma&2147483647|0)>(-2-o|0)){if(!(+T(+la)>=9007199254740992.0)){Cc=vc;Dc=kc;Ec=la}else{Cc=(vc|0)!=0&(tc|0)==(Xa|0)?0:vc;Dc=kc+1|0;Ec=la*.5}if((Dc+50|0)<=(p|0)){if(!((Cc|0)!=0&Ac!=0.0)){Fc=Dc;Gc=Ec;break}}oa=Hc()|0;c[oa>>2]=34;Fc=Dc;Gc=Ec}else{Fc=kc;Gc=la}}while(0);l=+jC(Gc,Fc);i=g;return+l}else if((z|0)==3){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;Ic=d[p]|0}else{Ic=hC(b)|0}if((Ic|0)==40){Jc=1}else{if((c[m>>2]|0)==0){l=x;i=g;return+l}c[e>>2]=(c[e>>2]|0)+ -1;l=x;i=g;return+l}while(1){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;Kc=d[p]|0}else{Kc=hC(b)|0}if(!((Kc+ -48|0)>>>0<10|(Kc+ -65|0)>>>0<26)){if(!((Kc+ -97|0)>>>0<26|(Kc|0)==95)){break}}Jc=Jc+1|0}if((Kc|0)==41){l=x;i=g;return+l}p=(c[m>>2]|0)==0;if(!p){c[e>>2]=(c[e>>2]|0)+ -1}if(u){Xa=Hc()|0;c[Xa>>2]=22;gC(b,0);l=0.0;i=g;return+l}if((Jc|0)==0|p){l=x;i=g;return+l}else{Lc=Jc}while(1){p=Lc+ -1|0;c[e>>2]=(c[e>>2]|0)+ -1;if((p|0)==0){l=x;break}else{Lc=p}}i=g;return+l}else{if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)+ -1}u=Hc()|0;c[u>>2]=22;gC(b,0);l=0.0;i=g;return+l}}}while(0);do{if((v|0)==23){b=(c[m>>2]|0)==0;if(!b){c[e>>2]=(c[e>>2]|0)+ -1}if(t>>>0<4|(f|0)==0|b){break}else{Mc=t}do{c[e>>2]=(c[e>>2]|0)+ -1;Mc=Mc+ -1|0;}while(Mc>>>0>3)}}while(0);l=+(r|0)*y;i=g;return+l}function fC(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;f=a+4|0;g=c[f>>2]|0;h=a+100|0;if(g>>>0<(c[h>>2]|0)>>>0){c[f>>2]=g+1;j=d[g]|0}else{j=hC(a)|0}do{if((j|0)==43|(j|0)==45){g=(j|0)==45|0;k=c[f>>2]|0;if(k>>>0<(c[h>>2]|0)>>>0){c[f>>2]=k+1;l=d[k]|0}else{l=hC(a)|0}if((l+ -48|0)>>>0<10|(b|0)==0){m=l;n=g;break}if((c[h>>2]|0)==0){m=l;n=g;break}c[f>>2]=(c[f>>2]|0)+ -1;m=l;n=g}else{m=j;n=0}}while(0);if((m+ -48|0)>>>0>9){if((c[h>>2]|0)==0){o=0;p=-2147483648;I=p;i=e;return o|0}c[f>>2]=(c[f>>2]|0)+ -1;o=0;p=-2147483648;I=p;i=e;return o|0}else{q=m;r=0}while(1){s=q+ -48+r|0;m=c[f>>2]|0;if(m>>>0<(c[h>>2]|0)>>>0){c[f>>2]=m+1;t=d[m]|0}else{t=hC(a)|0}if(!((t+ -48|0)>>>0<10&(s|0)<214748364)){break}q=t;r=s*10|0}r=((s|0)<0)<<31>>31;if((t+ -48|0)>>>0<10){q=s;m=r;j=t;while(1){l=GC(q|0,m|0,10,0)|0;b=I;g=wC(j|0,((j|0)<0)<<31>>31|0,-48,-1)|0;k=wC(g|0,I|0,l|0,b|0)|0;b=I;l=c[f>>2]|0;if(l>>>0<(c[h>>2]|0)>>>0){c[f>>2]=l+1;u=d[l]|0}else{u=hC(a)|0}if((u+ -48|0)>>>0<10&((b|0)<21474836|(b|0)==21474836&k>>>0<2061584302)){j=u;m=b;q=k}else{v=k;w=b;x=u;break}}}else{v=s;w=r;x=t}if((x+ -48|0)>>>0<10){do{x=c[f>>2]|0;if(x>>>0<(c[h>>2]|0)>>>0){c[f>>2]=x+1;y=d[x]|0}else{y=hC(a)|0}}while((y+ -48|0)>>>0<10)}if((c[h>>2]|0)!=0){c[f>>2]=(c[f>>2]|0)+ -1}f=(n|0)!=0;n=vC(0,0,v|0,w|0)|0;o=f?n:v;p=f?I:w;I=p;i=e;return o|0}function gC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;c[a+104>>2]=b;e=c[a+8>>2]|0;f=c[a+4>>2]|0;g=e-f|0;c[a+108>>2]=g;if((b|0)!=0&(g|0)>(b|0)){c[a+100>>2]=f+b;i=d;return}else{c[a+100>>2]=e;i=d;return}}function hC(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=b+104|0;g=c[f>>2]|0;if((g|0)==0){h=3}else{if((c[b+108>>2]|0)<(g|0)){h=3}}do{if((h|0)==3){g=lC(b)|0;if((g|0)<0){break}j=c[f>>2]|0;k=c[b+8>>2]|0;do{if((j|0)==0){h=8}else{l=c[b+4>>2]|0;m=j-(c[b+108>>2]|0)+ -1|0;if((k-l|0)<=(m|0)){h=8;break}c[b+100>>2]=l+m}}while(0);if((h|0)==8){c[b+100>>2]=k}j=c[b+4>>2]|0;if((k|0)!=0){m=b+108|0;c[m>>2]=k+1-j+(c[m>>2]|0)}m=j+ -1|0;if((d[m]|0|0)==(g|0)){n=g;i=e;return n|0}a[m]=g;n=g;i=e;return n|0}}while(0);c[b+100>>2]=0;n=-1;i=e;return n|0}function iC(a,b){a=+a;b=b|0;var d=0,e=0.0,f=0,g=0,j=0.0;d=i;do{if((b|0)>1023){e=a*8.98846567431158e+307;f=b+ -1023|0;if((f|0)<=1023){g=f;j=e;break}f=b+ -2046|0;g=(f|0)>1023?1023:f;j=e*8.98846567431158e+307}else{if(!((b|0)<-1022)){g=b;j=a;break}e=a*2.2250738585072014e-308;f=b+1022|0;if(!((f|0)<-1022)){g=f;j=e;break}f=b+2044|0;g=(f|0)<-1022?-1022:f;j=e*2.2250738585072014e-308}}while(0);b=uC(g+1023|0,0,52)|0;g=I;c[k>>2]=b;c[k+4>>2]=g;a=j*+h[k>>3];i=d;return+a}function jC(a,b){a=+a;b=b|0;var c=0,d=0.0;c=i;d=+iC(a,b);i=c;return+d}function kC(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b+74|0;f=a[e]|0;a[e]=f+255|f;f=b+20|0;e=b+44|0;if((c[f>>2]|0)>>>0>(c[e>>2]|0)>>>0){de[c[b+36>>2]&63](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[f>>2]=0;f=b;g=c[f>>2]|0;if((g&20|0)==0){h=c[e>>2]|0;c[b+8>>2]=h;c[b+4>>2]=h;j=0;i=d;return j|0}if((g&4|0)==0){j=-1;i=d;return j|0}c[f>>2]=g|32;j=-1;i=d;return j|0}function lC(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+8|0;e=b;if((c[a+8>>2]|0)==0){if((kC(a)|0)==0){f=3}else{g=-1}}else{f=3}do{if((f|0)==3){if((de[c[a+32>>2]&63](a,e,1)|0)!=1){g=-1;break}g=d[e]|0}}while(0);i=b;return g|0}function mC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d;f=e+0|0;g=f+112|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;gC(e,0);h=+eC(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function nC(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;a:do{if((d|0)==0){f=0}else{g=d;h=b;j=c;while(1){k=a[h]|0;l=a[j]|0;if(!(k<<24>>24==l<<24>>24)){break}m=g+ -1|0;if((m|0)==0){f=0;break a}else{g=m;h=h+1|0;j=j+1|0}}f=(k&255)-(l&255)|0}}while(0);i=e;return f|0}function oC(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a[b]|0;f=a[c]|0;if(e<<24>>24!=f<<24>>24|e<<24>>24==0|f<<24>>24==0){g=e;h=f;j=g&255;k=h&255;l=j-k|0;i=d;return l|0}else{m=b;n=c}while(1){c=m+1|0;b=n+1|0;f=a[c]|0;e=a[b]|0;if(f<<24>>24!=e<<24>>24|f<<24>>24==0|e<<24>>24==0){g=f;h=e;break}else{n=b;m=c}}j=g&255;k=h&255;l=j-k|0;i=d;return l|0}function pC(){c[202]=o;c[4548]=o;c[4590]=o;c[7334]=o;c[7590]=o}function qC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ib(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function rC(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{qC(b,c,d)|0}return b|0}function sC(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function tC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function uC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){I=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}I=a<<c-32;return 0}function vC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(I=e,a-c>>>0|0)|0}function wC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(I=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function xC(a){a=a|0;if((a|0)<65)return a|0;if((a|0)>90)return a|0;return a-65+97|0}function yC(i,j,k,l,m,n,o,p){i=i;j=j;k=k;l=l;m=m;n=n;o=o;p=p;a=i;b=j;c=k;d=l;e=m;f=n;g=o;h=p}function zC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){I=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}I=0;return b>>>c-32|0}function AC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){I=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}I=(b|0)<0?-1:0;return b>>c-32|0}function BC(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function CC(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function DC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ea(d,c)|0;f=a>>>16;a=(e>>>16)+(ea(d,f)|0)|0;d=b>>>16;b=ea(d,c)|0;return(I=(a>>>16)+(ea(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function EC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=vC(e^a,f^b,e,f)|0;b=I;a=g^e;e=h^f;f=vC((JC(i,b,vC(g^c,h^d,g,h)|0,I,0)|0)^a,I^e,a,e)|0;return(I=I,f)|0}function FC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=vC(h^a,j^b,h,j)|0;b=I;JC(m,b,vC(k^d,l^e,k,l)|0,I,g)|0;l=vC(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=I;i=f;return(I=j,l)|0}function GC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=DC(e,a)|0;f=I;return(I=(ea(b,a)|0)+(ea(d,e)|0)+f|f&0,c|0|0)|0}function HC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=JC(a,b,c,d,0)|0;return(I=I,e)|0}function IC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;JC(a,b,d,e,g)|0;i=f;return(I=c[g+4>>2]|0,c[g>>2]|0)|0}function JC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(I=n,o)|0}else{if(!m){n=0;o=0;return(I=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(I=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(I=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(I=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((CC(l|0)|0)>>>0);return(I=n,o)|0}p=(BC(l|0)|0)-(BC(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(I=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(I=n,o)|0}else{if(!m){r=(BC(l|0)|0)-(BC(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(I=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(I=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(BC(j|0)|0)+33-(BC(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(I=n,o)|0}else{p=CC(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(I=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=wC(g,d,-1,-1)|0;k=I;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;J=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;vC(e,k,j,a)|0;b=I;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=vC(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=I;b=t-1|0;if((b|0)==0){break}else{i=H;w=J;v=M;u=L;t=b;s=K}}B=H;C=J;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(I=n,o)|0}function KC(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Xd[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function LC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Yd[a&3](b|0,c|0,d|0,e|0,f|0)}function MC(a,b){a=a|0;b=b|0;Zd[a&511](b|0)}function NC(a,b,c){a=a|0;b=b|0;c=c|0;_d[a&255](b|0,c|0)}function OC(a,b){a=a|0;b=b|0;return $d[a&127](b|0)|0}function PC(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;ae[a&1](b|0,+c,+d,+e)}function QC(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return be[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)|0}function RC(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=e|0;ce[a&1](b|0,+c,+d,e|0)}function SC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return de[a&63](b|0,c|0,d|0)|0}function TC(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;ee[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0,n|0,o|0,p|0)}function UC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;fe[a&7](b|0,c|0,d|0,e|0,f|0,+g)}function VC(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ge[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function WC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;he[a&31](b|0,c|0,d|0,e|0,f|0,g|0)}function XC(a,b,c,d,e,f){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;ie[a&1](b|0,+c,+d,+e,+f)}function YC(a,b,c){a=a|0;b=b|0;c=+c;return je[a&1](b|0,+c)|0}function ZC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=+f;ke[a&3](b|0,c|0,+d,+e,+f)}function _C(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;le[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function $C(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;me[a&3](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function aD(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ne[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function bD(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;oe[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function cD(a,b,c){a=a|0;b=b|0;c=c|0;return pe[a&63](b|0,c|0)|0}function dD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return qe[a&15](b|0,c|0,d|0,e|0,f|0)|0}function eD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+re[a&3](b|0,c|0,d|0)}function fD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return se[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function gD(a){a=a|0;return te[a&15]()|0}function hD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ue[a&31](b|0,c|0,d|0,e|0)|0}function iD(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;ve[a&1](+b,+c,+d,+e)}function jD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;we[a&63](b|0,c|0,d|0)}function kD(a){a=a|0;xe[a&7]()}function lD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ye[a&3](b|0,c|0,+d)}function mD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ze[a&31](b|0,c|0,d|0,e|0)}function nD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;fa(0);return 0}function oD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;fa(1)}function pD(a){a=a|0;fa(2)}function qD(a){a=a|0;qc(a|0)}function rD(a){a=a|0;gb(a|0)}function sD(a){a=a|0;wd(a|0)}function tD(a){a=a|0;ac(a|0)}function uD(a){a=a|0;Xb(a|0)}function vD(a,b){a=a|0;b=b|0;fa(3)}function wD(a,b){a=a|0;b=b|0;ad(a|0,b|0)}function xD(a,b){a=a|0;b=b|0;bc(a|0,b|0)}function yD(a,b){a=a|0;b=b|0;Ac(a|0,b|0)}function zD(a,b){a=a|0;b=b|0;fd(a|0,b|0)}function AD(a){a=a|0;fa(4);return 0}function BD(a){a=a|0;return Vd(a|0)|0}function CD(a){a=a|0;return zb(a|0)|0}function DD(a){a=a|0;return Ed(a|0)|0}function ED(a){a=a|0;return oc(a|0)|0}function FD(a){a=a|0;return Uc(a|0)|0}function GD(a){a=a|0;return Dc(a|0)|0}function HD(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;fa(5)}function ID(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;fa(6);return 0}function JD(a,b,c,d){a=a|0;b=+b;c=+c;d=d|0;fa(7)}function KD(a,b,c){a=a|0;b=b|0;c=c|0;fa(8);return 0}function LD(a,b,c){a=a|0;b=b|0;c=c|0;return Nc(a|0,b|0,c|0)|0}function MD(a,b,c){a=a|0;b=b|0;c=c|0;return Tb(a|0,b|0,c|0)|0}function ND(a,b,c){a=a|0;b=b|0;c=c|0;return dc(a|0,b|0,c|0)|0}function OD(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;fa(9)}function PD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;fa(10)}function QD(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;fa(11)}function RD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;fa(12)}function SD(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;fa(13)}function TD(a,b){a=a|0;b=+b;fa(14);return 0}function UD(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;fa(15)}function VD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;fa(16)}function WD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;fa(17)}function XD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;fa(18)}function YD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;_b(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function ZD(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;fa(19)}function _D(a,b){a=a|0;b=b|0;fa(20);return 0}function $D(a,b){a=a|0;b=b|0;return Dd(a|0,b|0)|0}function aE(a,b){a=a|0;b=b|0;return Lb(a|0,b|0)|0}function bE(a,b){a=a|0;b=b|0;return Ub(a|0,b|0)|0}function cE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;fa(21);return 0}function dE(a,b,c){a=a|0;b=b|0;c=c|0;fa(22);return 0.0}function eE(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;fa(23);return 0}function fE(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return fc(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function gE(){fa(24);return 0}function hE(){return hc()|0}function iE(){return ob()|0}function jE(){return Oc()|0}function kE(){return tc()|0}function lE(){return Za()|0}function mE(){return Cd()|0}function nE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fa(25);return 0}function oE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Zb(a|0,b|0,c|0,d|0)|0}function pE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ud(a|0,b|0,c|0,d|0)|0}function qE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return db(a|0,b|0,c|0,d|0)|0}function rE(a,b,c,d){a=+a;b=+b;c=+c;d=+d;fa(26)}function sE(a,b,c,d){a=+a;b=+b;c=+c;d=+d;Cc(+a,+b,+c,+d)}function tE(a,b,c){a=a|0;b=b|0;c=c|0;fa(27)}function uE(a,b,c){a=a|0;b=b|0;c=c|0;Md(a|0,b|0,c|0)}function vE(a,b,c){a=a|0;b=b|0;c=c|0;vd(a|0,b|0,c|0)}function wE(){fa(28)}function xE(){ed()}function yE(){Ic()}function zE(){xb()}function AE(a,b,c){a=a|0;b=b|0;c=+c;fa(29)}function BE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fa(30)}function CE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Xa(a|0,b|0,c|0,d|0)}function DE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;tb(a|0,b|0,c|0,d|0)}function EE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Nd(a|0,b|0,c|0,d|0)}




// EMSCRIPTEN_END_FUNCS
var Xd=[nD,mv,Lv,nD];var Yd=[oD,PB,OB,NB];var Zd=[pD,Se,Re,cf,ef,hg,jg,lg,tg,vg,rg,wg,yg,sg,zg,mg,Dg,og,Eg,Gg,Hg,Ug,Wg,Vg,Xg,Fu,Eu,Hu,Gu,ch,dh,eh,fh,Og,ih,kh,qh,sh,oh,th,vh,ph,wh,lh,zh,nh,Ah,Fh,Lh,Zh,hi,ji,pi,ri,ni,si,ui,oi,vi,ki,yi,mi,zi,fj,gj,hj,ij,tu,su,vu,uu,nj,oj,qj,wj,yj,uj,zj,Bj,vj,Cj,rj,Fj,tj,Gj,uk,vk,Fk,Gk,Rk,Sk,Wk,Xk,El,Fl,Ll,Ml,em,fm,om,pm,Pm,Qm,bn,cn,nn,pn,qn,wn,yn,un,zn,Bn,vn,Cn,rn,Fn,tn,Gn,xo,yo,Io,Jo,fs,gs,ms,ns,ts,us,As,Bs,Ns,Ms,Ts,Ss,Vs,Ws,dt,ct,Nt,Mt,St,Rt,fu,eu,Au,zu,Cu,Bu,Pu,Ou,Ru,Qu,Xu,Wu,Lt,Yu,Vu,Zu,$u,_u,hz,fv,ev,kv,jv,Jv,Iv,lw,kw,zw,yw,Nw,Mw,_w,Zw,kx,jx,nx,mx,rx,qx,Cx,Bx,Nx,Mx,Yx,Xx,hy,gy,ry,qy,yy,xy,Ey,Dy,Ky,Jy,Py,Oy,Zy,Yy,xz,wz,Ty,Oz,tA,sA,vA,uA,av,gz,jz,Gz,Wz,fA,qA,rA,yB,xB,AB,EB,BB,CB,DB,FB,GB,bC,aC,Ef,bz,Ju,yu,df,jn,Zi,Tf,go,gg,qg,Yg,Rh,Jh,Yh,Hh,Uy,ek,Vj,$m,qf,Qe,Ng,Sg,qD,Qn,io,jo,ko,lo,mo,zo,fk,Kj,Yi,Gp,up,mn,mj,rD,tr,ur,sD,tD,Dr,Ro,Cr,ly,es,gt,iz,bB,UB,uD,jy,iB,hB,gB,fB,eB,dB,lt,Dt,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD,pD];var _d=[vD,ff,Ut,hs,os,vs,Cs,gu,ux,vx,wx,xx,zx,Ax,Fx,Gx,Hx,Ix,Kx,Lx,Qx,Rx,Sx,Tx,Vx,Wx,$x,ay,by,cy,ey,fy,Ny,Sy,AA,CA,EA,BA,DA,FA,wD,Iu,Ot,Kt,sr,st,it,Lg,Ag,Cg,Bg,Jg,Kg,Ch,Qt,xh,yh,Bi,ci,wi,xi,Li,Pi,jj,Ij,Dj,Ej,Nf,ak,dk,Df,an,Of,Om,nm,dm,rf,ck,$l,gk,Dl,jk,Vk,kk,Qk,lk,Ek,ut,gl,il,am,Bm,Xm,Jn,Dn,En,Pg,Qo,Tn,$n,co,fo,po,qo,Zq,kj,ep,Sj,bp,Dh,fg,ip,qp,pp,xp,zp,Ap,Mp,Ip,xD,yD,zD,tk,Tr,Yj,$j,Or,_i,cg,_r,Ps,Ls,Qs,Ht,Gt,Vy,cB,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD,vD];var $d=[AD,kf,Zt,lf,au,kg,ug,xg,hh,jh,rh,uh,Yt,Oh,ii,qi,ti,pj,xj,Aj,Ik,Uk,Zk,Hl,Ol,hm,rm,Sm,en,Us,xn,An,is,lu,nu,ou,ku,ps,qs,ws,$t,Ds,Es,Os,Tu,Ow,GA,IA,KA,QA,SA,MA,OA,$w,HA,JA,LA,RA,TA,NA,PA,sx,tx,yx,Dx,Ex,Jx,Ox,Px,Ux,Zx,_x,dy,Sz,Tz,Vz,wA,yA,xA,zA,Kz,Lz,Nz,aA,bA,eA,lA,mA,pA,zB,cC,$e,ah,YB,el,fl,Am,BD,jq,Jj,CD,Ze,xu,Du,ZB,DD,ED,FD,GD,rB,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD,AD];var ae=[HD,Iq];var be=[ID,ky,ty,ID];var ce=[JD,Jq];var de=[KD,gf,_t,cu,Vt,pk,hu,mu,js,qu,xs,Zs,_s,dv,iv,Ly,Qy,zz,Bz,Ez,kz,pz,rz,uz,IB,HB,vt,rt,Dk,pt,np,Pp,LD,MD,ND,ny,vy,oB,nB,jB,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD,KD];var ee=[OD,By,Hy,OD];var fe=[PD,tw,ww,Hw,Jw,PD,PD,PD];var ge=[QD,lx,ox,iy,my,sy,uy,Rg];var he=[RD,hf,Mh,iu,Wt,mw,nw,rw,xw,Aw,Bw,Fw,Kw,My,Ry,SB,RB,QB,RD,RD,RD,RD,RD,RD,RD,RD,RD,RD,RD,RD,RD,RD];var ie=[SD,Uf];var je=[TD,Mu];var ke=[UD,Yn,Xn,UD];var le=[VD,lv,nv,pv,rv,tv,vv,xv,zv,Bv,Dv,Fv,Kv,Mv,Ov,Qv,Sv,Uv,Wv,Yv,_v,aw,cw,qw,sw,Ew,Gw,Pw,Qw,Rw,Sw,Tw,ax,bx,cx,dx,ex,Cy,Iy,Lf,af,xr,pw,vw,Cw,Iw,Dw,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD,VD];var me=[WD,zy,Fy,WD];var ne=[XD,Uw,fx,YD];var oe=[ZD,oy,wy,Ay,Gy,ZD,ZD,ZD];var pe=[_D,mf,nf,gh,Ph,Qh,pu,ks,rs,ru,bu,ys,Fs,du,yz,Az,Cz,oz,qz,sz,ez,dz,Eh,ot,fz,Ye,Ku,Tg,nt,tt,ho,no,kq,eq,Nn,jp,_e,$D,Gq,Hq,Lu,so,er,zr,aE,bE,Et,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D,_D];var qe=[cE,bv,gv,Fz,Rz,Uz,vz,Jz,Mz,$z,cA,kA,nA,pB,lB,cE];var re=[dE,WA,VA,UA];var se=[eE,Pz,Qz,Hz,Iz,Xz,Zz,gA,iA,fE,eE,eE,eE,eE,eE,eE];var te=[gE,Wy,hE,iE,jE,$f,kE,_y,lE,mE,gE,gE,gE,gE,gE,gE];var ue=[nE,Dz,lz,mz,nz,tz,hp,cp,Qp,oE,pE,aB,$A,_A,ZA,YA,XA,Hv,uw,mB,qE,kB,nE,nE,nE,nE,nE,nE,nE,nE,nE,nE];var ve=[rE,sE];var we=[tE,Hk,Tk,Yk,Gl,Nl,gm,qm,Rm,dn,Np,Ys,Uu,uE,Ig,bh,Pt,Bh,jt,_h,Ii,bi,Ai,Hj,bk,wu,vl,jl,Hn,Qg,qt,Vn,Rn,ao,oo,eo,Wj,dp,lq,fp,op,sp,Kp,Lp,vE,bo,uo,Fq,Kq,cr,wo,vo,Zr,at,bt,et,Xy,Bt,tE,tE,tE,tE,tE,tE];var xe=[wE,xE,yE,zE,$r,dC,wE,wE];var ye=[AE,_n,Zn,to];var ze=[BE,jf,Nh,Op,ju,Xt,cv,hv,JB,KB,LB,Te,Ue,Vf,CE,Uj,ik,sk,DE,ro,Xj,Jp,Rp,vr,EE,Xf,BE,BE,BE,BE,BE,BE];return{_strlen:sC,_free:UB,_main:as,_realloc:VB,_i64Add:wC,_memmove:rC,_tolower:xC,_i64Subtract:vC,_memset:tC,_malloc:TB,_memcpy:qC,_emscripten_replace_memory:yC,_bitshift64Shl:uC,__GLOBAL__I_a:hn,__GLOBAL__I_a295:Hs,runPostSets:pC,stackAlloc:Ae,stackSave:Be,stackRestore:Ce,setThrew:De,setTempRet0:Ge,setTempRet1:He,setTempRet2:Ie,setTempRet3:Je,setTempRet4:Ke,setTempRet5:Le,setTempRet6:Me,setTempRet7:Ne,setTempRet8:Oe,setTempRet9:Pe,dynCall_iiiiiiii:KC,dynCall_viiiii:LC,dynCall_vi:MC,dynCall_vii:NC,dynCall_ii:OC,dynCall_viddd:PC,dynCall_iiiiiiiiiiii:QC,dynCall_viddi:RC,dynCall_iiii:SC,dynCall_viiiiiiiiiiiiiii:TC,dynCall_viiiiid:UC,dynCall_viiiiiiii:VC,dynCall_viiiiii:WC,dynCall_vidddd:XC,dynCall_iid:YC,dynCall_viiddd:ZC,dynCall_viiiiiii:_C,dynCall_viiiiiid:$C,dynCall_viiiiiiiii:aD,dynCall_viiiiiiiiii:bD,dynCall_iii:cD,dynCall_iiiiii:dD,dynCall_diii:eD,dynCall_iiiiiiiii:fD,dynCall_i:gD,dynCall_iiiii:hD,dynCall_vdddd:iD,dynCall_viii:jD,dynCall_v:kD,dynCall_viid:lD,dynCall_viiii:mD}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viddd": invoke_viddd, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_viddi": invoke_viddi, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_vidddd": invoke_vidddd, "invoke_iid": invoke_iid, "invoke_viiddd": invoke_viiddd, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_vdddd": invoke_vdddd, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_viiii": invoke_viiii, "_glUseProgram": _glUseProgram, "_fabs": _fabs, "_glUniformMatrix3fv": _glUniformMatrix3fv, "_vsscanf": _vsscanf, "__ZSt9terminatev": __ZSt9terminatev, "_memchr": _memchr, "___cxa_guard_acquire": ___cxa_guard_acquire, "__reallyNegative": __reallyNegative, "___assert_fail": ___assert_fail, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "_glBindBuffer": _glBindBuffer, "_glGetShaderInfoLog": _glGetShaderInfoLog, "__addDays": __addDays, "_fsync": _fsync, "_SDL_GetError": _SDL_GetError, "_catgets": _catgets, "_sbrk": _sbrk, "_glBlendFunc": _glBlendFunc, "_SDL_FreeSurface": _SDL_FreeSurface, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__parseInt64": __parseInt64, "_close": _close, "_cos": _cos, "_fileno": _fileno, "_fread": _fread, "_TTF_Init": _TTF_Init, "_write": _write, "__isLeapYear": __isLeapYear, "_ftell": _ftell, "_glGenBuffers": _glGenBuffers, "_glShaderSource": _glShaderSource, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___cxa_does_inherit": ___cxa_does_inherit, "_strtoll_l": _strtoll_l, "___cxa_rethrow": ___cxa_rethrow, "_catclose": _catclose, "_TTF_FontHeight": _TTF_FontHeight, "_llvm_lifetime_end": _llvm_lifetime_end, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glVertexAttribPointer": _glVertexAttribPointer, "_send": _send, "_SDL_GL_SetAttribute": _SDL_GL_SetAttribute, "_ispunct": _ispunct, "_canvasWheelEvent": _canvasWheelEvent, "_glGetProgramInfoLog": _glGetProgramInfoLog, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_isxdigit_l": _isxdigit_l, "_glDrawElements": _glDrawElements, "___cxa_guard_release": ___cxa_guard_release, "_SDL_LockSurface": _SDL_LockSurface, "_strerror_r": _strerror_r, "_glViewport": _glViewport, "_sin": _sin, "___setErrNo": ___setErrNo, "_newlocale": _newlocale, "_isdigit_l": _isdigit_l, "_emscripten_set_canvas_size": _emscripten_set_canvas_size, "___resumeException": ___resumeException, "_freelocale": _freelocale, "___cxa_call_unexpected": ___cxa_call_unexpected, "_TTF_SizeText": _TTF_SizeText, "_glTexImage2D": _glTexImage2D, "___cxa_get_exception_ptr": ___cxa_get_exception_ptr, "_glEnable": _glEnable, "_glGenTextures": _glGenTextures, "_sprintf": _sprintf, "_vasprintf": _vasprintf, "_glAttachShader": _glAttachShader, "_SDL_CreateRGBSurface": _SDL_CreateRGBSurface, "_vsnprintf": _vsnprintf, "_glCreateProgram": _glCreateProgram, "_strtoull_l": _strtoull_l, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_read": _read, "_SDL_SetVideoMode": _SDL_SetVideoMode, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_catopen": _catopen, "_exit": _exit, "___cxa_guard_abort": ___cxa_guard_abort, "_llvm_pow_f64": _llvm_pow_f64, "___ctype_b_loc": ___ctype_b_loc, "_fmod": _fmod, "_lseek": _lseek, "_llvm_invariant_start": _llvm_invariant_start, "___cxa_allocate_exception": ___cxa_allocate_exception, "_SDL_PumpEvents": _SDL_PumpEvents, "_pwrite": _pwrite, "_glBindTexture": _glBindTexture, "_open": _open, "_glClearColor": _glClearColor, "_uselocale": _uselocale, "_SDL_Init": _SDL_Init, "_glUniform1f": _glUniform1f, "_snprintf": _snprintf, "___errno_location": ___errno_location, "___cxa_end_catch": ___cxa_end_catch, "_SDL_Quit": _SDL_Quit, "_strtoull": _strtoull, "_strftime": _strftime, "_glDrawArrays": _glDrawArrays, "_TTF_RenderText_Solid": _TTF_RenderText_Solid, "_glGetError": _glGetError, "_fseek": _fseek, "_isxdigit": _isxdigit, "_fclose": _fclose, "_sqrtf": _sqrtf, "_glActiveTexture": _glActiveTexture, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_tan": _tan, "_fgetc": _fgetc, "_glCompileShader": _glCompileShader, "_sysconf": _sysconf, "__getFloat": __getFloat, "_abort": _abort, "_glDeleteBuffers": _glDeleteBuffers, "_glBufferData": _glBufferData, "_isspace": _isspace, "_fopen": _fopen, "___cxa_pure_virtual": ___cxa_pure_virtual, "_glGenVertexArraysOES": _glGenVertexArraysOES, "_pthread_cond_wait": _pthread_cond_wait, "_llvm_lifetime_start": _llvm_lifetime_start, "_glGetProgramiv": _glGetProgramiv, "_glUniform3f": _glUniform3f, "___gxx_personality_v0": ___gxx_personality_v0, "_windowResizeHandler": _windowResizeHandler, "_emscripten_asm_const_int": _emscripten_asm_const_int, "_ungetc": _ungetc, "_glLinkProgram": _glLinkProgram, "_strtoll": _strtoll, "_strftime_l": _strftime_l, "_sscanf": _sscanf, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_SDL_PollEvent": _SDL_PollEvent, "_glGetUniformLocation": _glGetUniformLocation, "_glTexParameteri": _glTexParameteri, "_glClear": _glClear, "_asprintf": _asprintf, "__exit": __exit, "_glBindAttribLocation": _glBindAttribLocation, "__arraySum": __arraySum, "_glGetShaderiv": _glGetShaderiv, "___ctype_tolower_loc": ___ctype_tolower_loc, "_TTF_OpenFont": _TTF_OpenFont, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "_fflush": _fflush, "_glBindVertexArrayOES": _glBindVertexArrayOES, "_emscripten_set_main_loop": _emscripten_set_main_loop, "__scanString": __scanString, "_copysign": _copysign, "___cxa_throw": ___cxa_throw, "_glColorMask": _glColorMask, "_SDL_GL_SwapBuffers": _SDL_GL_SwapBuffers, "_glDisable": _glDisable, "_isdigit": _isdigit, "_strerror": _strerror, "__formatString": __formatString, "_atexit": _atexit, "_SDL_UpperBlit": _SDL_UpperBlit, "_glCreateShader": _glCreateShader, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTISt9exception": __ZTISt9exception, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var __GLOBAL__I_a295 = Module["__GLOBAL__I_a295"] = asm["__GLOBAL__I_a295"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viddd = Module["dynCall_viddd"] = asm["dynCall_viddd"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_viddi = Module["dynCall_viddi"] = asm["dynCall_viddi"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_vidddd = Module["dynCall_vidddd"] = asm["dynCall_vidddd"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viiddd = Module["dynCall_viiddd"] = asm["dynCall_viiddd"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_vdddd = Module["dynCall_vdddd"] = asm["dynCall_vdddd"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






